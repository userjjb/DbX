(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    331501,       6842]
NotebookOptionsPosition[    325193,       6628]
NotebookOutlinePosition[    325534,       6643]
CellTagsIndexPosition[    325491,       6640]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "inner3D", " ", "computes", " ", "the", " ", "inner", " ", "2", " ", 
   "integrals", " ", "for", " ", "the", " ", "3", "D", " ", "FT", " ", "in", 
   " ", "spherical", " ", "coords"}], "*)"}]], "Input",
 CellChangeTimes->{{3.726546418297534*^9, 3.7265464643861704`*^9}, {
  3.726546520456377*^9, 3.7265465356592464`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"inner3D", " ", "=", " ", 
  RowBox[{"2", " ", "Pi", " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "Pi", " ", "I", " ", "k", " ", "r", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], "*", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}]}], "]"}]}]}]], "Input",\

 CellChangeTimes->{{3.718088244149761*^9, 3.7180885039406204`*^9}, {
   3.718088609315647*^9, 3.718088659528519*^9}, {3.71963188646301*^9, 
   3.7196318932353973`*^9}, 3.719632102105344*^9, {3.7197194185755606`*^9, 
   3.719719474369752*^9}, {3.721148037795*^9, 3.721148086099*^9}, {
   3.7211484588050003`*^9, 3.7211485159440002`*^9}, {3.721148645424*^9, 
   3.7211486462980003`*^9}, {3.721149529876*^9, 3.721149531094*^9}, 
   3.7215817498456*^9, 3.730212409118*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "k", " ", "\[Pi]", " ", "r"}], "]"}]}], 
  RowBox[{"k", " ", "r"}]]], "Output",
 CellChangeTimes->{3.730212409668*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "We", " ", "can", " ", "compute", " ", "the", " ", "FT", " ", "of", " ", 
   RowBox[{"1", "/", "r"}], " ", "in", " ", "this", " ", "way"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7265465474719224`*^9, 3.7265465737134237`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"G", "=", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"Assuming", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"b", ">", "0"}], ",", " ", 
        RowBox[{"k", ">", "0"}]}], "}"}], ",", 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "b"}], " ", "r"}], "]"}], "/", "r"}], " ", "inner3D",
          " ", 
         RowBox[{"r", "^", "2"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"r", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], "]"}], 
    ",", 
    RowBox[{"b", "\[Rule]", "0"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.720981647868*^9, 3.7209816544049997`*^9}, {
  3.7209817571940002`*^9, 3.7209818041219997`*^9}, {3.720981864355*^9, 
  3.7209818659119997`*^9}, {3.7211485063970003`*^9, 3.721148529979*^9}, {
  3.7211485832939997`*^9, 3.721148627988*^9}, {3.721589257999*^9, 
  3.721589258332*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{
   SuperscriptBox["k", "2"], " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{
  3.720981656791*^9, {3.7209817628199997`*^9, 3.7209818049630003`*^9}, 
   3.7209818670150003`*^9, {3.721148606686*^9, 3.721148652278*^9}, 
   3.721149539057*^9, 3.7215817664586*^9, 3.721589260461*^9, 3.72158986146*^9,
    3.721590084145*^9, 3.7217160069727077`*^9, 3.7217484577139997`*^9, 
   3.72219158504*^9, 3.723417921300748*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"The", " ", "FT", " ", "of", " ", "our", " ", "de"}], "-", 
    RowBox[{"sing", " ", "kernel", " ", 
     RowBox[{"doesn", "'"}], "t", " ", "formally", " ", "converge"}]}], ",", 
   " ", 
   RowBox[{"but", " ", "IBP", " ", "of", " ", "it", " ", "does", " ", 
    RowBox[{"(", 
     RowBox[{
     "the", " ", "endpoints", " ", "eval", " ", "part", " ", "ends", " ", 
      "up", " ", "being", " ", "0", " ", "to", " ", "satisfy", " ", "that", 
      " ", "the", " ", "result", " ", "recovers", " ", "FT", " ", "of", " ", 
      RowBox[{"1", "/", "r"}]}], ")"}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.726546621200139*^9, 3.726546631406723*^9}, {
  3.726546706131997*^9, 3.726546728980304*^9}, {3.726546790673833*^9, 
  3.726546845645977*^9}, {3.7265497321260743`*^9, 3.7265497456158457`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ibp", " ", "=", " ", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"r", "/", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"r", "^", "2"}], "+", 
         RowBox[{"a", "^", "2"}]}], "]"}]}], ",", "r"}], "]"}], "]"}], "*", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"r", " ", "inner3D"}], ",", "r"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.721149575461*^9, 3.721149601296*^9}, {3.72114978356*^9, 
   3.721149831781*^9}, {3.721150077575*^9, 3.721150081833*^9}, {
   3.721150430348*^9, 3.721150442705*^9}, {3.721150657901*^9, 
   3.721150667993*^9}, 3.7211514162650003`*^9, {3.7265467504475317`*^9, 
   3.7265467822663517`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "k", " ", "\[Pi]", " ", "r"}], "]"}]}], 
   RowBox[{
    SuperscriptBox["k", "2"], " ", "\[Pi]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["a", "2"], "+", 
       SuperscriptBox["r", "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]]}]]}]], "Output",
 CellChangeTimes->{{3.72114959258*^9, 3.72114960175*^9}, {
   3.7211497851280003`*^9, 3.721149832178*^9}, 3.721150082398*^9, {
   3.72115043204*^9, 3.721150443257*^9}, {3.721150659344*^9, 
   3.7211506690480003`*^9}, 3.721151416884*^9, 3.7215817765506*^9, 
   3.721589861565*^9, 3.721590084273*^9, 3.721716006990709*^9, 
   3.721748457757*^9, 3.7221915850810003`*^9, 3.722192260875*^9, 
   3.7234179222268004`*^9, {3.7265467478303823`*^9, 3.7265467837764387`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"The", " ", "FT", " ", "of", " ", "our", " ", "de"}], "-", 
   RowBox[{"sing", " ", "kernel"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.726546864160036*^9, 3.7265468782808437`*^9}, {
  3.72654973695335*^9, 3.7265497429156914`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ft3d1", " ", "=", " ", 
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", ">", "0"}], ",", " ", 
      RowBox[{"k", ">", "0"}]}], "}"}], ",", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"-", "ibp"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"r", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7196404911911726`*^9, 3.7196405894227905`*^9}, {
   3.719692517163888*^9, 3.719692525837384*^9}, {3.719729538887409*^9, 
   3.7197295511101084`*^9}, {3.719729640866242*^9, 3.7197296539239893`*^9}, {
   3.721150703519*^9, 3.721150729847*^9}, {3.721150779554*^9, 
   3.721150791356*^9}, {3.721150886156*^9, 3.721150890186*^9}, 
   3.72115107173*^9, 3.721151421809*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", "a", " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{"1", ",", 
     RowBox[{"2", " ", "a", " ", "k", " ", "\[Pi]"}]}], "]"}]}], 
  "k"]], "Output",
 CellChangeTimes->{
  3.7196405906458607`*^9, {3.719692518040938*^9, 3.719692526523423*^9}, {
   3.721150766658*^9, 3.721150792061*^9}, 3.7211510744849997`*^9, 
   3.721151422887*^9, 3.7215817813156*^9, 3.721589861999*^9, 
   3.721590084785*^9, 3.721716007428734*^9, 3.721748458176*^9, 
   3.722191585505*^9, 3.7234179237518873`*^9, 3.726552256008432*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "Inverse", " ", "FT", " ", "recovers", " ", "original", " ", "de"}], "-", 
   RowBox[{"sing", " ", "kernel"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.726546884210183*^9, 3.7265469002110977`*^9}, {
  3.726549721074442*^9, 3.726549751236167*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", ">", "0"}], ",", " ", 
     RowBox[{"r", ">", "0"}]}], "}"}], ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"ft3d1", " ", "inner3D", " ", 
      RowBox[{"k", "^", "2"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.719713266837701*^9, 3.719713312847333*^9}, {
   3.719713358120922*^9, 3.7197133615331173`*^9}, {3.719713470028323*^9, 
   3.7197134888844013`*^9}, {3.719713584821889*^9, 3.7197136946421704`*^9}, {
   3.719713803842416*^9, 3.7197138048774753`*^9}, {3.719713900735958*^9, 
   3.719713928599552*^9}, {3.7197141092328835`*^9, 3.7197141302610865`*^9}, 
   3.7197141648120623`*^9, {3.7197142177610908`*^9, 3.7197142185241346`*^9}, {
   3.719714262904673*^9, 3.719714267689947*^9}, {3.7197144028876796`*^9, 
   3.719714476046864*^9}, {3.719714537819397*^9, 3.719714567869116*^9}, {
   3.7197145998219433`*^9, 3.7197146064423223`*^9}, {3.719714637027072*^9, 
   3.7197146613994656`*^9}, {3.7197147135824504`*^9, 
   3.7197147310814514`*^9}, {3.719717442978563*^9, 3.7197175203279867`*^9}, {
   3.721150913474*^9, 3.721150993725*^9}, {3.721151054924*^9, 
   3.721151058296*^9}}],

Cell[BoxData[
 FractionBox["1", 
  SqrtBox[
   RowBox[{
    SuperscriptBox["a", "2"], "+", 
    SuperscriptBox["r", "2"]}]]]], "Output",
 CellChangeTimes->{{3.7197145545543547`*^9, 3.7197145689861803`*^9}, {
   3.7197146212111673`*^9, 3.719714662312518*^9}, 3.719714731963502*^9, {
   3.7197174986247454`*^9, 3.7197175215190554`*^9}, 3.72115102874*^9, {
   3.721151059576*^9, 3.7211510782279997`*^9}, 3.7215817885556*^9, 
   3.7215898623269997`*^9, 3.721590085951*^9, 3.7217160085627985`*^9, 
   3.721748459314*^9, 3.722191586659*^9, 3.723417925441984*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{"ft3d1", ",", 
   RowBox[{"a", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7197170124929404`*^9, 3.7197172024358044`*^9}, {
  3.71971729239395*^9, 3.719717292537958*^9}, {3.71971736512811*^9, 
  3.719717365355123*^9}, {3.719717424285494*^9, 3.719717435276122*^9}, {
  3.719719515172086*^9, 3.7197195180032473`*^9}, {3.721151508675*^9, 
  3.721151509611*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{
   SuperscriptBox["k", "2"], " ", "\[Pi]"}]]], "Output",
 CellFrame->{{0, 0}, {0.5, 0}},
 CellChangeTimes->{{3.719717044328761*^9, 3.719717202935833*^9}, 
   3.7197172930189857`*^9, 3.719717365724144*^9, {3.7197174248645267`*^9, 
   3.7197174356141415`*^9}, 3.719719518556279*^9, 3.7211515102390003`*^9, 
   3.7215817919616003`*^9, 3.721589862395*^9, 3.7215900861*^9, 
   3.7217160086308026`*^9, 3.721748459396*^9, 3.722191586741*^9, 
   3.7234179264920444`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "We", " ", "can", " ", "use", " ", "same", " ", "process", " ", "to", " ", 
    "calc", " ", "FT", " ", "of", " ", "\"\<high-order\>\"", " ", "de"}], "-", 
   RowBox[{
   "sing", " ", "kernels", " ", "from", " ", "vortex", " ", "literature"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7265497708502893`*^9, 3.726549801932067*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ibp2", " ", "=", " ", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"r", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"r", "^", "2"}], "+", 
          RowBox[{
           RowBox[{"3", "/", "2"}], 
           RowBox[{"a", "^", "2"}]}]}], ")"}], "/", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r", "^", "2"}], "+", 
           RowBox[{"a", "^", "2"}]}], ")"}], "^", 
         RowBox[{"(", 
          RowBox[{"3", "/", "2"}], ")"}]}]}]}], ",", "r"}], "]"}], "]"}], "*", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"r", " ", "inner3D"}], ",", "r"}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.723421210395873*^9, 3.723421244330814*^9, 3.723428454334203*^9, {
   3.7234284909232955`*^9, 3.7234285571550837`*^9}, {3.7234286198836718`*^9, 
   3.7234286616540604`*^9}, {3.723431440345993*^9, 3.723431444413225*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox["a", "4"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "k", " ", "\[Pi]", " ", "r"}], "]"}]}], 
   RowBox[{"2", " ", 
    SuperscriptBox["k", "2"], " ", "\[Pi]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["a", "2"], "+", 
       SuperscriptBox["r", "2"]}], ")"}], 
     RowBox[{"5", "/", "2"}]]}]]}]], "Output",
 CellChangeTimes->{
  3.723421298214896*^9, {3.7234285166797686`*^9, 3.7234285644535007`*^9}, {
   3.7234286258780146`*^9, 3.7234286621080866`*^9}, {3.723431441224043*^9, 
   3.7234314448912525`*^9}, 3.7265459226421843`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ft3d4", " ", "=", " ", 
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", ">", "0"}], ",", " ", 
      RowBox[{"k", ">", "0"}]}], "}"}], ",", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"-", "ibp2"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"r", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7234215506323338`*^9, 3.7234215538155155`*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", 
  SuperscriptBox["a", "2"], " ", "\[Pi]", " ", 
  RowBox[{"BesselK", "[", 
   RowBox[{"2", ",", 
    RowBox[{"2", " ", "a", " ", "k", " ", "\[Pi]"}]}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.723421557055701*^9, {3.723428526752345*^9, 3.723428546305463*^9}, 
   3.723428665244266*^9, 3.7234319128050156`*^9, 3.72654592781048*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "Verify", " ", "that", " ", "the", " ", "IFT", " ", "recovers", " ", "our",
     " ", "original", " ", "de"}], "-", 
   RowBox[{"sing", " ", "kernel"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.726549860607423*^9, 3.726549879103481*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", ">", "0"}], ",", " ", 
     RowBox[{"r", ">", "0"}]}], "}"}], ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"ft3d4", " ", "inner3D", " ", 
      RowBox[{"k", "^", "2"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.723431554771538*^9, 3.723431556350628*^9}, {
  3.723431653804202*^9, 3.723431657549416*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"3", " ", 
    SuperscriptBox["a", "2"]}], "+", 
   RowBox[{"2", " ", 
    SuperscriptBox["r", "2"]}]}], 
  RowBox[{"2", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["a", "2"], "+", 
      SuperscriptBox["r", "2"]}], ")"}], 
    RowBox[{"3", "/", "2"}]]}]]], "Output",
 CellChangeTimes->{
  3.723431557155674*^9, {3.7234316551652794`*^9, 3.7234316584084654`*^9}, 
   3.726545935281907*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "Looking", " ", "at", " ", "the", " ", "FT", " ", "of", " ", "the", " ", 
    "HO", " ", "kernel"}], ",", " ", 
   RowBox[{
    RowBox[{"we", " ", "notice", " ", "a", " ", "pattern", " ", "of", " ", 
     RowBox[{"a", "^", "n"}], " ", 
     RowBox[{"k", "^", 
      RowBox[{"(", 
       RowBox[{"n", "-", "2"}], ")"}]}], " ", 
     RowBox[{"\[Pi]", "^", 
      RowBox[{"(", 
       RowBox[{"n", "-", "1"}], ")"}]}], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"n", ",", 
       RowBox[{"2", " ", "a", " ", "k", " ", "\[Pi]"}]}], "]"}], " ", "for", 
     " ", "n"}], "=", 
    RowBox[{"1", " ", "and", " ", "2"}]}], ",", " ", 
   RowBox[{
    RowBox[{"what", " ", "about", " ", "n"}], "=", 
    RowBox[{"3", "?"}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.7265498865469065`*^9, 3.726549962087227*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", ">", "0"}], ",", " ", 
     RowBox[{"r", ">", "0"}]}], "}"}], ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "^", "3"}], " ", 
      RowBox[{"k", "^", "1"}], " ", 
      RowBox[{"\[Pi]", "^", "2"}], " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"3", ",", 
        RowBox[{"2", " ", "a", " ", "k", " ", "\[Pi]"}]}], "]"}], " ", 
      "inner3D", " ", 
      RowBox[{"k", "^", "2"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.723431059039183*^9, 3.7234311038947487`*^9}, {
  3.7234311567297707`*^9, 3.7234311632351427`*^9}, {3.7234312205374203`*^9, 
  3.723431237828409*^9}, {3.7234314614561996`*^9, 3.7234314661374683`*^9}, {
  3.7234316274886966`*^9, 3.723431631726939*^9}, {3.7234316645138144`*^9, 
  3.7234317028060045`*^9}, {3.7234317446123953`*^9, 3.7234317689387875`*^9}, {
  3.726546142314749*^9, 3.7265461425397615`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"15", " ", 
    SuperscriptBox["a", "4"]}], "+", 
   RowBox[{"20", " ", 
    SuperscriptBox["a", "2"], " ", 
    SuperscriptBox["r", "2"]}], "+", 
   RowBox[{"8", " ", 
    SuperscriptBox["r", "4"]}]}], 
  RowBox[{"8", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["a", "2"], "+", 
      SuperscriptBox["r", "2"]}], ")"}], 
    RowBox[{"5", "/", "2"}]]}]]], "Output",
 CellChangeTimes->{
  3.7234310606392746`*^9, 3.723431164914239*^9, {3.7234312235685935`*^9, 
   3.7234312389094715`*^9}, 3.7234314678565664`*^9, 3.7234316335650444`*^9, {
   3.72343166636392*^9, 3.7234317036730537`*^9}, {3.723431745993475*^9, 
   3.723431771012906*^9}, {3.7265461370364466`*^9, 3.7265461432608027`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
    "We", " ", "can", " ", "make", " ", "a", " ", "function", " ", "to", " ", 
     "generate", " ", "an", " ", "arbitrary", " ", "n"}], "-", 
    RowBox[{"th", " ", 
     RowBox[{"version", ".", " ", "Note"}], " ", "that", " ", "we", " ", 
     "need", " ", "the", " ", "coefficient", " ", "on", " ", "the", " ", 
     "highest", " ", "power", " ", 
     RowBox[{"of", " ", "'"}], 
     RowBox[{"r", "'"}], " ", "to", " ", "be", " ", "1"}]}], ",", " ", 
   RowBox[{
    RowBox[{"so", " ", "that", " ", "when", " ", "a"}], "=", 
    RowBox[{"0", " ", "we", " ", "recover", " ", 
     RowBox[{"1", "/", 
      RowBox[{"r", ".", " ", "Inspection"}]}], " ", "tells", " ", "us", " ", 
     "that", " ", "we", " ", "need", " ", "to", " ", "multiply", " ", "the", 
     " ", "IFT", " ", "of", " ", "our", " ", "pattern", " ", "by", " ", 
     RowBox[{"(", 
      RowBox[{"2", "/", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"n", "-", "1"}], ")"}], "!"}]}], ")"}], " ", "to", " ", 
     "get", " ", "the", " ", "coefficient", " ", "to", " ", "be", " ", 
     "1"}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.7265499767370653`*^9, 3.726550113417883*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"DeSingKernel", "[", "n_", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", "/", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"n", "-", "1"}], ")"}], "!"}]}], ")"}], "*", 
   RowBox[{"Assuming", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", ">", "0"}], ",", " ", 
       RowBox[{"r", ">", "0"}]}], "}"}], ",", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "^", "n"}], " ", 
        RowBox[{"k", "^", 
         RowBox[{"(", 
          RowBox[{"n", "-", "2"}], ")"}]}], " ", 
        RowBox[{"\[Pi]", "^", 
         RowBox[{"(", 
          RowBox[{"n", "-", "1"}], ")"}]}], " ", 
        RowBox[{"BesselK", "[", 
         RowBox[{"n", ",", 
          RowBox[{"2", " ", "a", " ", "k", " ", "\[Pi]"}]}], "]"}], " ", 
        "inner3D", " ", 
        RowBox[{"k", "^", "2"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
    "]"}]}]}]], "Input",
 CellFrame->{{0, 0}, {2, 0}},
 CellChangeTimes->{{3.7265478363076396`*^9, 3.7265478822692685`*^9}, {
   3.7265479286549215`*^9, 3.7265479515602317`*^9}, {3.7265491264324303`*^9, 
   3.7265491999276342`*^9}, {3.7265492301353617`*^9, 3.72654925265565*^9}, {
   3.7265493442788906`*^9, 3.7265493454299564`*^9}, {3.7265496309642878`*^9, 
   3.726549658505863*^9}, 3.7265538009948*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "Alternate", " ", "approach", " ", "to", " ", "computing", " ", "FT", " ", 
    "of", " ", "de"}], "-", 
   RowBox[{"sing", " ", "kernel", " ", "that", " ", 
    RowBox[{"I", "'"}], "m", " ", "not", " ", "sure", " ", "quite", " ", 
    "works"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.72655019081631*^9, 3.7265502113024817`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"inner3Dexp", "=", 
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{"TrigToExp", "[", "inner3D", "]"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "b"}], " ", "r"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7215810190276003`*^9, 3.7215810675006*^9}, {
  3.7215811737296*^9, 3.7215811760326*^9}, {3.7215812161846*^9, 
  3.7215812745296*^9}, {3.7215813384966*^9, 3.7215814094576*^9}, {
  3.7215814540376*^9, 3.7215815171935997`*^9}, {3.7215816113286*^9, 
  3.7215816117356*^9}, {3.7215818050446*^9, 3.7215818066246*^9}, {
  3.7215821334736*^9, 3.7215821601406*^9}, {3.7215824585615997`*^9, 
  3.7215824636205997`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "b"}], " ", "r"}], "-", 
      RowBox[{
      "2", " ", "\[ImaginaryI]", " ", "k", " ", "\[Pi]", " ", "r"}]}]]}], 
   RowBox[{"k", " ", "r"}]], "-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "b"}], " ", "r"}], "+", 
      RowBox[{
      "2", " ", "\[ImaginaryI]", " ", "k", " ", "\[Pi]", " ", "r"}]}]]}], 
   RowBox[{"k", " ", "r"}]]}]], "Output",
 CellChangeTimes->{{3.7215810573226*^9, 3.7215810678786*^9}, 
   3.7215811763436003`*^9, {3.7215812212876*^9, 3.7215812448816*^9}, 
   3.7215812794306*^9, {3.7215813405366*^9, 3.7215814098686*^9}, {
   3.7215814610146*^9, 3.7215815177796*^9}, 3.7215816127956*^9, 
   3.7215818085836*^9, {3.7215821377256002`*^9, 3.7215821607066*^9}, 
   3.7215824667836*^9, 3.7215898625*^9, 3.7215900862320004`*^9, 
   3.721716008646804*^9, 3.7217484594309998`*^9, 3.722191586773*^9, 
   3.7234179278221207`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ft3d2", " ", "=", " ", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"Assuming", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"k", ">", "0"}], ",", " ", 
        RowBox[{"a", ">", "0"}], ",", " ", 
        RowBox[{"b", ">", "0"}]}], "}"}], ",", 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "/", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"r", "^", "2"}], "+", 
             RowBox[{"a", "^", "2"}]}], "]"}]}], ")"}], "inner3Dexp", " ", 
         RowBox[{"r", "^", "2"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], "]"}], 
    ",", 
    RowBox[{"b", "\[Rule]", "0"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 FractionBox[
  RowBox[{"4", "+", 
   RowBox[{"\[ImaginaryI]", " ", "a", " ", "k", " ", 
    SuperscriptBox["\[Pi]", "2"], " ", 
    RowBox[{"BesselY", "[", 
     RowBox[{"1", ",", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "a", " ", "k", " ", 
       "\[Pi]"}]}], "]"}]}], "-", 
   RowBox[{"\[ImaginaryI]", " ", "a", " ", "k", " ", 
    SuperscriptBox["\[Pi]", "2"], " ", 
    RowBox[{"BesselY", "[", 
     RowBox[{"1", ",", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", "k", " ", "\[Pi]"}]}],
      "]"}]}]}], 
  RowBox[{"2", " ", 
   SuperscriptBox["k", "2"], " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{3.723417990952731*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ft3d3", " ", "=", " ", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"Assuming", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"k", ">", "0"}], ",", " ", 
        RowBox[{"a", ">", "0"}], ",", " ", 
        RowBox[{"b", ">", "0"}]}], "}"}], ",", 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"r", "^", "2"}], "+", 
             RowBox[{
              RowBox[{"3", "/", "2"}], 
              RowBox[{"a", "^", "2"}]}]}], ")"}], "/", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"r", "^", "2"}], "+", 
              RowBox[{"a", "^", "2"}]}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "inner3Dexp", " ", 
         RowBox[{"r", "^", "2"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], "]"}], 
    ",", 
    RowBox[{"b", "\[Rule]", "0"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["3", "2"]}], " ", 
  SuperscriptBox["a", "2"], " ", 
  SuperscriptBox["\[Pi]", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"BesselY", "[", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "a", " ", "k", " ", 
       "\[Pi]"}]}], "]"}], "+", 
    RowBox[{"BesselY", "[", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", "k", " ", "\[Pi]"}]}],
      "]"}]}], ")"}]}]], "Output",
 CellFrame->{{0, 0}, {2, 0}},
 CellChangeTimes->{3.723418680266158*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
    "Looking", " ", "at", " ", "the", " ", "decay", " ", "of", " ", 
     "derivatives", " ", "of", " ", "the", " ", "de"}], "-", 
    RowBox[{
    "sing", " ", "kernel", " ", "shows", " ", "us", " ", "that", " ", "we", 
     " ", 
     RowBox[{"don", "'"}], "t", " ", "need", " ", "to", " ", "do", " ", 
     "fancy", " ", "tricks", " ", "to", " ", "compute", " ", "the", " ", 
     "FT"}]}], ",", " ", 
   RowBox[{"it", " ", "converges", " ", 
    RowBox[{"properly", ":"}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.726555537298111*^9, 3.726555582186679*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", 
      RowBox[{"r", "/", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"r", "^", "2"}], "+", 
          RowBox[{"1", "^", "2"}]}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"3", "/", "2"}], ")"}]}]}]}], ")"}], "*", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "Pi", " ", "1", "r"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7209800692209997`*^9, 3.7209801616619997`*^9}, {
   3.72098153996*^9, 3.720981546592*^9}, {3.721585202229*^9, 
   3.721585203343*^9}, 3.721585251856*^9, 3.721586879374*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwBUQKu/SFib1JlAgAAACQAAAACAAAAnX5iBjFkiz7OCZ26MWpSPZ5a7DpX
IGk/oQQdjvT8Dj/ZTYpyICB5Py7aEnCe+i4/MjfPowrYgj9TY1faLWtBP3dH
WQ4FIIk/xTlo0h/zTj+8V+N4/2ePPxsmL2CqKVg/AbS28fzXkj+lbzCA72Fh
PyS8+yb6+5U/TteC/dmiZz9GxEBc9x+ZP5JnMMge1m4/aMyFkfRDnD/wkTut
B31zP4vUysbxZ58/3LLjc2IGeD9X7gd+90WhP+JsH2QQBn0/aHKqGPbXoj8+
Yhs8cz2BP3n2TLP0aaQ/+rZRHc8xhD+Keu9N8/ulP4RfBwdrX4c/rYI0g/Af
qT8zXH7CXGOOP74G1x3vsao/CadhQAcckT/Qinm47UOsPyOWgj5cIZM/8pK+
7epnrz9mAkX5D3uXP4KLMMT0fLA/w8MF5GnOmT+KzYER9EWxP3jKQ4O2Opw/
nFEkrPLXsj+3lMo67q2gP6STdfnxoLM/C6jG4MAHoj+t1cZG8Wm0P5g8l/vY
bKM/vllp4e/7tT+nl0B5h1emP+FhrhbtH7k/W5KojRClrD/qo/9j7Oi5P2LG
xzxVT64/8uVQseuxuj+IiPqz/QCwPwRq80vqQ7w/a8/J1me/sT8mcjiB52e/
P/EgBV5zZbU/NkHh9fDXwj90+IbiBSW9PzriiZxwPMM/nKx4LVAjvj8+gzJD
8KDDPzRYHX05Ir8/R8WDkO9pxD/N+U99eZDAP1hJJivu+8U/s8KnXJ6Nwj9w
xILxMUnIP0eIr9p2X8U/otAfbQ==
     "]], 
    LineBox[{{0.9274309372305529, -0.1608666506126815}, {
     0.9346440771605611, -0.14549054602035327`}, {
     0.9610576015065643, -0.08726235220773736}, {1.0138846501985708`, 
     0.03058881028405801}, {1.0169660017821842`, 0.037294615805625375`}, {
     1.0200473533657974`, 0.04396472782184487}, {1.0262100565330243`, 
     0.057187600633381186`}, {1.038535462867478, 0.08309358383122598}, {
     1.0631862755363852`, 0.1322091879908467}, {1.0662676271199987`, 
     0.13805150724767307`}, {1.0693489787036121`, 0.14382063429741815`}, {
     1.0755116818708388`, 0.15513117464326978`}, {1.082253161303094, 
     0.16697583845149408`}}], LineBox[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAAnFsVsZZX9j9HiK/adl/FP0Qncl2X
XvY/jHMnTxANxT85crivA8z2P6ZhWUQoeL8/0P87XnHZ9j9gzWB5zB++P2aN
vwzf5vY/8/KgILjFvD+SqMZpugH3P3cZx8kHDbo/6t7UI3E39z99AGBG9I20
P5xL8Zfeovc/kQeSyxv4oj8y2XRGTLD3P+/73TbyNaA/yGb49Lm99z+mtpBN
neqaP/SB/1GV2Pc/Pm1taSbnjz9NuA0MTA74P9sKGbpQ8Ha//iQqgLl5+D83
UPRis9Gnv5SyrS4nh/g/fziDLUNZqr8qQDHdlJT4P157Lerf2qy/Vls4OnCv
+D9qxFp+oeWwv6+RRvQm5fg/9P0CC/6stb9GH8qilPL4PwnDWKWc1ba/3KxN
UQIA+T9RVcsUUvq3vwjIVK7dGvk/2f4TFJQ3ur9g/mJolFD5PxgwouyXfr6/
9ovmFgJe+T980hWWDIW/v4wZasVva/k/ibn0b2ZDwL+5NHEiS4b5PwMqRjzr
PcG/Emt/3AG8+T9kTZ503hTDv6j4Aotvyfk/IlzhrByEw78+hoY53db5P4f0
R1Wv8MO/xhk5iUXs+T/hArNFR5fEvxBk7Xo=
     "]], LineBox[CompressedData["
1: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
GBiekwrEPKGvV/x0yZCa0uH1wSwIxwn0O6TpkyExs/+ISEgwjkBxJydNyKCf
lrpX4FMIDkiQ3GF4gQxP/eX8aUi38PputoDLdmRYbXMKTS6+hX3avy9GOZCB
4UyLl7DsbezxoX30gSsZCtX4lUcU72D7g8aJ6n5k+E4rb5AoGY5nHx6it7lB
hqrVThO/rHBsZU26FhREhunzg6fXuCKwRfi8ecdtMljsdivMXY7Aes8DhQ4m
kMFor2lKYGoUfuBmH2WaTN1vWZ8usx6FNel0/11NIwOPStPqHstofFyW73VN
DhlWTlae/UuIwR143WAknwx/TW1Nup1isIrZ2+6vRWRof+id1NwVgxUDK/P3
VJKhaF1mYueFWFzDTeE+WU1dX377O/puLJYp9Q51qCMDC0GggvN3LJZ8AhcL
W8hg2OsuohcchwvspZ71tJHhTE652hqOw+S1HdpvO8mQG2PRWLkZh4kS09Kk
fjL4bYlGsnnE45TmzvQjg2RYDkxNri2Oxzx6hayWD8ngWT9iqDMVj+PfhPv7
DlPrNegqcqKjYHYvt68pT8hwFPyqdhEpOJLZ1KrpKRm+GEtNmspRMFO2ysjT
Z2RwDh19+uc4BYcqkI8vz5BhjIEmjNOIgrcH6Gu5XpHhXMKbH6kXKDjA8rPY
/rdk8FGUVaO4UfDa0ihF/z0Z3MN1W9avU7B3aBOt60fqPCWqTzy9TcE/BTI9
IxfIEPu9S04kjoKv3A3+UPaVDD2ZTKFPUyh4ETmYDX6jYvm1e2tZFOw8qXd/
bpkMd2v+zMTmU/AnJ4VD9L/JsHH/PV9iEQV/5y476bBGhj9qfM95Sqj67aKW
D/6RgZdN5mdnMQXTXEx22btNhjlnHqWEQgpm5dgREE0nBv057LmUXArmabkZ
u8QoBh9dfdw70ylY+MJa7mlWMTgrnMwpQL3v7GK5UlfPLgZOSyakvHAKlqv/
2MtLEINbSkxOlgEUfPCc1YQ3rxiIvSOvaF+h4OP0E3PTAmKw9vL1irMNBZ+s
0l1VFRYD69c0YwOnKdjIvIc5W1QMvgi5kM4do2DLrUNCW+JiEFHSVyC3l4Lt
yqplbCTFQKtM8CzipWCv9UwDSVkxiM+bMrw4EI8DCrkvhO0XgxuZV44pxcXj
26ciPBYUxaCzwpEx2ywep+Z4J1WpiIF61FK63XQcztNeLOZUE4OvOcH0Y0lx
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
k0+U/jkZhwn523GZVjQQQWdX6kvEY6pdKFbemgYF1iMrLYN4LO+9PeqKDQ3m
0j7qTuHxeE11c+jAHobPJmsT+ZfxWNnmX1CgPQ3rJxNEmiWYfndchzXHkQYV
07O5oTocvFG3wUfJieE7Q2CvkcnBm15NeDbtp4E6uiFVvYGD1eM13XcepOEa
PVVk8IqDNRVCXN840+Cr4F3gMoeLte7UHgxxpeHgRo/iZAUu1vb56SRyiAbu
78Rl1w25WHe+6t5T7jR0zN7GHXPlYrCt3H3Di4aV045HfHO5WG9i2NrWh4ZN
G6ykymq42CBXxeqDLw0bWGqdb+9wsdFWb8sIfxoOcd4pyg5wsclgqZlEIA2R
X/oHLL9xsRnng3Ehi4bDAvQsYoaLLRQVDdWCaEjze7v2jAQP7+hw02sLpmH3
dwflluU8bOV7DjmE0mAs8d3iGc3D1pJvdIeP0KAhVKE/pMLDtjWEdmw4k686
fBtW5eE9uw9slo5k9Dso4vJFg4ftJ0+rF0XRoDz/66vXm3nY8VS/qlYMDbIH
7F4+ZMb7tsluuBtLgxclLtzArN//2mHt/jgaHI2klE4x5x3k5ij9iKeh+kza
njAmnsvqZ4pcLg2tcnltuxg8bp2L5Zcm0GCJlr9bw+B197Mly/k0XFkTYTYz
j4c9F2St3Cqg4d9kRmvPNBd71z6SfZjE4LtkvevSVy723bNguWsKDX6Z2csz
+7nY//eOJeOpNAime8LDGD4D8lIXCtJp0Bl9OeXF8N01W/6bWSYN1z0T7KKz
uVjZ41rnvCzGH7+lWhUjuJjfZVV8/xgN9edH87yZfu6d6oe4jBM0BBpORFtq
cfH27Ggn6xwaMoRPWz5ZyMX5Uwu3LMpl+C312Sw8wsH27fA9+zQN5/VDnENy
OLh+7bO7DgU0JJjaWN305mDpo34lsmdoOLlPov6BNgff25e7v+A8DemtP2WM
nsRjvZ+jXcUVNLgnSot7jMThArukUs+LNIyNT3AjK+PwVBPBVa6i4WvgMftk
vzh8hW+pU1lDw82Mupnm90y/uKKkrL6BhlKptfGDMbFYEL+Vd6SRhm4Fn7qq
NzF46EP3wS3XGT7+LUkX0Y/BZ2pmLbveQoO35keP0t9ReImJY8LtdmZ+RlJt
BCJw0MXvzgkdNOSHpQfaJIfjh9L8rSZ3aYhgq3Z/fRyGkwdqx+7eZ+pDf/MI
4XgEzwqScO1+SsO2Qqe9/zMPxp9Pt6A3b5n6c9BJzDXHBxvPsZM9/56Gtz0i
tz0+e+HzniPjhz7QsJU14TC8xRMfUJOp/PSZhgHvtiijx274yZ0guR8/aGgf
N2EJ9+/FquvFJmtGaZhRLHFId7XHaVmF3cG/aBj9ILLN45MtNt1/L2lykgZp
a5HwnW/NcfEtV/drf2gYfGh2sPOTARZW+rM9aooGqyKPIbdBHeyclrFi2zRT
P2OPrQ0cUMHNo4q/Z2Zo2GckhP4R5s3/B9jnOJI=
     "]], LineBox[CompressedData["
1:eJwBQQG+/iFib1JlAgAAABMAAAACAAAAk+y+SKyJ2j9HiK/adl/FP2gVFywo
lNo/M5b9CWo/xT/GMZKO4/naP7Ect0ja/MM/hGqIU1rF2z92YoXKqkvBPwDc
dN1HXN0/Tt2lmdyYtj8warKOJY/dP3pmUA1T/7Q/X/jvPwPC3T9ffptlvmCz
P74Ua6K+J94/CVM7FU0VsD97TWFnNfPeP32co7bJlqI/e9+meBFF4D/tYkXz
sIaTv5KmRVGAXuA/a4+xim/Emr+qbeQp73fgP835tXTaA6G/2vsh28yq4D9y
uvzJek2ovzgYnT2IEOE/aAZ5OUh2s7/2UJMC/9vhPzQjp0Rb+8C/Dhgy2231
4T9cUvbpmd/Bvybf0LPcDuI/n0mMOJzCwr9VbQ5lukHiPxOSb5l0hMS/CFxX
ludD4j/hArNFR5fEv1fDn+8=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 10}, {-0.1608666506126815, 0.16697583845149408`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.720980111666*^9, 3.7209801622609997`*^9}, {
   3.720981540693*^9, 3.7209815470030003`*^9}, 3.7215852042469997`*^9, 
   3.7215852526219997`*^9, 3.721586880308*^9, 3.721590130528*^9, 
   3.721716033130204*^9, 3.721748483774*^9, 3.72219161088*^9, 
   3.723422015426918*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Function", " ", "that", " ", "computes", " ", "the", " ", "FT", " ", 
   RowBox[{"of", " ", "'"}], 
   RowBox[{"f", "'"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.7265555897521114`*^9, 3.7265556225489874`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FT", "[", "f_", "]"}], ":=", 
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"d", ">", "0"}], ",", " ", 
      RowBox[{"k", ">", "0"}]}], "}"}], ",", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"f", " ", "inner3D", " ", 
       RowBox[{"r", "^", "2"}]}], " ", ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7215871620690002`*^9, 3.7215871837209997`*^9}, 
   3.726555241731206*^9, {3.726555616194624*^9, 3.7265556189357805`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
    "Function", " ", "that", " ", "computes", " ", "the", " ", "FT", " ", 
     "of", " ", "the", " ", "m"}], "-", 
    RowBox[{
    "th", " ", "series", " ", "expansion", " ", "of", " ", "the", " ", "n"}], 
    "-", 
    RowBox[{"th", " ", "de"}], "-", 
    RowBox[{"sing", " ", 
     RowBox[{"kernel", ".", " ", "We"}], " ", "need", " ", "to", " ", "do", 
     " ", "some", " ", "tricks", " ", "so", " ", "that", " ", "the", " ", 
     "FT", " ", 
     RowBox[{"doesn", "'"}], "t", " ", 
     RowBox[{"choke", ":", " ", "First"}]}]}], ",", " ", 
   RowBox[{
   "we", " ", "leave", " ", "out", " ", "the", " ", "FT", " ", "of", " ", 
    "the", " ", "0", "th", " ", "series", " ", "term", " ", "and", " ", 
    "tack", " ", "it", " ", "on", " ", "at", " ", "the", " ", "end", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
      "since", " ", "it", " ", "requires", " ", "special", " ", "handling", 
       " ", "wrt", " ", 
       RowBox[{"it", "'"}], "s", " ", "FT"}], ")"}], ".", " ", "Second"}]}], 
   ",", " ", 
   RowBox[{"we", " ", "use", " ", 
    RowBox[{"List", "@@", 
     RowBox[{"Apart", "[", "]"}]}], " ", "to", " ", "break", " ", "the", " ", 
    "series", " ", "expansion", " ", "into", " ", "a", " ", "list", " ", "of",
     " ", "individual", " ", "terms", " ", "based", " ", "on", " ", "the", 
    " ", "exponent", " ", 
    RowBox[{"of", " ", "'"}], 
    RowBox[{"r", "'"}], " ", "and", " ", "compute", " ", "the", " ", "FT", 
    " ", "of", " ", "each", " ", 
    RowBox[{"separately", "."}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.726555652438697*^9, 3.7265559079733124`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Fdesing", "[", 
   RowBox[{"n_", ",", "m_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Total", "[", 
    RowBox[{"FT", "[", 
     RowBox[{"List", "@@", 
      RowBox[{
       RowBox[{"Apart", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Normal", "[", 
           RowBox[{"Series", "[", 
            RowBox[{
             RowBox[{"DeSingKernel", "[", "n", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"a", ",", "d", ",", "m"}], "}"}]}], "]"}], "]"}], "/.", 
          
          RowBox[{"a", "\[Rule]", "0"}]}], ",", "r"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"n", "+", "1"}], ")"}]}]}], "]"}], "]"}]}], "]"}], "]"}], 
   " ", "+", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "/", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"n", "-", "1"}], ")"}], "!"}]}], ")"}], 
     RowBox[{"d", "^", "n"}], " ", 
     RowBox[{"k", "^", 
      RowBox[{"(", 
       RowBox[{"n", "-", "2"}], ")"}]}], " ", 
     RowBox[{"\[Pi]", "^", 
      RowBox[{"(", 
       RowBox[{"n", "-", "1"}], ")"}]}], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"n", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{3.7265552444633617`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"d", ">", "0"}], ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"G", "-", 
        RowBox[{"Fdesing", "[", 
         RowBox[{"1", ",", "5"}], "]"}]}], ")"}], "^", "2"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.721718892902774*^9, 3.721718893062783*^9}, {
  3.7234247828152037`*^9, 3.723424782962212*^9}, {3.726555945740473*^9, 
  3.7265559579051685`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"3059", " ", 
   SuperscriptBox["d", "3"], " ", 
   SuperscriptBox["\[Pi]", "3"]}], "1048576"]], "Output",
 CellChangeTimes->{3.721718899456148*^9, 3.721748513468*^9, 3.722191640413*^9,
   3.7234247838162613`*^9, 3.7234248161761117`*^9, 3.726555976591237*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"d", ">", "0"}], ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"G", "-", 
        RowBox[{"Fdesing", "[", 
         RowBox[{"2", ",", "5"}], "]"}]}], ")"}], "^", "2"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.723424777806917*^9, {3.723424820936384*^9, 3.723424821771432*^9}, {
   3.7265559862117877`*^9, 3.7265559880718937`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"49021", " ", 
   SuperscriptBox["d", "3"], " ", 
   SuperscriptBox["\[Pi]", "3"]}], "33554432"]], "Output",
 CellChangeTimes->{3.7234248386673985`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"G", ",", "T"}], "}"}], "/.", 
      RowBox[{"d", "\[Rule]", "0.1"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "20"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<G\>\"", ",", "\"\<T0\>\"", ",", "\"\<T1\>\"", ",", "\"\<T2\>\"", 
      ",", "\"\<T3\>\"", ",", "\"\<T4\>\"", ",", "\"\<T5\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.721591595961*^9, 3.7215916242679996`*^9}, {
   3.721591681087*^9, 3.721591681821*^9}, {3.721591870623*^9, 
   3.721591922323*^9}, 3.721716414621024*^9, {3.721716485479077*^9, 
   3.7217164933445263`*^9}, {3.721716553266954*^9, 3.7217165573621883`*^9}, {
   3.721716625591091*^9, 3.7217166368317337`*^9}, {3.721716693277962*^9, 
   3.721716694426028*^9}, {3.721718664836729*^9, 3.7217186771554337`*^9}, {
   3.7217490973859997`*^9, 3.721749136005*^9}, {3.7217501761099997`*^9, 
   3.72175017625*^9}, {3.721750220472*^9, 3.721750291709*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
pm6AIA3+B/2FxZk=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
DgWyb5Ua9WMD9D85Avvw
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
t/7+JUN4o9OXSeMY9D9cUQo3
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
gji928NhZ9oxSYnHXGbdJNA7xEL1kr4d29D0pH8/sn+fxw2KVe82LNdvdqVn
nQT+Mp3QqN+KbZ4K6wvdIIGU5/VSugOt2KkDAuXKm/v+hR2Cs0wrxrCn55W4
TYKGbj9Dc6pWLOBW0fRJKjKcbcSV071swfQK3UbfsZNhRXX8Qp16C7by+Xv7
W0Uy5HBHasWfb8J+XZdqtVEiQ5ks+nDRsAlbxzk1LSuTQVDSBR+q3IRtnv9S
x0skQ7qlatPE2kuMYn3kieMBMpD51WLmw19iHCx9WX91yGA7FUPN9l8jRtCq
91KwJYOqZV/Y4GYDRvryx73RjgzMpkdE6L80YGoRGm4mDmRgUL52zvxVA3aw
s8rhojMZ+lQSzpPSGjA4XW7R6kGG1OFZBT7lBsz0wn/IKng//8k3zPJ8Peab
k8gdl7zPT/MbKS7VYt2U0suGqWQwVtE8fX+gFlM839DFkk4GF17CHXxDLfad
+CM8JZMMRsJvnLJjajHLN7CSdZ8MmqXVE8+larGjv9a6Cx+TQbbbvmbS4TnG
p28d3fGGDJZ86gyEn9VY4JMVx+i3ZBD4M/Bq8GM19p4r5oj+OzLUfRCyTm2t
xm6NV62/6yXDGQ300Ox2NUYRyOo8MESGg9UC8wtHqrH5+y1o6hsZXhs9avJP
r8L0qM8KF0yTISnGXiv2ehVW4L604fpjfx4WdfoajyrMnixUPje/75c+K2MG
VdhgZ6DI6ioZtvi3VlJ+VmJEFabNyjUyKID9sbOjlVhSet5A0G8yFE5VKZBf
V2IGdj3xm5v7733SyxifW4kVtju7NWyRwf+DooNefCVGo7ClHbJDhgnB9OLL
wZWYY1KKKLZHhuwVNs5mp0qsaU32779/ZPiHw0UKmVRi/wNDPBdl
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
tYOomVf8vbFBxy2P5/iXJDuI/wGfiEgu
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.363898, 0.618501, 0.782349], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
tYVlRILaKe355WUCLfVKsvt0SPA/Kj0nDQ==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 20}, {0., 0.061334499752884644`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"G\"", "\"T0\"", "\"T1\"", "\"T2\"", "\"T3\"", "\"T4\"", "\"T5\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7217186782804976`*^9, 3.721748488469*^9, {3.7217490991140003`*^9, 
   3.721749136602*^9}, 3.721750176748*^9, {3.721750232414*^9, 
   3.721750292296*^9}, 3.722191615663*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"G", "-", "T"}], "/.", 
      RowBox[{"d", "\[Rule]", "0.1"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "15"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<G-T0\>\"", ",", "\"\<G-T1\>\"", ",", "\"\<G-T2\>\"", ",", 
      "\"\<G-T3\>\"", ",", "\"\<G-T4\>\"", ",", "\"\<G-T5\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.721591250315*^9, 3.721591272101*^9}, {3.721591383284*^9,
    3.721591396076*^9}, {3.721717192975543*^9, 3.7217172571222124`*^9}, 
   3.7217173530366983`*^9, 3.721718992932495*^9, {3.721749214499*^9, 
   3.721749243398*^9}, {3.7217501659630003`*^9, 3.72175016979*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwBoQNe/CFib1JlAgAAADkAAAACAAAA3ormYw4aEUByQSy7OwyOPz9bgtEt
VRJA5EyqIA3jij/vwUKTlpYTQP0k+bq9Hog/NOYSUlbCFEDT2eWAMuGFP/O+
SkdyBxZAe+SzOtDCgz9IVZI55TYXQEIYePDrB4I/F6BBYrR/GEDD3FrWgWKA
Px1Qc/CGwhlArXFspFvufT+4vbR7sO8aQLVWg2yKlXs/zd9dPTY2HED5vyiB
b1J5P3e/FvwSZx1A5a2vHo1wdz9YBFIg85EeQA4M63cNyHU/s/30ei/WH0A7
aN7AXyp0P1LaU2lhgiBAQJ/zFNrOcj8IEGEwWSYhQH1Qrsf2enE/WXgvqlLH
IUDqY6Z39k1wP3W/haJ3XSJAUxdgAd+dbj/O4A+2SgAjQJz0x/Rfpmw/8uAh
SEmYI0Abdmbvy/lqP7ET9YxJLSRAs5j+f0V4aT+tIPzs984kQNyy8IiZ+Gc/
dAyLy9FlJUCrnxcgy69mP3jSTcVZCSZAweNIcdVnZT9Hd5g9DaImQCqP9Omp
TWQ/sU6kaMI3J0D2NqZHYE1jP1gA5K4l2idARgBa2fpLYj/KkKtztHEoQD5T
lLdGbWE/efumU/EVKUDxzre1PI1gP8OYY+YvtylAT04xElWCXz/YFKj3mU0q
QCRpC3lpH14/KmsgJLLwKkB0jdhYO7hcP0egIM/1iCtAl8Zdm/J+Wz//B+Is
Ox4sQB9ioijDXlo/9EnXpS7ALEByHusskzlZP7RqVJ1NVy1Ap+gq3dA4WD/A
ArZm8FktQNcPBz95NFg/y5oXMJNcLUB1co3KIjBYP+LK2sLYYS1A4ZPzXHkn
WD8RK2HoY2wtQIj2qWM0Flg/buttM3qBLUBzT3qd4fNXPylsh8mmqy1AODi+
8RWwVz80BOmSSa4tQLPoI8Diq1c/QJxKXOywLUBrCF+rsKdXP1jMDe8xti1A
S4fG1k+fVz+GLJQUvcAtQH+Jenabjlc/5OygX9PVLUCQLgODZ21XP/CEAil2
2C1AR9dU8EVpVz/7HGTyGNstQMcRU3QlZVc/Ek0nhV7gLUArzNC+51xXP0Gt
rarp6i1AgGY7U3lMVz9MRQ90jO0tQKyHWmtgSFc/WN1wPS/wLUCOlCGXSERX
P3ANNNB09S1AvzAoKBw8Vz98pZWZF/gtQHCGqIwHOFc/hz33Yrr6LUBxVFID
9DNXP5LVWCxd/S1AU2TGi+EvVz+ebbr1//8tQHCopSXQK1c/lUOY3A==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
+n/1EwsLbPQ421VwWY4D/wfGgmbu
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwd1nk81M//APBNjhKShOTYSwg5k6JeU+TKfUWuXUc6kCOFVBt2V5eKDoQ2
UaJ8VVIJb+mkkiNHopA79xlRv/n89p99PB+vec+8ZuY9r3lTfA47+PORSKT8
JSTSf/8z36te089d2U76/x+bmDPWDtzREgYkEoseH8Ym/Ev6nGVaYrHtvs1h
19QXT680OY+dtCY3nE3cmK6sXtqShP0kknuETdSezkv7d+H6f8//TIpgE/xi
SQf/GKdj3/F5e5RNyH0yyvgTwwMSK55QiGQT+sla7LnmLOxRk9QoNmHnRg+a
1ckBEtqarnucTRxUlHGevnAXSBUfi3/FsImb+f/o48b3gcQYFClgsYmS0EmR
0cwC3H6V4pNYNjF4Izx6JqYQ95ef3BCPx/cJ8JlqfoQ9dMv+DJtYtYvpEi5Q
hG04UXCOTSiouFtO6DwBUm2ziGIimzAYsdEZu/AU9//nk24ymwiK1ucbMi4F
0rKAy9KZbOJQFV/deHMlkMZWp6gUs4mJkn+WD4NfASklp935OZuIvL/wOkTg
NZD8HBbOlrIJzsWZZ6M6b4C0kNsn/IpN8JwHecMX3gGp6IeJcy2b+NJZFzJg
/BGPvxhb9gvnc8IuYay5Ho/fveIBjUOQfvY73FVtANJ1R9dQZQ7RZX5a3us4
trCau64ah8iRfPTog8IXIM0vv/A/HQ6hfn91+x3/RiCJjuvH7uAQW781aXtO
NgOp9OMQ04tDyO04vLB6VwuQ/M/c62NyiL93hN5VX8M+cqMzwJ9DvAwz8DDY
+hVYrdUKewI5hLlwGmf16VZgfZOOHYriEC5bPL9VibUDS78nuSGZQxjcnM5h
MbCd8nij1ziErEBiyOZH7UBSH1tcmsYh2mvLBXKcvwPJ2dBwDY9D+O0na7HS
fwDpzL0fTfkc4vmH0J3r1nQCq3Si/eVLDpH3t+zuzDbsoETbPa85RJq2sGj9
vk4gtZTd/PmWQ8Rcz2pOeNYJ6AI5ueMDh0C+DYEz7l1Akg3rPtDIId7N612v
y/oJpASze/d7OcRBJVrb7PufwFKhkbn9HELMbhVFYRQ7MLjedRDPJ2c476Bh
N1Q0XXndOcwhum3vlC/90g2s0YjhhCkOkRB9ZemGeewFGSu5GQ6hlhNrbkfu
AdbBV7fvzHKIsHmv+vRA7PphCm8e71eOdO8mgV4gtYXdUiJxiezPAmoear1Q
QfMRC1nCJczmJw/H2mO7iOx8yMclEm1r52oyegE9qeyXFuASOtHl26df4eej
x+23CXKJxuz7cesGcfs0hWA3IS4hN58gul+/DyqiBQoilnOJCvoxh0QP7KAz
VRHCXMLX1v96UWwfsE5ncgNXcIm87B2UJZ9x/IBB+zZRLmHzWXOf8nQfkPok
g2XEuMT4nHy+9bp+YFhpXRnANrCd10sL6Afe9q9XDotzibao/qiKC/1AOqd7
kL6KS5zKbirvfdwP5Aa/6s/Y1M+vl4q29gPLYefjUAku8XbukbkuaQAY3h+p
wqu5xEH6rQtu6weA9VJDOhVb1PZi/SmrASAJvUhUkOQSTtmHPD6mDADvdOQS
0TVc4neN262Jctx+Wm4+AvvGnFmvTM8AdFz8EtKIvZ2urwYrBoFl+sJPTYpL
dNnQQ/y1BwGRVzcew+ZESTw5t2cQSGnGL0uwN2ST5h+eGIQKya8qU9g1NSPb
W24PQodJ/Aq6NJcInWuL+1uF41lrD1hiS9I/vKePDQK57dKOAOxnNs9Fd0v9
AmTNfzUa2yPqrkOo0S8gRxT6xmOTsq9ev+7zCzoOTz74z9k1cW1lCdjhVkeO
Y5vNhVK6C34Bz9r96X7sQRpjn3Ajfr7rxzEr7EQbm3ytP7+A8eB58XpsnSij
MRfKEDAs+o7M4nwbb2/YdMJsCNAY+3E5dmSNTPTtIGyhuvAYbLk5QaIqeQgq
silPtbAraNNLx55jy42c/IbXy9fmp7lUxxDwEqs+xmALRtVdMBIcBlaIb5Yk
dt5tot5HfRh4NO6S23g/pmS94qvsh4FUHBG0ARuSFjZpHRuGCtmXr3Px/n1h
bUldfInbr4nadhbvt8LvZku/vmEg71L2Hcbvw4HDRxeqRUagorwoxgz7r+dj
75Q9I4Amxq90rOQS5o32q/7FjACDnZ6iiJ1sNVbpnzUCZJ91ac74/VMx1Fiv
OzwCLPaJW3dEuIS9zN2hT7GjwDv+VqJ9GZdIv7grUy93FBith5y/4PPQK9ht
e+PTKJC/f35Qic9LWfQlNz2RMagQNH4Qz88lHA58Kl2yZwxYbybNM/9xiNns
9DVPDuD4M9oNm78cIr3jUPD+mDFgZHxUnFngEH17hMmfb41BR5lu7QZ8nmNM
zeLSh8ZgbHfKdjVcDyixUm22/7BdXK9eneAQb8t69JZKjENt4BmYHeMQqzbF
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
R50hM6hk+t8/DRRnELmzdMgZ/g8yrlE1
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV13k4lF0bAPBBligkW5LEbIQoSUXnVipb1pmxVkgRLcKYsSQppTdKqEQJ
EUm9EhLpEZKdyPIKqRAtyL77zvfXXL/rzHnO/Zzlvs+zyfWs9XFeEonUwUMi
/f93qqe6gnw9bo/lszAbK0U/Ynaf1imDDh/kPYVU7X3YxPGiH0zZjjAEJQNH
T2A3NBdMihlGolLC1TUYO3GyrIavIwaN+t/dkojddDErYTnqLqJ3/60ow14h
GuM5v+8+IsXrbxzHlq/XezAfnIw0c+p2qfmyCZ1YzfDZ9lRU2haw9gy2pT35
9PTWdGQp+CKtENtzoyxzMioDJU+dGhLxYxOX+0X0xwefoNAesy537IdPl8l/
92Uj7xVRnDrsonPjq0aSniPub/H8nWw28TPRN3AqOAdFi7jd+Bd7hau760R7
LtK8LTGb588m1ux3Yfny56HewukgQw6bUKA7moxtzUehTz6c78LWHTbfOhr1
ChmJ0nsoAWxi/0cj6tniQkRatVatHds6b6/c8OBrRBdMa48OZBOnA3V4f+97
gzJnKpU3BLOJwMOaU57nSlDTp5YXI9gRoPpzKOktEioM4dacZxNWfGJD48Gl
iGvrEBF/gU14VfN+/NtehkrZ+nG3L7GJsaJlkxdnypGmY0VN5mU2wc1eqPDm
r0DxXmED5eFs4srNqcKRre9R8obK5DURbCKZ+TP5T9QHJHt/b8/KKDZBPfhD
7hm5CuVMsBcdbrCJZ7p9caeKqxAp8kray5t4vtb3RPwarEaKdTT7oBg28enr
R++hfXUoJz1xyTWeTTi0NPzM7KxDg9lly8P32MTXilo3j3P1SFOgXTkskU0M
Z7y3+5HUgJqiApNLkvD8vnJKHgtuQvEJwzNX0/F8nreMGG1vRt5D9dZH8tgE
6fugdYZKC0p+39gfWsAmvhld3HAkCDvqV2dWIZtIl8zNrVX4hDSVLj2SLGET
atlrux8fb0U5pICX+pVsYtfnNq3D4+2IzrBsav2PTbB2Hv5cLdqNxBf7Xe7z
+xO6DyfTQ527Ua/U94dXhfwJOf4b3jtycTthMcoR8Se6m97ypzN7UMTrgfPu
a/wJNw9FzdD7X9DgwY69oRv8ide15/aul/qKeqMzdkbo+BMf5rTvfkz9jiJo
/mfPefkTnhTlrumq78hZgM805Yw/IWq5ZpPCyHdUlXvtTss5f4KV/ifLc3cf
8kihGSKuP9Fn8fgt36c+VHpex1Mr3J8gpcsMbOcfQM7b5K/6PcTxWsxpJ7gP
ol6H2hNSrf5E1iOi2VXtDwLp41p9BhxiQu7I5WqrP6gUHNW27+cQKGZhuybn
DypcJtzCjTjEp9Cd9xbf/UGkrsvHlC04xNLhl0fjbYdRcmyWL8OJQ1jJZvyu
DxtBdkm7vlz05xDBBw5euv97FIXe90+reMIhNoVJd1ksj6Jo/rKqoWwOUVnS
r80n8RfJmpv9XZXDIdZsvzxwcsdfpLnsv/lQAYd4rPzOeEfYXyTuf/lQXhmH
aCLtFm+WGUOhehaE1GcOoVys8UBw3zhStDKr+bWSS4j7uL22tB1HpG3Z4Uur
uMQCPaH1ntc4ypEXf71anEu03eEXVYsbR7qsLtdN0lziH5+uEMv+cTTKr1cu
r8QlRlX+cb53dQLJyu+adtzJJd7G9ytvrptEHn2C1e/cuMRTi/Xg1zuJzLJD
vlu7c4l4ASunkolJ5Jd24OyXk1zCx+9NnMWGKTQ45PP25xkuQbGM5fc7M4Uy
VS9wq7lcIlLQ4Mcb8WmUnJgRlHKdS9j7388yZ86gzBTPtdHPuISiyiMdfY8Z
lPPROc/lXy4x8PlJ2eagGaR7aThX4wV+vsGrTqGUGZSXtbuwKA/Hv6pZuPz3
DBosEvFJKOYSb1IFvXZcnkWjd8R3s6u4RBhTdJpydxZ1RFz9PFfNJYyEpC5J
Zs2iqqij94NquUTraaXEv42zaLDZ49yZBi4xrKtf+3T9HMp+8Up43ScusbHR
Z7PiyzkkJCSudqEHx3Mx4JVo5RyyzJQzzf/CJbK1Q/ctdsyh3pqtdgO9XEI3
Icqxc2kOVTi6ae38ziUsj2dejzOZR5Z947EpP7iEtOy/MpcOz6PSt8btzwe5
RFdN/qNz3vMokv/EeMEQlzipWV5sfmceyRavyn71C8c/3/1L6Ns8cpqa+hw4
guN/3seZnphHVZEKqUdGuYSoyy++AcEFNOpuoKH/l0skVs6sL1dfQH75tTd/
jnGJvFtrzc4HLKAIspm+wBSXCDSU6/CKXECD74/NENgwrejm8HABdcxInPSb
5hJ1ThrBO94voFMhhcfqZ7hEP804+6/4IiqUyLiO5rnEGLNgnk1ZRJpIOLQT
m3RZ2XRu5yLyuC6mfnaBS8j3Lg7xHltEE93DmeGLXEJV1GvnVc4iyqzv8RVc
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
2yMHnizaoP8Bopu96w==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV13k8VN8bB/DJOvalkiTZss2MUKlUzkOyL5MQoqzVCJeohCRJKkqKJKRC
svSVZKk4EiKSUpEkRUJkiYjkd35/zev9eu695zlnzv2cGQUPytabi0ajvV1E
o/3/83d3Y63y+Sv6tDwjEw+fffjPNm1fg45DKPPHiWP7n3Cw96Pv9tIdUajo
flGNL3HLm9IpMaM41MOkEg8TX5+qecHdkYiqFfUHTxK3nsxLXYi/imgbBBsu
EfOIJvrMbUtDPacerckmln25JX0uPBP1fNmt8IRY97LW6T/ttxC7fUXGe2K2
k7LftE426rmz/c4ksc8qafup+DuIvZ6hL1XJwdHfhLb+GriLAiKNvDYT38hf
UB7fVoCq7yxe4UX8KPCX8GjGPdRqpuWVQDx0PSj0d3gRGtPXN6gm5vHY7zHZ
Xoyql9CrNKo4WGK7u0MQbwnquWbt7k0sp7bbfELnIQo4nXrjNvHGn9Y6Y/Fl
KHPt80kNzMHbX5uqUI/LUYJWuFgwsW2JoczPgQoEkl+aq4n9QnW5hrc9QeIt
Nzd4V3NwqKvWb5/AShTQRRt8QhwLGkODGVUo4Lj4dumnHLyDW2zwV3g1yszb
z9tJfLCR6/V4ew1qxSY9Z59x8MSjBfP7/s9Q6z2O/AJxSMHf2gDeWjQmmboi
pJaDYy7+Lh/VqUMJ/iYWh+s4ONN+KHMk/jlqDWM1pD3nYBWT7zKFyg0ockR5
uVYDBxdu7Lvi+7gB9RjJrX9O/GhFd+yPgUY0dqPmHe0FB7/98jpgcFsz6mlz
/HmzmYOd21qGcjub0dgrnuadLzn4S22T14HAl6h6/+FTAi0c/PNOneP3jBYy
/3Mxka/I+pa5ZE6Et6LIblXh9DdkPY+zY8fa36BIiULq0gcOpvUO2N5Rb0O0
XW2CyZ0c/NX05Mo9YW1I/luZ6Y2PHJy9pLi4Se4tKlItK8afOJhZsPhTjvc7
JF7ltm/jVw7W+/he2/VXO5Lvu7JTcJjsJwPq7+LtHUh+PKjIaYSD/+XwP3+R
3IEyTf2eFv7k4KeHNrps1PuAtOZ/LfIa52BTwdSYxSc7Uc/jZwIC0xzssMn1
Y6PoJ+QW/MBzPbcP3nhjKjvS7RMSp1OrW3l8sAzvhYANxZ9Q5J1V6RSfD/7U
WsWbbd+N3G7eLHgi4IO9DshrRaZ9RrHvvLZcFPfBFU2BhiuWfkHs8cMHl67y
wc9n1119fasX9Vxul01HPthntVLXdEMvKg/d4XLHwAeLsiUU5EZ70ZiVX8LD
bT7YIXskz2dzHwowyG/5ZOKD+2xyqrjf9qGGzkyOK9sH07KX9a/n7Udas0aq
yzxIvzaz61L3DyC3sIERj1gf3HVs4Fh1/ADSSj0v9/2cDz6R9b6q/8EAKpp9
P+of74Pr/xSbrqUNop5/rP1nE32wXdZBl+aUQQRB68wH03xw4J+uU/8ah1CR
l/PLHcU+OO82fuPBHEFuj50t8j/74EmZPdGNO0aQ/AXNwvivPhgl/l2vdXQE
hbyhlgZ988FvIzddm386gmKF7w8Y//DB/1wf7E3Z9RMVKQ0oS0774B3Sd4Zf
Ro0i+vnptWvFDuJwY5NTacNjyM2/cW+kwUGs9FgznX/bLySPznrpFR7ETkfS
8qztZ9DYXXv6iQJf/E3VrGBcfB7NhF0ff5jphyfsS+cOr55HRTWvA55m+WFa
tJLF7KZ5FLD4xdWmXD8s2zM/yOU5j6B7sPpjkR+2SylWXfKQXC8h82So2g/X
0GVv6zr9Q5nl1UaVPX44Y/DntbCbC8htycqfPKv8cYH9i2dcyxeBo9NSnaIr
/rhroYBvqdIiCHlQVy6f4o9F8i6aqbIWgWnfGa8L1/2x/z+7VxYGiyDlrcFS
91v+WPvO584rnEUgH19q2PufPy6dmRxXebQIZnRvSTu88MfV11fJW+zmAvlt
Xmqv//rjse1cnq7eXNDx6q9Y14I/Vhjry6YoLhDvWXa0l4vCUUZ5jCuniL+k
FX2nU3j7yLoNn/K5YOzENYu6JRR+oW9uTf3lAlqvmuBrBoXbvgSHX07nhpB2
fmWhXRQeE4CjMznckBvayBXoRGFRHaFDrkXc0GNe4NS2m8KmUTf3qz7jBunM
DI94NwpXKbbYPh4g9dmS0+85FM71VFXvXcsDY5aXtj0Ko3Dd+Qkl0608ULTg
rdB/nMJfH1TKFRrzAAhdMhKNpPBKHrslR514IMS03XpnNIUTsyIXBE/wQINt
5qqiOAqHf/vwTucFD/RggdXFaRS+JpLderWNByL5zkxnZlC4dH1A098uHoiV
UPxyPpPC46f5ntaP8oDWxWc/7bMovE9lbYHzUl7IXL4291E+hdn746Ki3Hjh
AG+lcW0Fhf0u7jr+ncML4r6FlkGPKXyuTDHEMogX2KZSIFdJ+uev8JOKIfXm
M9/2V1NYL/ebY14+L6Tc8P7eWE/h1YP6a9785gXY8Lqi/g2F+60rhbgW8YHb
8Iio7VuyHiWbB7SF+ACi9/h3vKOwRuTGm5dW8UHAh/UG7zsorLlMZ/EOUz5I
mJsYSuqm8Gh40WikLR+k/C03/vOZwkVfNZuLXPggNoRzddcXCuvcY5wWDyTP
mzUX4e2jsO721dOvrpH7L9/nURqk8HTe7baF23wwcNzgqesQhcvFFYvW3OMD
rX3dey7/IP13yXEu1vDBRsO6taMjFEZB0h+tf5D7l5hycyYoTPuQXBYxRcYb
Wnom9BeFa/SXXrm3QPrJv/4hZpLCRoKSVqJL+EFLUPrrxd9kP9wUwi+38EP5
tMp2z1kKC/Cfuz5vzA/idl1cFnNkv/nSQ1g7+CFyPCSC9ZfClht5teO9+cFt
JvDO13kK73j175blBX7I1f1bG0MLwJLrj58IT+GHtDD1yG/Eb1Pndhfc4odJ
+q1Eg0UB2GHfzBLhMn64YvahYpzYeX48pukzeV77sxlt7gC8wjPAc26QH/oE
U+3DiLsafiLGJD9sedLKVUO858qPmXN0OvAMKViY8ATgVbOcd48k6TDQntV3
mrhn78D9IVk6VCs5NT0l9mB88zHXpsNEjvFxbd4ArHTJ0yR0Mx1STy4YexP3
/f6ilLedDvL/BpyTibNd3GidNnR4omheXku8r6a7S8CZDvDWd88Ysaqaa8Um
LzqEv0u3XM4XgAfiPyZx/OkQXMeMQsQHnTqsG6NIP1r3q08RS29FvRZxdOh5
ofP5BnG9fM7RliQ6/OSyTqsgDuYREd5xg/RbGDHdSqw4EJTZlkuHolrDsW/E
rU2d6xyK6WC0TyZmhjjiP4PGjsd0KGk7U07nD8DMy7muu+vokBsgdkaKuPOI
2MSnFtLP0w3jCsSxzkdi3DpI3efsbw1iXf1PMr1f6JC15mKyNnGfgtF/3j/o
IDv+rnU98SXe/G0Dk3SwKxjO2kCsPyjR4fOPONRL8v8ebg7xHeEXgH/xrdLr
iFOLPtMCJAQgdm19mSax6RXjpAkZAeB51fVThfj30UL1w8oCoPixsFKWOGv3
kqpplgC4DLxVEie2RWG2oRsEIO76qPwi4gXFr/1/QQB+F6SXjJL5FvCZhZ0w
F4D6/sjuj8TOQ/+JcdkJwJjS1ow6YnqLVFa0qwBssQn5VUBcev/4Rv79AkD3
6Px0idgrqa/5bIAA0DxFXIOJJY9ZuAuHCkCtV2WAHXG1S/HUhVMC8DY6RVqH
2A+Wn5OIFwDTIWs7EWIZ5Ui5K8kC0FGbqNRPvv8G/u/FUpkCEGwhHfOEWPlV
yccVDwQgwO4Ztwfxm+IVARlPyHxcd8v9f79FJkfxKNQLgNRKmaZ5sh8/urJZ
Kh8EYM8Xvs6LxLEGZU9zvwpAVHDZZnti3dVyDoxhAejquKwpTZw4/CNCa4H0
K/qjPpnsf2i1XfyALgjB1jMHbYl/Pqi4s15SEIw2OdwUIjYLO9Oqt1oQuBL0
nxzhCsA0QSXF7RaCEL2+oXANed/ujZwtfW4nCP1TO1vbyfvp8nrM3HyPINAE
O04eJy5LqQqyCRQEdswpxVMLFPZXda5zuioIDf7ZTxzJ+y8r9NSpK1MQErKT
hk7+Px9+qv7ckycIWvQn63JIfqwunZLyqhQEOp/Uyp4ZCncZXTrg3ysIB7we
6y2fonDJZmXpp8OCII8X2cqTPDqvU/Z88W9yPe3kQ0WSV3ryn1Qq6EJQxCvi
vnycwilzat+4NYWAJmdp3jJMYbviavdrIULQYTFEOfRSmHl3p8TwSSFyPm+3
lvxKYe7M/mr980JQazx4rLGHwsXxwvJ96UKQol9VoU7yWZzj2K35TAgc1ey/
3Cf53bxqzLlWRBgcFWzoX5opnCV1SnDZMmEoOarTvqOJwmEiUo848sJQvTxv
urKR5P/c5uVia4XB9+t7zVhyfsS+P9Pu5CgM4TYOJ/swydf4VXajt4Sh64KT
TOV9Cj+etbaS2SgCM9/928Yvkbxfk9S9wVAETFsWZjMukv48P1L2liLQGppR
YhxPzpvm/YkJbiIgz9/y5XQshZMzItv5zopAXI0JehZB4QDDYvdfH0SgvD1w
RM+Hwsrnlh5pDhOFXOYzIZWtFL5RtZt/6LQoBIx2XVTVo7DMr5sp/AmikEbp
NSltoLCEi+ZjwyxRmBmz8RPWpvA/lgmtopnUy87EZChT+MPrkHPZK8VgYKLT
7rkghS8s78qIwGJQ+0F3m26bP/7dJDjws0EMnrhEa7a+8sd7IjZp730jButu
fcv3bvbHrN7kZ+gbqWtleZyq88f73qsFR/KKQ4LUy4GzZf6YL7M3xYAhDjS3
k1m1qf7YeK3T12dHxEF6dDx3ztUf1zsZHW4QkYAlGcWJze1+uHnHQ8F+SQno
WPQ6afqNH35jppLJLS0BsceDv65s8cPdm+hN+ooSUM496O5S64enljfLP9SV
gKynlltvkt+Dyp07m2/ulQCt55fPWcb64ShnT6Ww+xIgH6DEt3mdH0a7o16z
7CVB+aihpcAJXzz61PBycvJiCJf8HL1txAev65e0dahZAq2iy6rLTDj4V5W5
ySF+KXgrXtHr4rAfm9onbvqmuwwmY4SFwn288bJMA4+SE9IQ/GpRoJKhJ17J
DhqLqVkOGgNbg3fJuOPyypKwolEZaND7UeKkuQe//Oy6VVdXFmQV8p3ffnbC
R7HUX8n9K8GSs9BsPGmPHXls5X9dkgPHBDVpGX1b/GB+MnTN+1XAnh6omXph
iW07d3Lco+QhdtPl84hmjOni7lpOKgrQOpDJFb1WHzuFrMmzfa4AB+TnBpfc
1saH8elbR10VgRaTebDFfAVu6RErNacpAQTwb963XQxN9CiYmqUoQU9ZaM7k
gjq6v3gqzoylDAET6/0eiq1HhfJ/h6dblCGBMSUq27sFBQufb3rtvRoc34ZI
Lr1nQP4nWNU5CaiAR8hJ+5s1RsjkaMpWkVsqkKjpG7nM0ATdt846ULNBFeQ+
p45scDNDIVaVUxZ6qhC18k9+2QEzpG/5PurdFlWIGUT/aQeaoWYzevqAgSps
TFoetyTKDPUb+b4WtVSFCzMLbUm3zZDM5nV6u91UgevjM6PYb2YoWrVWaDJW
FZprxYc3eZsjR1rfvdWdquCydulOPTsLlCo3PXiqSxXkJXgf9ThboK4tgqu/
dquC3YU9cVHuFmjvMa3rGb2qMCZGHSv3t0D7JsLPLBtRBcXQ/hsjsRYouG+p
mwBNDVLvDwdHPLFAlxpMJEZWq8ETz4QxI3lL9CIhP6gkUA2Y7yr3Puq0RIcj
GPu3B6vBcISKc1WPJZL3zXd+f0QNfD2+eVf2k7pJvsFMmBrweAtXFEyQ+r88
sS0xamDqffIUW9AKHTmYl/8sVQ2ybrjb3dtohRSN7/a+eaYGrW0j61ovWaFj
czk7x5eqg5pbyXUpXWv0c2Tc6oi0OuTdtjJv17NGXj1bTOdk1KH25d/8y8ga
Wde92cIrrw4D5mkXF0ytkeLFf6uXa6jD3/hmetZua9Ss6DAD+uogveSgmUKk
NZIz501P2EfqyFLtT501uryFfXUpRx1y6v5dXfvCGtHXXL+UelAdcjN0Jzgt
1mhisXZMVgAxiPu9eG+Nnn9yocpD1cHxjk2B83drFBBYYtBzQR2CE1a8quC3
Qc9SPPvXlKmD4GuZmIjtNqgkL/fC2Qp1OJlVcP6PqQ3KejKi2/tYHazdLuoE
Wtqg6J6jZ5Kr1aF//CHHYacNMlaLU5tvVIeC7uO3Z9xsUENZic+LLnXojn0b
lB5mg1re8456cWmAX1nHWOA9G1Q1YH61ikcDPjnIVZ66b4PuzV5E0vwa0Lvt
rn1iiQ26KCeT0CSkAS/efhzLfmSD2Ps0tXWWakCKZdVkTr0NaptyCFpQ1YCp
D9+dJLptUMeS3OlrVhogqOXnacrLRtq/nRxV2Brg9lGR8YSPjc61C1UU22rA
pFG2uiadjbamUqFNuzTA/ohzi7AQG91atWH+r7sGdFlEvSwRZyNfjXoutyMa
wD2xyLloBRstgj4RlRsaIFejuHu3Fhs5KyT7F9/UAJ6m6wlXtdmohMv0lX6W
BgyVvJZ6o8NG++ryE3bd1YDx+1nShuvZqNk8aPHZB6Sf82voonpslGzPtXz4
uQaU+/ubOmxjI42D8srFY2T+CgdfFdqx0b+DzTqLf2mAov1TRpY9G7X5hhgE
T2mAuIOoyjUHNgr3b92jO6sBRoVi0xGObNQSGHntETcDrq7dLKvnwkaBIT2i
z6QYYKsltODvyUblpzP/tG1hwCbuF+HtAWwUF2NJX48YULTWpflWIBu5n5mR
SjZgwBK5ey99D7GR4Fn2OkdjBvR5L3z/G8RGLnE0qsuGAQ5nbONEjrIR7bJb
X58HA2Lk6SvGw9nIJFP+1VQsA3ImIqPqzrBRf/bVPvPzDMjC13m8Y9koOl90
9kY8A0ocOndxn2WjmtK/yuaJDNjA+RO05Rwb6b/sCM24zoB/sC4xM46N1s8m
qJjcY4B2VN0XrUts9HaBf0taEQOgdk15JfEh3hM7xosZ4KITc8AskY2KxP3C
r5cxQGaHspPrZTZiqpq9Ga1mQKquw9mjSWykZLcoIqWNAfENVzIOXyPjO4Vc
HnnHAIG39+zGiN32juYadjDAS89hhJPKRhk+n9qGuxjQyR3Q4HSdjWROVqgb
9DNgzvPxOmY6G0ncC3w3OMMAWdpFl7RMMv6DgSH9OQaMDhmF8d5kI+uKvbQr
8wxoEeQ67UccV2vF0OdiQsx83m69W2xE/6h+MlGICSbX9ig/v81GC/xfmZvl
mOCRypVSmMNGfJ/qZmvkmeArZrhE5A4biRbfbTBXYkJ51U67g8RyLoFezmpM
iJy/oKicS9aviJZ2TIcJ1N6nAmfuspHx6T7OovVMUDo7VtpFbO3csOHsBiZ4
1miytPPYyJUnoS1lCxNc8KGj74nDHVcJlRszQSNwe5JkAfm+WNwfkBkTypRW
pO8hjuP6nvPcggk24muC7hKnFdwzbGeT/uWy4zYXstFjmn7ob2cmdD6vj9lx
j41mc10G11FMsOuWVN1exEZcEVD2JJAJCh+z9kYQC+5UPm0UzAT9g3kBpcTL
53/I2x1jwiHlZDml+2y0cUeYY9ApJiQqxz/+SQwqe1XmTjOh2NO5Ua6YjUzn
DCejYpnwknOzxIrYMVswITGeCcc6VqjkEh/9c+35/atM2PhgTYzNAzaKaDme
tCmVCUtW6F06Qhxz293zaRpZ367SiDTiZCv1hdabTKDnneD+RpyhKPLSMYsJ
AVb8afwlbJQzPZbak8OEopCQ5erEpTfLdcfymRCqH1d3gLjqSBpPyD0m8FUe
mIohrreIfLNQxASn87eEs4jfTZn4i5UywfrsjV+dxF0vGFuuljNBdii1dpK4
74aY4KrHTOCe9zwh8pCNJs3aszWrmaBo/LJkM/FR/YcK52uY8NP7SKMN8azO
5fTvtUxIj5se8SCmydokZTaS8QtCDsQQnxJnScw3MaEiLQgnE/PxCsU7tTBh
ffQWtRxi4Z/10ZJtTNjvydSuIb74NYtGvWOCm6DVmxZiyfao8KZ2JtzkW3Om
kzipyW1GtZMJ2o3W7G/E0tX6wdFdTKClqmmOEl8vkR3r6WbCr6sbFWaI5e7O
Htz6hdQrZtVppWx0M73j+7VeJgi+GDLlJ1ZOLPX8/Y0JXFR0hAjxnZgrn20H
mPBOcVuTJLFG2KHd/w0x4fSGW2uWERdS7HahESZIvpctkCHW8tLceWCUCRf/
sQxWEj9wFH5VO84EzVj2qByxrtWQucIkE1YpLJSuIq4waKg//psJtdYlKf/3
Ft0cw84ZJpzwG7ry/+uxRnSV7hwTfhStKJAlNlzloXd5ngkPlGq6lxPXLYbS
0QUm5N/ZxZIiNqXL6VhysaBzyj5Fgrjp71xhLg8LPDJ05YWJrcc/qPPysyCb
HlTHS/z6W1m2uwAL1IOiY/+R9bHrTFKoEmJB1a9ezm/i9pagdBlRFuw6Kugz
Quz8bMfyo+IsWFMTcLaX+FPZmqQ2SRa0UBcbOojdCkQktJay4PtEt+pL4t7M
H3Fxy1iQkNR+p5p4X1IjfXA5C6SPjZs+IPaNOE27JceCh08OjCURjx7yDP8n
zwLRKw+nTxMf2m8w46zEgr5ULsXDxCHs+dHFaiyI2Rf6hU08Z/TxYIAGeb7r
5aNbiSM2VXxvZrLg1kCsjjpxtOLhz6e1yf1ufdL/yH7mX7Zz99e1LHi9ecP2
78TnhLTb9XVZoBoDKa+IEyaHW6b1WDAQY12STpxW71XFMWLBWs2Nr9cQr3ps
qFdvzIKupFUgSXzrP/lSRTMWZMRxPvwi72duSlfhRysW7N0wE1dCXOJjl261
iwW/5Sp5mMTVXKX7xpxY4J4HCdzETanLtC67sODuAw2pTpIPX1901nS4k/Wv
L1kcTSzBcB/w9GWBy4zy9yaSN7LPau7zUSxI1vbYdZ1Ybbdy2N1AFpRn8jzn
/D+Pzn8XGT3CgtWffuVwE/v/8FsbepIFQy6NoQySZ6GnXv2VjWaBz5kT0xP/
kbxZoV2PY1hwReJcSAVxusWkI28cCxhI7Nw24ub80IiEZBaEWo3PWZD8VPc9
05iTT+Yzxn1bk+TtOp7BRLN7LDh5+E9hfz4ZP83cZbiIBVImv+rTiR2bRUa1
S8l6uu9aLUAcw7yypLKaBRtp8VlvSf73DWfubXvHglceBtqInB9j0VzqRzpY
MNl/x3OAnDdzsl4T0h/J/A1PFyYQS1qpnt7TwwLcNHO2O5uNDAoL8waHyPxm
uY9QWWxkuV0sOG6E7K+HnsESxI6fArauGWPByrKuC8XkPAsQWdcaPMWCNMv9
MhPkvAvPTrq2bIYFkjkZcQnEZ7ZOezyaZQGnTW+lJnHiO0em6zwLOuRbml+Q
8zLD79HUwgILzDKGru8j/h+LR4YK
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 15}, {-0.01449003782244387, 0.014671770715296548`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"G-T0\"", "\"G-T1\"", "\"G-T2\"", "\"G-T3\"", "\"G-T4\"", "\"G-T5\""},
       "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.721591265591*^9, 3.721591272953*^9}, {3.721591325567*^9,
    3.721591346925*^9}, 3.7215914086289997`*^9, 3.72171603865652*^9, {
   3.7217172339968896`*^9, 3.721717257631241*^9}, 3.7217173536187315`*^9, 
   3.7217189938445473`*^9, 3.721748539349*^9, {3.721749215211*^9, 
   3.721749244645*^9}, {3.7217501667279997`*^9, 3.721750170374*^9}, 
   3.72219166752*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"k", ">=", "0"}], "}"}], ",", 
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"Fdesing", "[", 
      RowBox[{"1", ",", "5"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "0", ",", "5"}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.721751199083*^9, 3.721751233826*^9}, {
  3.7265560060879245`*^9, 3.726556017096554*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox["1", 
    RowBox[{
     SuperscriptBox["k", "2"], " ", "\[Pi]"}]], "+", 
   FractionBox[
    RowBox[{"\[Pi]", " ", 
     SuperscriptBox["d", "2"]}], "10"], "+", 
   RowBox[{
    FractionBox["1", "20"], " ", 
    SuperscriptBox["k", "2"], " ", 
    SuperscriptBox["\[Pi]", "3"], " ", 
    SuperscriptBox["d", "4"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "d", "]"}], "6"],
    SeriesData[$CellContext`d, 0, {}, 0, 6, 1],
    Editable->False]}],
  SeriesData[$CellContext`d, 
   0, {$CellContext`k^(-2)/Pi, 0, Rational[1, 10] Pi, 0, 
    Rational[1, 20] $CellContext`k^2 Pi^3}, 0, 6, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.721751200486*^9, 3.721751234525*^9}, 3.722191667979*^9, 
   3.726556020734762*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"k", ">=", "0"}], "}"}], ",", 
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"Fdesing", "[", 
      RowBox[{"2", ",", "5"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "0", ",", "5"}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.726607538415405*^9, 3.7266076221271925`*^9}, {
  3.7268031189339705`*^9, 3.726803133372796*^9}, {3.7268047290910664`*^9, 
  3.726804743555894*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox["1", 
    RowBox[{
     SuperscriptBox["k", "2"], " ", "\[Pi]"}]], "-", 
   RowBox[{
    FractionBox["1", "20"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["k", "2"], " ", 
      SuperscriptBox["\[Pi]", "3"]}], ")"}], " ", 
    SuperscriptBox["d", "4"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "d", "]"}], "6"],
    SeriesData[$CellContext`d, 0, {}, 0, 6, 1],
    Editable->False]}],
  SeriesData[$CellContext`d, 
   0, {$CellContext`k^(-2)/Pi, 0, 0, 0, Rational[-1, 20] $CellContext`k^2 
    Pi^3}, 0, 6, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.726607478406973*^9, {3.726607546265854*^9, 3.7266076236802816`*^9}, {
   3.726803120809078*^9, 3.7268031347798767`*^9}, {3.7268047306891575`*^9, 
   3.726804744971975*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"k", ">=", "0"}], "}"}], ",", 
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"Fdesing", "[", 
      RowBox[{"3", ",", "7"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "0", ",", "7"}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.723424650135615*^9, {3.7234246801733327`*^9, 3.723424695538212*^9}, 
   3.7265560153454537`*^9, {3.7266074881335287`*^9, 3.726607525166647*^9}, {
   3.7268048714042063`*^9, 3.7268049009748974`*^9}, {3.7268103530157366`*^9, 
   3.726810384289525*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox["1", 
    RowBox[{
     SuperscriptBox["k", "2"], " ", "\[Pi]"}]], "+", 
   RowBox[{
    FractionBox["1", "252"], " ", 
    SuperscriptBox["k", "4"], " ", 
    SuperscriptBox["\[Pi]", "5"], " ", 
    SuperscriptBox["d", "6"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "d", "]"}], "8"],
    SeriesData[$CellContext`d, 0, {}, 0, 8, 1],
    Editable->False]}],
  SeriesData[$CellContext`d, 
   0, {$CellContext`k^(-2)/Pi, 0, 0, 0, 0, 
    0, (Rational[1, 252] $CellContext`k^4) Pi^5}, 0, 8, 1],
  Editable->False]], "Output",
 CellFrame->{{0, 0}, {3, 0}},
 CellChangeTimes->{{3.723424653386801*^9, 3.7234246958792315`*^9}, 
   3.7265543981509557`*^9, 3.7265560234939203`*^9, {3.726607490393658*^9, 
   3.7266075276937914`*^9}, {3.726804874065358*^9, 3.7268049041640797`*^9}, {
   3.7268103553048677`*^9, 3.7268103863956456`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"u", "=", 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"Pi", " ", "x"}], "]"}], 
   RowBox[{"Sin", "[", 
    RowBox[{"Pi", " ", "y"}], "]"}], 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"Pi", " ", "z"}], "]"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "3"}], " ", 
      RowBox[{"Pi", "^", "2"}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.725160258799241*^9, 3.725160293380219*^9}, 
   3.7251603482903595`*^9, {3.7251612456066833`*^9, 3.725161247665801*^9}, {
   3.725170964100549*^9, 3.7251709657506437`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"\[Pi]", " ", "x"}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Pi]", " ", "y"}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Pi]", " ", "z"}], "]"}]}], 
   RowBox[{"3", " ", 
    SuperscriptBox["\[Pi]", "2"]}]]}]], "Output",
 CellChangeTimes->{
  3.7251602940542574`*^9, 3.725160349149409*^9, 3.7251613587661552`*^9, {
   3.7251709726160364`*^9, 3.725170996698414*^9}, 3.725214237584651*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ff", "=", 
  RowBox[{"Laplacian", "[", 
   RowBox[{"u", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.725160299677579*^9, 3.725160312220297*^9}, {
  3.7251603507184987`*^9, 3.7251603514785423`*^9}, {3.725161250113941*^9, 
  3.725161256934331*^9}, {3.725161362277356*^9, 3.7251613646584926`*^9}, {
  3.725170967282731*^9, 3.725170967702755*^9}, {3.7251709984575143`*^9, 
  3.725170999281562*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Sin", "[", 
   RowBox[{"\[Pi]", " ", "x"}], "]"}], " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"\[Pi]", " ", "y"}], "]"}], " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"\[Pi]", " ", "z"}], "]"}]}]], "Output",
 CellFrame->{{0, 0}, {3, 0}},
 CellChangeTimes->{
  3.725160312565316*^9, 3.7251603518555636`*^9, 3.7251613651135187`*^9, {
   3.7251709748041615`*^9, 3.7251709996205807`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FortranForm", "[", 
  RowBox[{
   RowBox[{"Normal", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{"DeSingKernel", "[", "1", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "d", ",", "3"}], "}"}]}], "]"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"d", "^", "2"}], "+", 
       RowBox[{"r", "^", "2"}]}], "\[Rule]", "k"}]}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.726804690059834*^9, 3.726804695304134*^9}}],

Cell["\<\
d**2/k**1.5 + 1/Sqrt(k) + (d**2*(2*d**2 - r**2))/(2.*k**2.5) - (d**3*(-2*d**3 \
+ 3*d*r**2))/(2.*k**3.5)\
\>", "Output",
 CellChangeTimes->{3.726804696198185*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FortranForm", "[", 
  RowBox[{
   RowBox[{"Normal", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{"DeSingKernel", "[", "2", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "d", ",", "5"}], "}"}]}], "]"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"d", "^", "2"}], "+", 
       RowBox[{"r", "^", "2"}]}], "\[Rule]", "k"}]}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.726803178458375*^9, 3.726803182703618*^9}, {
  3.7268046583270187`*^9, 3.726804663157295*^9}, {3.7268047122181015`*^9, 
  3.726804716430342*^9}}],

Cell["\<\
        (3*d**4)/(2.*k**2.5) + (3*d**2 + 2*r**2)/(2.*k**1.5) + \
(3*d**2*(2*d**4 - 3*d**2*r**2))/(4.*k**3.5) + (d**4*(6*d**4 - 23*d**2*r**2 + \
6*r**4))/(4.*k**4.5) + 
     -  (3*d**6*(8*d**6 - 88*d**4*r**2 + 115*d**2*r**4 - \
20*r**6))/(16.*k**6.5) + (3*d**4*(8*d**6 - 56*d**4*r**2 + 39*d**2*r**4 - \
2*r**6))/(16.*k**5.5)\
\>", "Output",
 CellChangeTimes->{{3.726803179116413*^9, 3.7268031832846513`*^9}, {
  3.726804712993146*^9, 3.7268047171173816`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FortranForm", "[", 
  RowBox[{
   RowBox[{"Normal", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{"DeSingKernel", "[", "3", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "d", ",", "7"}], "}"}]}], "]"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"d", "^", "2"}], "+", 
       RowBox[{"r", "^", "2"}]}], "\[Rule]", "k"}]}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.7268048612676263`*^9, 3.7268048613736324`*^9}, {
  3.726804916783802*^9, 3.726804932574705*^9}}],

Cell["\<\
        (15*d**6)/(8.*k**3.5) + (15*d**2*(2*d**6 - 5*d**4*r**2))/(16.*k**4.5) \
+ (15*d**4 + 20*d**2*r**2 + 8*r**4)/(8.*k**2.5) + (5*d**3*(6*d**7 - \
37*d**5*r**2 + 20*d**3*r**4))/(16.*k**5.5) + 
     -  (15*d**4*(8*d**8 - 88*d**6*r**2 + 115*d**4*r**4 - \
20*d**2*r**6))/(64.*k**6.5) + (3*d**5*(40*d**9 - 680*d**7*r**2 + \
1563*d**5*r**4 - 680*d**3*r**6 + 40*d*r**8))/(64.*k**7.5) + 
     -  (5*d**6*(48*d**10 - 1160*d**8*r**2 + 4078*d**6*r**4 - 3195*d**4*r**6 \
+ 520*d**2*r**8 - 8*r**10))/(128.*k**8.5) + 
     -  (15*d**7*(16*d**11 - 520*d**9*r**2 + 2578*d**7*r**4 - 3143*d**5*r**6 \
+ 980*d**3*r**8 - 56*d*r**10))/(128.*k**9.5)\
\>", "Output",
 CellChangeTimes->{{3.7268049177888594`*^9, 3.726804933302747*^9}, 
   3.7268049904130135`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"k6s7", "=", 
  RowBox[{
   RowBox[{"Normal", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{"DeSingKernel", "[", "3", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "d", ",", "7"}], "}"}]}], "]"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{"a", "\[Rule]", "0"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.72763834023064*^9, 3.7276383550364866`*^9}, {
   3.7276384711811295`*^9, 3.727638471394142*^9}, {3.727733119689715*^9, 
   3.7277331930019083`*^9}, {3.727733258760669*^9, 3.7277332864402523`*^9}, 
   3.7282379288246737`*^9, {3.72823798924813*^9, 3.7282379903271914`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"15", " ", 
    SuperscriptBox["d", "6"]}], 
   RowBox[{"8", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["d", "2"], "+", 
       SuperscriptBox["r", "2"]}], ")"}], 
     RowBox[{"7", "/", "2"}]]}]], "+", 
  FractionBox[
   RowBox[{"15", " ", 
    SuperscriptBox["d", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       SuperscriptBox["d", "6"]}], "-", 
      RowBox[{"5", " ", 
       SuperscriptBox["d", "4"], " ", 
       SuperscriptBox["r", "2"]}]}], ")"}]}], 
   RowBox[{"16", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["d", "2"], "+", 
       SuperscriptBox["r", "2"]}], ")"}], 
     RowBox[{"9", "/", "2"}]]}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"15", " ", 
     SuperscriptBox["d", "4"]}], "+", 
    RowBox[{"20", " ", 
     SuperscriptBox["d", "2"], " ", 
     SuperscriptBox["r", "2"]}], "+", 
    RowBox[{"8", " ", 
     SuperscriptBox["r", "4"]}]}], 
   RowBox[{"8", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["d", "2"], "+", 
       SuperscriptBox["r", "2"]}], ")"}], 
     RowBox[{"5", "/", "2"}]]}]], "+", 
  FractionBox[
   RowBox[{"5", " ", 
    SuperscriptBox["d", "3"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"6", " ", 
       SuperscriptBox["d", "7"]}], "-", 
      RowBox[{"37", " ", 
       SuperscriptBox["d", "5"], " ", 
       SuperscriptBox["r", "2"]}], "+", 
      RowBox[{"20", " ", 
       SuperscriptBox["d", "3"], " ", 
       SuperscriptBox["r", "4"]}]}], ")"}]}], 
   RowBox[{"16", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["d", "2"], "+", 
       SuperscriptBox["r", "2"]}], ")"}], 
     RowBox[{"11", "/", "2"}]]}]], "+", 
  FractionBox[
   RowBox[{"15", " ", 
    SuperscriptBox["d", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"8", " ", 
       SuperscriptBox["d", "8"]}], "-", 
      RowBox[{"88", " ", 
       SuperscriptBox["d", "6"], " ", 
       SuperscriptBox["r", "2"]}], "+", 
      RowBox[{"115", " ", 
       SuperscriptBox["d", "4"], " ", 
       SuperscriptBox["r", "4"]}], "-", 
      RowBox[{"20", " ", 
       SuperscriptBox["d", "2"], " ", 
       SuperscriptBox["r", "6"]}]}], ")"}]}], 
   RowBox[{"64", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["d", "2"], "+", 
       SuperscriptBox["r", "2"]}], ")"}], 
     RowBox[{"13", "/", "2"}]]}]], "+", 
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox["d", "5"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"40", " ", 
       SuperscriptBox["d", "9"]}], "-", 
      RowBox[{"680", " ", 
       SuperscriptBox["d", "7"], " ", 
       SuperscriptBox["r", "2"]}], "+", 
      RowBox[{"1563", " ", 
       SuperscriptBox["d", "5"], " ", 
       SuperscriptBox["r", "4"]}], "-", 
      RowBox[{"680", " ", 
       SuperscriptBox["d", "3"], " ", 
       SuperscriptBox["r", "6"]}], "+", 
      RowBox[{"40", " ", "d", " ", 
       SuperscriptBox["r", "8"]}]}], ")"}]}], 
   RowBox[{"64", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["d", "2"], "+", 
       SuperscriptBox["r", "2"]}], ")"}], 
     RowBox[{"15", "/", "2"}]]}]], "+", 
  FractionBox[
   RowBox[{"5", " ", 
    SuperscriptBox["d", "6"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"48", " ", 
       SuperscriptBox["d", "10"]}], "-", 
      RowBox[{"1160", " ", 
       SuperscriptBox["d", "8"], " ", 
       SuperscriptBox["r", "2"]}], "+", 
      RowBox[{"4078", " ", 
       SuperscriptBox["d", "6"], " ", 
       SuperscriptBox["r", "4"]}], "-", 
      RowBox[{"3195", " ", 
       SuperscriptBox["d", "4"], " ", 
       SuperscriptBox["r", "6"]}], "+", 
      RowBox[{"520", " ", 
       SuperscriptBox["d", "2"], " ", 
       SuperscriptBox["r", "8"]}], "-", 
      RowBox[{"8", " ", 
       SuperscriptBox["r", "10"]}]}], ")"}]}], 
   RowBox[{"128", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["d", "2"], "+", 
       SuperscriptBox["r", "2"]}], ")"}], 
     RowBox[{"17", "/", "2"}]]}]], "+", 
  FractionBox[
   RowBox[{"15", " ", 
    SuperscriptBox["d", "7"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"16", " ", 
       SuperscriptBox["d", "11"]}], "-", 
      RowBox[{"520", " ", 
       SuperscriptBox["d", "9"], " ", 
       SuperscriptBox["r", "2"]}], "+", 
      RowBox[{"2578", " ", 
       SuperscriptBox["d", "7"], " ", 
       SuperscriptBox["r", "4"]}], "-", 
      RowBox[{"3143", " ", 
       SuperscriptBox["d", "5"], " ", 
       SuperscriptBox["r", "6"]}], "+", 
      RowBox[{"980", " ", 
       SuperscriptBox["d", "3"], " ", 
       SuperscriptBox["r", "8"]}], "-", 
      RowBox[{"56", " ", "d", " ", 
       SuperscriptBox["r", "10"]}]}], ")"}]}], 
   RowBox[{"128", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["d", "2"], "+", 
       SuperscriptBox["r", "2"]}], ")"}], 
     RowBox[{"19", "/", "2"}]]}]]}]], "Output",
 CellChangeTimes->{
  3.7276383805189447`*^9, 3.7276384728882275`*^9, 3.727733125413042*^9, {
   3.7277331578898997`*^9, 3.7277331642302628`*^9}, 3.727733195337042*^9, 
   3.7277333279666276`*^9, 3.728237882511025*^9, 3.728237929466711*^9, 
   3.7282379908042192`*^9, 3.730214194179*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dsk3", "=", 
  RowBox[{"DeSingKernel", "[", "3", "]"}]}]], "Input",
 CellChangeTimes->{{3.73021434349*^9, 3.730214347375*^9}, {
  3.7302143837539997`*^9, 3.7302143859960003`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"15", " ", 
    SuperscriptBox["a", "4"]}], "+", 
   RowBox[{"20", " ", 
    SuperscriptBox["a", "2"], " ", 
    SuperscriptBox["r", "2"]}], "+", 
   RowBox[{"8", " ", 
    SuperscriptBox["r", "4"]}]}], 
  RowBox[{"8", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["a", "2"], "+", 
      SuperscriptBox["r", "2"]}], ")"}], 
    RowBox[{"5", "/", "2"}]]}]]], "Output",
 CellChangeTimes->{3.730214348725*^9, 3.730214387528*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"PltVar", "[", 
   RowBox[{"v_", ",", "aa_"}], "]"}], ":=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"k6s7", "/.", 
           RowBox[{"d", "\[Rule]", "0.8"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", "v"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"dsk3", "/.", 
           RowBox[{"a", "\[Rule]", "aa"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", "v"}], "}"}]}], "]"}], "]"}]}], "}"}], "//", 
     "Evaluate"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "0.5"}], "}"}], ",", 
    RowBox[{"PlotRange", "->", "All"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.730214200638*^9, 3.730214265344*^9}, {3.730214370009*^9,
    3.7302143966610003`*^9}, {3.730214438576*^9, 3.730214529137*^9}, {
   3.7302147067460003`*^9, 3.730214717421*^9}, 3.730214911625*^9, {
   3.730214953468*^9, 3.730214956609*^9}, {3.730215022363*^9, 
   3.7302150949230003`*^9}, {3.730215451676*^9, 3.730215528435*^9}, {
   3.7302155596470003`*^9, 3.730215578604*^9}, {3.730215667793*^9, 
   3.7302156920959997`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PltVar", "[", 
  RowBox[{"6", ",", "0.2"}], "]"}]], "Input",
 CellChangeTimes->{{3.730215580648*^9, 3.730215640244*^9}, {3.730215683034*^9,
   3.730215721814*^9}, {3.730216324046*^9, 3.7302163244300003`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVl3k8lG8XxkVJlETJFiqplDUk4cyplIiyk2IwpVASyjrWkZIlSZJEtkiR
PdlnLJGMZZC1JFRKv7IveZ/3n5nP9zP3nPvc17nuc55nu52L0QV2NjY2Z+Lj
/9+6F8bbqr9pa4XZrNU8XUbDsVdmdkPCUiCx7gPfSYIFeViRBcLKsJkUc1eV
4DeVVOeb0lqQXWKbt5VguUOb058IHwMlbWPfiTc0ZBP4dn9F4iTMDoX+LiS4
baIiyFbaAARSdm1wJdjQ/l2pbZwh6NNt2yUJVmceyIsRNoGZZzdIjFIa7tRM
yqQnmkFSxXNzK4LXZ3M9nZKwhO+vtYVGS2g4JegWtyvVCg5DWhCF4IHggQgz
aWuw15Z62FVMQ/u51Fq6CRnOM+TMNAjulrPUOhdnC6/7VKofFNGw+jFdJUKY
Asq/5B/uLKShcrvn611WF+ASXXmNRQENs7jkZCsTL8LEF0vJgHwaxnjES01K
XIYDqyLIL/JoyJmjn3zL1hEO1U6Hvsqlofcwu5hkqhOsMVM+n/6K2P/0FQFD
6atQmXVK7GoODXtoO6K+ObiA7uomTtILGkoPOq2pMbkGohcoaWuyaZiweXug
ZZwruHg9XnLKpGFwYLjnHWF3qKBWaqSn0LBS7GKxWZk7HJ6M6tucTMO5EtLU
DisPCOOsUfFMoqHzr2mXt4k3IIS1cbvIYxqaWJEdJiS8wCxvYabpPg0jZ9TT
S6u9IDBeKrbnHg0b7235EmLrDTp05dmPUTTUbGyy3pbqA7f6ZjaXhhP5qaiY
GUhTYU9ZcO/nIBqSmRtjRRqoILFzR3tEAA0fO31vG3XwB87pq4myVBpytbVm
VJkEgFHFjjwdLxr6rqXtsIgLhAZTw7U/r9KQ4j4pfFs4BLo3bZX9bU7DAxwx
3vnXCNaOV31oQkP2GOW+voYQOFTsKahgSMOnuV6JcjdooHn5wIWDujTs/c4h
0dkeCp++kmITD9PwtK2QlMTd2/Ba8gAvQ5SG4r/LQnS+3Ia6by8Wbm+l4QT1
/FdX9TswQLr5BwVoeCfxWQZj/A5I3/jGH8ZNQ0b3/r2O2nfhkpBg0JW5EFQ3
QLmif5FATw99mNwWglwDXyIHTaOg+8cDvtvvQ7DbKXRy7csoWGz/ybJvCMEy
xgWLl7LRUDhlZP67PAQthrOF2fqjYXwwsPBCZgjGbFNJTFeLgS/x2xbrvIh4
sSdTfv8XC0p7l2QCNofgotrnxRSRB0AxTxiR4w3BXwOeZsZHH8DHGYvD7WtD
sGP3c57i2Acg22DTMbMQjElvOW/4HIyDQmqgSumnYFT+Qtfl9HsIseQaMcns
YCQraU2JciXABgerhefKwWjczTJoUUgAoQnFw9P7g/G475UsqmUCfJvgrFXd
FYz76hOtP2cnAHlosPTRlmCcsVxszNB/DBlLFpND00F4N7D0ieL9RGAXk39z
vTAIS5hKJ06IP4XeSj3hgb1BGPltQmf/8adwbvLUfp7tQXiRPVN309Wn0CPB
kScvFISCyqIGfRVPoUJ5dMc5ziB82xyYXSKXDDt2m18+OhyIovKOr/U+JMOy
ibWUYXwg9k6rV7lteAbjTK7Zh8sBaBHc30sPTwPSscqbJef8ke+T9H6HlDRg
O65u9/GYP77TcPXjLkmDYDp5dny/P6rPrJE0HE4DuRgu17YlKopelr8wqJYO
QmJqzHePqThoEDQ59zUdBMU1By53+SFFZM9qOVImDDNuNc5o+aLLazfZ+Kks
0H5pzjP22RP/RHc1rlqVC3rzff8Ctl7Hxpr6qlaNfPg3Eh8iFU7BjPdLIxEn
8uHgX/dzH05RkNatxH3KKB8M3vyn4sFLwSM/k0waHfIhcUr/edk9eywXuvmt
OiYfFOyrnu2Nt8M8l90C+eP5EBWnklCdRsb4bWEXY2MLQIvVVLHf1xJv7KkM
N3paACuyfm7uKxZoemAqjy+7AMpXXEtqgiyQ/yR58W5VAaj/SjS7etsc77qr
RdO+F8AqGcsR4YemGNA8/uYGqRD8nXqC1hUa4mWvkxssJwrhD1+5i//Po5gt
uum89UwhrPCt22u/9ihOVPTk2LMVAad1NBtl+xG8yn7p1NXNRXBG4/fRKlMS
uoeHhgdrFMGHn6Ynu/0PYbGsQV/Y8SLQff+kIKroIM62btkXeaYIbG07VcN/
qKD35vSmeEoRrPeq/3XaQgn9n9DXvbpbBBsX3r057yiN1RBuWRBXBEr9e+9r
9u5A9mGjrNLkIthTkn3C8YE4Hg0Rma/ILgJuezvFiJtbMUR6WIdeSMQvu3N4
/Cwf1jdmxTdWFkG/zC/PFSo7rnVyHW9pLALe+m7tapnPJJ0Nh9Q62osgnkY5
IPPhL+lOLltYT38RkD97XDwhyIXvDRu7B0aJ/G7vFXXZLoAbpqJ2f/ldBNah
CjcvqYpgtJpEw8/VxZDywX5yr5wUPqjR5OSQLQavqMsXv+5SxC77NWZcB4vh
9Gy7QvG4EgpxtqRvwGJwthn/ufeFMibontMWMi0G2kIvx4ycGiZ3eIfI+hWD
59TxzRxKgC++lrBbtBRD2YggV3DMcaxZp7SSc6UE/hxy2DEga4R7TBRK7niW
AIn0pN06zQijk+RcLgWXgJm2ncdbEWMkH9g3tPNRCSiU3TFYvdYE/52Tqkpg
lEDytvXU5gFTVM8T9A8TLQU+jqHf34ItsdBs8R8xcsHUni9ouwUZM1IZ/0R2
lYE7XcuOquGAJMGKZ8avyoHPbIjN0s0VVz/Y4qJdWg4ZFumWHmGu2Chw9fDB
2nIQpFnIBT9xxdObJDpFusoh79knKbcGV7ReH7hmeLkc1myrUk8VuY4+7NqX
rulXgIeRVtfhyutY/Ou9bMREBZiYePVuXHBD7yu7FqgzFVA+uO3nyQ3uqDXh
V3+NrRL2LpNs3CXdse6bnI3J5kqQKB/BhOPu2DkSHS2qUQnlG4p37I1xxz+9
Jn+zwivB5END5ClpD5Rt6C+tl6mCNZoOeTeO3EDBX04/o1WqAIb3rZEyvYFs
Wxa3W5GqQHQNfKlwuIGddsLhk6ZVQD7/RaTk7g30/Wd6XiiwCs5ugkeVrBv4
XqV1lWN3FTR6PhQSpdxElXZyOueRavAsL5PtcfXE7AvPq5xOVMNx2fuWXEGe
KD4/+ZF5qhrczvDLS8V4IpekP+9j82ooXb9QJZ7vif1XntyUv1INOxRI/eL/
eWLIut6TFvHVsPbrW6PjTl7YSTL+lfWrGlbVK+bynfHGhadfnuT/rYaqXeWd
9HPeuH3FTf/tXDU8sNnHoFz2xqsVsTnv2WugqSVq2iXIG9eqdzlOCtbAX8ZF
8xcF3qh+wHJMGWpg+7PZiQJ+H0zeZfOpKqoGjhpqfluu9cH6kMmoxtga+C+v
9seFFh/8+cUf2h7VgNM9qtfbbh9Uf5acNJxaA+ct7JTkJ3ywQ3z43JpS4v+r
jVfUNvsip9CFj7qfaoDPwciaRfZFZ26ndpZCLSxVxpTJTfhiRoVgsa5qLZSO
Hjk6NeWLQ9dqH1UdroUmdimBtGVfNOoWts06XgsD4a/Da3n9UC2tcdL3XC3I
KPksLMj74Wot6Q1SYbVwSnBy4OxVP9T6r+13fEQtJPmn2tR5+OHNNL/ODfdr
IXzhnqaInx9+52Y9nn1SC86XWrcEh/shsztYprmgFq7xhLoaZvphouvnE9eH
aoH/07aB4V4/7JKK2Dc2QsSffio79ckPN/aobTz3vRaKHvGt+j3qh0Fa0V3a
07WQO9qgkfnHDy/xwAVhHjqciLlns3kdFZ9VfteJ5KODzxoBCW9eKva5xu3n
EKTDNqahT5MAFQ16fv6dkKTD1nl5oX3iVFROTwyqVqXDNXll3QlFKl610Lmo
okEHgYlJ00xVKmbyTJ3MRjq8NXAW0z9MRZHreptiT9HBf+HLN4tjVGSDhacO
dnTY8HzTkqspFdX/pAf3O9BB9kaKUbAlFd3SDR0Mr9Cho35LqP95Ko7yZMkd
9qRDP+/fB2oXqNjcY17BG0mHj+Wz/S/dqBjUO7bF8T4dnu263MN5k4pq/Tev
1sXTofVy+CM9byqmDT2U8E2lQ1rOxoD4ACr6jnYHfiulg7rELQfSXSoqjTv0
HqukwxuBMOG5SCqOf5tVSqbTQTl345vH96ho8nPriNkHQg/O16yMOCrKTpkf
Z3yhg4uBoWjLUyqOTI8lSXyjw7L3wdaRFComzN6c9f5Fh5a3AonjqVTkXHz4
XHGeDrNH3R4WZlKxfGn3qoh/dNg079Pmm0XF6/9KLMc5GBAQRjus+IKY76t6
uJ/yMmDoNJRYv6JiLMcl+wUBBvgrjnR251JRd83cW1NhBvTKuKlrvib0XBu2
+bU4A6yXuH5F5lOxmEvoynopBhzZypx+X0Al/Py8zmEvA17EsFnMFlJxx3o1
cbocAxwlP4nwFlMxaqNFq9chBpxY5uxnK6Xi8U3ju1laDHhsuG2sn+Alfs8A
hWMMsMkJcE5/Q8X8zVwfw08yIG1b2fWzZVS8JBivOGbAAPkNZLYlgsWF9tw5
YkLkLycoductFTuFS4efWDIg9GbE+9XlVLwjqnN43poB5E0hQs4Ek7b13Deh
EPmdqeOsJnhG/NJE7mUGkJ7vTWKroGKO5NwxHhcGLDyJ+ypLsN2OsCcX3Rng
UfXvywmChaSEZmq8GCAQZ5tsQPCHXc8NtvkzIPVx8/YjBIfsVsv0DCH0kjNz
2UGw+t7GlY7bDIi8tTt6ktjvPxkLC/koBrzPvh6eRfDz/eN5d2IZEG1z89IZ
gq3lPNeNPmJAwY4guRHiPJsVuOzwKaGX6MQIheAmxfiyxDQG5PKK3m8nzh9w
YI/AXBYRzySQJEuwqkqpk3EuA/TfP5lyJ/SbUNVhvCpkgO+HxeIsQt9naj1i
3GUMsN95IKq5hIoW6pc8LlQxYPvMWEgvUR9ejbmWagYDLjY2Pe0qoiJDM0xa
rIkBfy7Gj1UR9fQGIf+brQzYNyBMiSPqrYDPu9s7GaB3WWrbWcIPo0fUFOR6
GTDj8kiEh/CL8XGLzyMjDDCYC2FXIfxVJqDY+uUbA6L2VE405hD++LyuYvgX
Awbfn8k8Rfjxj8/b+E9zDCie6Mvc+ZyKZ0/Ghg4tM6AseuvijQwq1ghecR9k
rwOxcaVDZWlUjH4tfqZ/fR0kj/+O5iPuwxx1VrNvUx0o1Gwr3UncF5tTzH29
gnUQkaD1VfoJFeXGAtf2SNaB8JY25+V4Kr4X+1rZoVwHq7XO/P0RRfSb7xU5
7YfqYKl2hicggoqPS+IS2rTq4N1JK7vV4VR0NNK50apTB1dSvo4M0KjIFfZC
tvlcHVj5hXGziPt/7K9rYm1IHYRr+EGvLeGnat07NbfrwMaY/4mHNRUFInd6
VkcS8ZpJr1ZZUXF4D8u4Mr4O1mkvrpswJupprcZTllMHwdFxVG5tKla8++f1
urMOtikfOuAhRUWph90OeR/rwKvOw0VCkop3KXmmuYPEeVI2DJSJUvHciq3i
y/E6qFSsd67jp+KCct3486U6mHiteFSGjfBHcrh5slQ9VPcIcKv3+GFejb8X
j0w9HBJaNR3W7of7vrg9viFfD0/Hpfgb3vuhpPS5oVPq9TBGquDdVOOHPDn7
HeZP1wMUTx4beO6Hn0pabhj51EON8AyZTMwXq4818RUB9dCUfi45k5g/XQtF
ZXtC60ErpIYx6OCHzZpJ//5FE+tTLn0XO+uHxfSroS8y6uEoh/zER00/DG/d
GLe6neAFyhKZ3Q85/+Modemuh7zne5ZfLPhiAP/cx97+eliRlkwa++OLN0w/
bXs9Vg9WK2G/Fb74IrkvL/38cj3sd5zZvYHui6pjhkXFexrApyiZOuPvi5/+
3e+85N8AxW9KJL788sH1E8zwmyEET01PLn31QbWPG46G3m4AibniAu4BH4wu
uPU69X4DzAhYAnuzD5Iu+UQOZjZAVLZSuF2GD6a02emYMBtgcYPnzv/O+qBd
mmI5bG+EfzHBsdFvvfHrydZUQXojsDgO3Vc574VS4buj7jU2QsT7RK3nZ7yQ
8t7fe/2HRgjwaP6z8ZgXDhsoGLJ/bISge+avKmW8cND43r+fvxrB64wp2+NZ
T+w5b2xZJ/IOBA5FhllFeWKTazev+/V3sGWznBG55CbmPRryatveBBNW1ktP
JjwwPYzj9l7vZjDPz5RdIN7Hpu3Pfr/49j1MeWkopT5yRp5joUavt36AK1NF
7jHaFPTl+7r+87lWKFlFYS9zskSZ3nxSv20rfPPbt25e0RI/pga4d19shcgn
YmHH5yxQ9aBYf8u1Vgi2dTi7gWaBv88bvygLaYXoO11a+k/N0f5FzcnYnFZ4
MCIr87LLFHWPJ4WeWGqFhXS/vBRDI1xaq3o+hY0JwoMHNYaFjbBzQmxWnIMJ
HANUV+VhQwwq/i4jwsWEm97+arxuhjh4MjSGj58Jy+3+bY8enMH4axW2y7uY
IDUUckavXB/XV+5j69ZngsD4str5xeP485Rk4Z0zTNj4S0j/wa3j+KFv8yUt
YyacJR96sCxwHKPml1vTLZhQ4W4dZyOrjfwqzKfu9kzYZjMq7mJ3FIVy3IHf
iwmS/32YaX8BOK9++W+dDxNm7DbYezdpYe+785leVCZ4yus8DfumiY/Hjm/8
HMwELdNa3r49Gii+U3goN5IJj3d+P2eXo4ZSCRVU/TQm9A69CdNvUMQ1e/OV
VmUygXR4OCtyQgFHSzJGC7OY4HYkzFODXwEzWVEGYrlMuLEcsqaqYj/KbLIT
//GGCa3izO5HC7uQJ9msPamcCffe+h5e0JPCCTm9UKMqJjjeHXc5lLQDX55S
/vWGwQT9K7XDL++Io0IYZ2VYKxP+UG4aoMYm3LR10VWjncinUz91dy8P/kmf
3PW7kwnqr97lnoM12K488jG1mwkPhDsidc4skwroPRHmvUxo0G9jrdr7mxRr
1II8A0yg6zk7GZ5oJLl/rpmuHGLCRZltU38kRkim14qzrg8zoV7zl1ra9lmS
6kr2eemvTJCQ44rnEmTHrZFPN/WOMeGkihvjyUMunBOLrYv4zoT1uW/Uo7Zs
xDJ1P9npSUK/qzurtDgEUfPG6WX6AnF+0ptLm1y244zjuM/JZSZ8Xs7LbZ/Y
gXk2gQsfVphwRa1WqO6yFO44WTD7cXUbdFFF/A7b7kYusa1/Jnnb4FXXgUnb
47LYWTM4KrqzjXj/W4x+5K6MzhuuMt302sDNwnzjSj1gYtrd1J2JbXChIWpi
OEoXbY4e0BhKaoO/P1cr3RjXxR3DHzsTUtpgrmvVf3UkPXwusZuTP7MNIK88
NOG3HhYm1Fxiy2+Dvr6Zli36+vg+ekZ2oKENEozjwo/On8ZlX3Jp3N82mN9Z
n7ISaYTVomsNjWba4H54cs2/YiMMKXv5bcN8G1zLTl3XN2iE3HMLIrR/bTD9
gHNORs4YBd0e+Lmta4e91VZJu5uNUe5y05EzEu0gw31iPvKfCVqbKres02sH
tu2FtL+65kgW1U8u1W8HvoiDR8aumKPt5wtuDmfa4Ua50cfSaHOkXHkoXGfa
DvePiUZMs8zxMm3hQgC5Ha6WB77rtLZA96LqfzMe7eAacunLHkdLvLNFX2Ek
uR3iJz3uSDhY4d2+Cxz3U9shdK4oo5lmhREp1C7MIPbr5/M3TbPCaNk836cv
2qEqSdyB/bMVPtAWeHe2uB3I4ubyNRbnMNnjo21bczvwB19r7MDzWMS6cL9y
ph0qPe85Wy1YY/SqnYow3w7ZHbdzl/ht0FH204eqxXboH5snB+yzQXHaWe4a
tg7weRoiKn/OBkOVTwfSuTvg9NEfOjLlNmh2X82lUbwDvq+/qK1/mIyzZ3j0
2o93wKOPFXuqvpOx3bdx3OhkB7xV1ddTnyZjznNaaIdeB3Am6oxmrJCRzMZW
23mmAzJ9WqJMNttiY+6UWvfZDtjO1bKwStMW43kHpfuvdkC07Nr4zHBbPPQ+
j300rgPCrgu+URK3Q7FnPmWJjzpg69WZxCe77ZDN8/h148QO2Fuc2T+rYIeN
O/s/V6d0wJqPtoHeR+3QzGdtzeOcDniw9fZQqYMdXpex9jes7YC4UGcu8ZfE
72x7D3LVdYDnyXpWQJEdHur6+6uyoQMEut/pdlQQ8YNuW+9v6YDmzrWkEx/s
MOpjoebang5Y1hkbdfplhzlhPEvlP4n9luyqcvbZY7R1V4Hb7w4YDbnsuf6A
PboppzjJ/O0AvZpF2XPq9qj+SbXv4VwHKGTtTm/Wscd3B+3KrnN0QrLyPrsf
FHscHS313CPcCRoXeaQPJNijpPbF6fvHOuFHtufEhnl77A9g3RQ70Qkz36O/
iP2zx/jyYwtpJzvB5YNWlDgHBTcp71wpMuiE3Q4vhRfWU5B95yeuHotOsExT
v8cvScGvbGfFxK50wvXJw60tRyn4TONdUppLJ0Tkbkjg1qGgtafadtnrnbAt
UcBV/RQFuyYFpbVudsLtDqOzbiYUbBzskCcHdkJzS3OpLoWC2eX6R9MedIKm
xq1XsYEUvDhXXrc/vhPsPghOrKZRcKfyfp2ihE5QDTaLuRRGwcQX3Pr1TztB
8UCaAncUBSMSGszGszoh5UuiVcljCup2qX68lkOch55PoydRkJM/w2r+VSfo
hVF06CkUpN4OIXMXEvHXDuc+yaTgNU903F/ZCft4t+ZX5lNwf2HeRGF1J/wd
rda7VETB8UkJF006oSdp+dWaUgraOvxzM2gk8v0w9V20goJGZm/9rrV3grHx
/rHiegryxsiwzXd2wmm7xz4rjRRsbnkUFNjdCQZNUTwazRQ8pu15K6a/E5Q/
nDx4r5WCKsoq9wpHiXzTH7rkdFNQ4aGggcK3TtjiO7D+7kcKyizMcuf86ASB
xssG5D4KSlaXhaT+7oTin+Fdo4MU5D5F8oxZ6ITXjjvTnb9ScE3udhXe5U44
sKeA988oBdn4Of7cXumELq8T+s7jFJzurnMKXM2CRPJWO/hBwU/2ejbXeFnA
fU32Ifk3BXvr94tN8LHgVE66acR/FGTt5f3oIMACH5FnIrl/KNg0yTSyEWLB
/XXibW1TFKwzyt/YJ8ICv1qJ1vZpClYX3X9vto0Fb/iyJxpnKFjkY3bcYAcL
zq7xeRo7R8G8wYMcTVIscM23RMd5ov4oXK29mwX3pn+LqixQMD1twbdmLwsC
r91XmSY4eW3/Ic39LPC2iYvNXqRggmPFTKkcC2ZjDMF0iYIPWpIKlBVZYH5Z
QmOa4Dv3bWX3q7JgRPiy9pZ/FAyZOfI9U40FJpBh/YBgf0upzJ2HWUC/5/mF
e4WC3uVrKE81WfCp53ivB8HuEmOSoiQWbNP2PtlFsEtQ40DcERbkX6Ye3M92
AR2/ZiXwaxP6qNZk3ySYohNuHnmCRTyf5GeVEmzzwnkzty4LkhXq1ScJPstr
0EY7xYJbLBeK6KoLaOIqH7nqNKHX6t2ymgSf7uTT8zNkgarkhccmBOse/LN2
3pgFRvT0IluCjyV0MNzNWKBSdjGIQjAsFwb+tmAB5/JurvMEq5PjtJytWJCS
5aSvR7Ay/ebi2HkWOC8XWcgTLC9tWWpPZkHs6QiFdQTL3Fb3GLIj6sPt3ddD
5Cc1IapkdYEFwpmc5CSCJU4v/+pyYEFUWhXDkmCR/MEXRo4suB5ygI+H4M1b
qi99cGZBNf2PTj6hz0bPlF26LizgYkV5nCaYuy9ouM6VBQ9FniYOE3qv1qI8
RXcWuH0qZjgRvJKsfa7iBgvQzGXq+zIFFzh2Cx/yYkHZbTslMsFTF7m6Cn1Y
oEfeT2sm6jn57luMApUFT+45/t1P8Pf9zadzAlhASSkPDiH8MPQn4l0qjVh/
bOcuQcIvIyu+yaZhLGi4xzavRfhrfL3zzbXhLJje8tLgHOG/39K6u5yiWWBF
9k1xJ/w5deDQkth9FsTIZOW6EP6dI+3p+PCAWL/9ja0N4W82K85ApccsKFp5
1SFG+H/1pWnzkSdEfW/mpX0n7guXx4hcXDKhr9z7wy8nif4ZVds/n86CLuvk
Qb6fFNxBp6rV5LHg3A39MaMxCkozr2x0K2CBxmTqxwbivsoMnBuVKibq4fWl
S3GEggdm1WPD3rLA8sHzzV8/Ef1i3+zk6XrCz3o3o94R/UBHbbR+1TsW/Pqt
0jxG9ItT2qwnBc0sSJWXMF9kUdDUpkBvaxsLdmUoBLG3E/30vkvmYB8LQt70
CcW8o6BjsjU1epA4r/+1d1YNFLz6Ut/0yGfi/lh2bBSto+DNhn0cGaOEv2i/
AryrKRi2OGZ95T8W2O2S/VZRTMEse7LgEmcXLHiy+1gT/fTVtdM/X67rgqaj
ds9oRL/N99Ni2KzvAvuAtz+eEf247KHYdfqmLnjpQ1tb/YDoH809LXfEuqC6
qMWSdpuCEwcMacJKXSCqOb7tmAsF32WMSD9R7oIbes9+rXemYIawZ6PkwS5Y
Mnr4rOUSBckrSTx7NLrg6qkBpqodBTuaJu6pHu+CVPPojVnEfCmzDUsyPtsF
p5MKrQTUKHg7qqokIqgLHl0atVEk5t9FdmPLTbQuiGP/5rN62h6PeIwuxN7q
Al5SAJn52x6Xzm7QSrzbBeNbuJONxu3xmrQVIzuuC8aqq6tXddujRcUMsyG7
C/5W1zXyFdij9A/Z76s6uqDwQnzHzov2uJ6rNf0tqwu22su4vibb41+pa7Ye
PV2gspo3+aCVPVZb5/eMD3TBF+NmluwZezzbrtrQOk7o6dSTWHvIHiPfQNqT
f13QEwLXH/DY4/QtQ+tDMt3QsHDvpXi2HTKkPNqvBXbDuGIkI6fTFoMzyyyW
gruBNiM6KvrBFo/IsA3dCu2GyV8DHqENtlgjH/4jKbwbTp14sqhfZouV6imr
Wx50w7LdD3LmU1ssOdOiuje7GxRPNsXcvmyL2b67Hn9u74ZdHOslDi+QMaqT
ZW8k1QOrkyKuNvCRcdK4+h47owcGJJcSLp8+h/mmW44ecv0Ih2IdXRJnzTG1
JfjJMH8v3FnY5xYyYoyzDed8+Gt74eGx4qvsB0/jp3tV03xX++A/gcXIPIMT
ONN2WDiItx92ZR1MwnASXovdUe1V3g/iHDz43/IB3Nqyg2/EegA4XmhfpZbt
QLXpzr9k2wFQMlJqcruyAy223eoesB+AWw1JEgmSOzDhyo+k7ksDwCuytczr
1nYU5y2Ubb4+AEJ/1StCzCVR+rS2Xn7oAIzf/qkRu0oMVdocQgNeDcBGseJQ
0d/8aDYv7LicNwBz0X0xR+348cb29/reBQMQ97bcqqVzE5a6KmxxLx2AJWPR
jZxv+VCDfz7VoXYAAtlVawWFNuAx4zs1Bl0DUOPufbk6YDVe8NFIb+4ZgEzm
5RtHXDkwNPVXmE7fAHSN/ZC5ZceOjX+Nzhz5NADbRpk6FifY8FSs6JDK9wF4
/ah6Qk55jnSlvKU2f2IANizG1lhunyFFjvhnyE8OgMDfb01cfFMkpvLIlb1T
AzDv/6zq65dJ0n/n4gwzZgbg6/iXg1ZNP0j8NB2VnfMDsG/Grq+7YIxkzMpZ
Evs3APpdXC+bJIZI1EznhVa2QXjsNmL0n0kX6bnX/rkgjkH4KjFs47SjmdSu
NzGtwjkIWiG+IVZGBaSlbTl/x7kG4bmA3Gry2lyS9G+n/x7zDAJHUlpVpvg7
kmHtvkkD3kGod7v5IkWVRcq4+OJ7ocAgxMh+dpw/+IXEVHMadxAchBUJT/6l
gDHSIve+URHhQWC4ViW71f8gncnN/hwgPggVW6zf2u78Q1qYzeo5tXcQlmgO
et6RCySppstdK/sGwUU/0LsrbYl0OnFvZ77cIFwoDFV3efOPlEbKahVSHgTx
sff1L66uQoPbz+tHtAaBvrC/aU3YGnwmklnoazIIToHtls+iN+D7iYv58uZE
/rp+7+ojeHG2Ujpv2HIQ/BdSpnnubMRT9hkvdGwGIdu4+uFSFR/OvEh/ttlx
EP5t5Vt8ncePuppp0Tn+g+D6eO64oZ8g/rFJce7PHgRHJanrPIxtOP1wjYrt
y0EQkFhle1pWHOdaLy9/zR2E2vT4BuU4cVwBpcjJwkFQPihqNnJRAtdL0nPZ
qwZhod/XZyJQEnd9Gvmzp2MQmPICZoKChN/Je7w8Fon1PWVf7ovuQqv4u7iw
PAj90m8cKLq70Jr5e50/2xDIH3osv9ZrF14gvUkIWzMEPHckq+msXXhdUrf8
8cYh6LWYPysSIY13Pzmt1OwcAnrFrvMn/+7GKnIujffUENhfOxLDlySDZa3O
eoMGQ3BHL0dx/XsZLNaS2fTKcAgeNHmubZuXwRyx9ER98yG4fu1KVrHJPkzo
SSi4azcEt/JJm6bW7kePM6Gfub2GICN7FZsuRRb3kc5rrs0YAu4XhfYLU/Io
nSvC0f18CNIDq1V28irgDvGexowXQ2AmrqqUu10BhZaMTI6/HoKTr2KOeOko
IGepjhOtfAjERRfYu2MV8LO88iOOjiH46Ny0h75HEfuT/rPuYA1BoanE9g/q
itizIVcqtWcIGu6qva86pYgffuzNOzI4BEqJso7m1xSxPFOiIfDbECQsFvNb
FitiqeDAXcOJIahXjfuV0KCIBbQEo+2TRP66df30HkXMtt8yWD01BM5FupLN
C4qY3t6eGj07BMPk5ogsHiVMxujL5IUhOOLyW9NFTAkT8/TlFZaHwElrQENM
VgkfSvBMr6wMwbrqsrg8TSX8Hz3Utes=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
gDKZfPqoiYZysnL3X34l/veFI5P6fyiZR/y6Mt+ILv8wL2V4gZL8M8eZ8Z3o
If2sS24LlEhpgV/8FGG2ISenuHmKU5u6GvaHsFXtadf5WWrQ6ugZ51Xt4C1Q
70ivnKaCHljulpInzD+aMxnynfKbPTSWrNAOtB0ceZe6xqgbJ8WStx0kXPfx
BNO2Mcply4jIRorwQXqy8ttR6ky6Ax/nEcJjsrUr579QshVuiyOnSb78dU0z
TwepPeIn860siJ5wkE1jboCSvK10ZeAs4QPHmcIz+qktx/5OdNgQNu6LWRTu
ozh7fT9VXSSsmqtWwNdJDfy6+y7en/ClnBdshe+p4X9eccaBhMe7Nfx21VKj
3A5u7HcIh6v/wNgqakr8yHb7UMIC+QybB6XUzH7FJeEHhPVyn9zeUUjNUxKt
DQ8Jl+bVRsq8pmhmbD77ogkPJu5a/zqNYrH9fWI4hnCoTdeLP3EUx5Vh6Yg4
wt6mdE+luxS3byurZvz/43WGIuwuUWvulfctJP7fT91/mf2I4mdk56anEM7n
0XYwSqSEUuOCTqf/vx+F7L8lz6mtFdcVyrL+3/9Qen5uPiXe5Lj6ci5hB8XT
xfpFlOTHU1/FXhGmXXSenS6l9s8phQe+JSz/0dv1ehWlvmtu8lg14SM7G7TO
NVDnHzgl9/cSvrx5n1ZJJ3Uhzvx6aD/hPPGmyNouip6pY3xoiLDywrJgUzfl
VrNrRdJXwlrX/Au6e6nAxRFzx5+Et275mNc5QKVaWfAvsXWAd4edsE7pZ2p8
v76/4L4OoPkxlfW8H6PeJQ2Lx8gSlj/4sWD3dypJ8GqtyAHCvvfoU/e+Uxb/
nnBJKJP42Bj1MwbjVOv78fvyGoR33+062/iDKrAMfGJo2gGUYUq5mfEUdfte
yeu7voSnvslyz/6izjMbnlzj30Hef/LPHm+apg5d+fon/BaJf1p3uF99mloy
5VFlBJN6IgfjQ8KmKWdxs8q0CMK/Q2ofSs5QJkWzTTVpJN+Ty0vBOr8p8e+7
x5haSb4xhxI/yzmKm6Mx8W070U3Nvaibc9S0mLPlla4OEHlqfy03YY4qNc/p
Gv1I8p1lGyn9OkeZtsjXNI52gMWYpKefzTwV8gYSYpaJ//PgTrZTC5RLx+CZ
E0ydYMFfd+Kc+wJlNu2zcQ1LJ8Tdb1j2iVigJHZXhvmt7ITSS19lfzcuUOVx
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
1P8AUNSmfQ==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7302155839630003`*^9, 3.730215640762*^9}, {
   3.730215685388*^9, 3.7302157222460003`*^9}, 3.730216325125*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"OptV", "[", "n_", "]"}], ":=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v", "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"n", "-", 
          RowBox[{"2", "v"}], "-", "1"}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "v"}], "+", "1"}], ")"}]}]}], "}"}], "//", 
     "Evaluate"}], ",", 
    RowBox[{"{", 
     RowBox[{"v", ",", "1", ",", "20"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.730215842389*^9, 3.730215975164*^9}, {3.730216025829*^9,
   3.730216092979*^9}, {3.730216159639*^9, 3.730216159983*^9}, {
  3.730216201317*^9, 3.7302162014119997`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OptV", "[", "50", "]"}]], "Input",
 CellChangeTimes->{{3.730215955671*^9, 3.730215958388*^9}, {3.730216111559*^9,
   3.7302161166800003`*^9}, {3.7302161562349997`*^9, 3.730216232993*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
pG/p1jH8PxNJ5Xo=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{5., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.730215959164*^9, 3.730215979226*^9}, {3.730216034413*^9,
   3.730216044034*^9}, {3.730216074459*^9, 3.7302161170889997`*^9}, {
  3.7302161634449997`*^9, 3.73021623345*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"TVa", "[", 
   RowBox[{"p_", ",", "v_", ",", "k_"}], "]"}], ":=", 
  RowBox[{"Abs", "[", 
   RowBox[{"Simplify", "[", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Simplify", "[", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"DeSingKernel", "[", "k", "]"}], "/.", 
           RowBox[{"a", "\[Rule]", "d"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"d", ",", "p"}], "}"}]}], "]"}], "]"}], "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"-", "d"}], ")"}], "^", "p"}], ")"}], "/", 
        RowBox[{"p", "!"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", 
        RowBox[{"v", "+", "1"}]}], "}"}]}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7282380448383093`*^9, 3.7282380670795813`*^9}, {
   3.7282384780560884`*^9, 3.7282384819263096`*^9}, {3.7282388153773823`*^9, 
   3.7282388184945602`*^9}, {3.7282388827022324`*^9, 
   3.7282388827852373`*^9}, {3.7282390691958995`*^9, 
   3.7282392663681774`*^9}, {3.7282397161389027`*^9, 3.728239786775943*^9}, {
   3.7282398473104053`*^9, 3.7282399133901844`*^9}, 3.7282400162940702`*^9, {
   3.728240139562121*^9, 3.7282401423332796`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TV", "[", 
   RowBox[{"p_", ",", "v_", ",", "k_"}], "]"}], ":=", 
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"d", ">", "0"}], ",", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"TVa", "[", 
       RowBox[{"p", ",", "v", ",", "k"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7282400248645606`*^9, 3.728240040960481*^9}, {
  3.728240078190611*^9, 3.728240080436739*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TVd", "[", 
   RowBox[{"p_", ",", "v_", ",", "k_", ",", "dd_"}], "]"}], ":=", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"TVa", "[", 
      RowBox[{"p", ",", "v", ",", "k"}], "]"}], "/.", 
     RowBox[{"d", "\[Rule]", "dd"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7282405159886513`*^9, 3.72824054358523*^9}, {
  3.7282405989333954`*^9, 3.728240621506686*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TV", "[", 
  RowBox[{"1", ",", "1", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.7282401046091213`*^9, 3.728240104741129*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        FractionBox["35840", 
         RowBox[{"6561", " ", 
          SuperscriptBox["d", "2"]}]], 
        RowBox[{
         RowBox[{"d", "\[Equal]", 
          RowBox[{"2", " ", 
           SqrtBox["2"]}]}], "||", 
         RowBox[{"d", "\[LessEqual]", "0"}]}]},
       {
        FractionBox[
         RowBox[{"105", " ", 
          SuperscriptBox["d", "6"]}], 
         RowBox[{"4", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["d", "2"]}], ")"}], 
           RowBox[{"9", "/", "2"}]]}]], 
        RowBox[{"d", ">", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]}]},
       {
        FractionBox[
         RowBox[{"35", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "19683"}], " ", 
             SuperscriptBox["d", "8"]}], "+", 
            RowBox[{"8192", " ", 
             SqrtBox[
              RowBox[{"1", "+", 
               SuperscriptBox["d", "2"]}]]}], "+", 
            RowBox[{"32768", " ", 
             SuperscriptBox["d", "2"], " ", 
             SqrtBox[
              RowBox[{"1", "+", 
               SuperscriptBox["d", "2"]}]]}], "+", 
            RowBox[{"49152", " ", 
             SuperscriptBox["d", "4"], " ", 
             SqrtBox[
              RowBox[{"1", "+", 
               SuperscriptBox["d", "2"]}]]}], "+", 
            RowBox[{"32768", " ", 
             SuperscriptBox["d", "6"], " ", 
             SqrtBox[
              RowBox[{"1", "+", 
               SuperscriptBox["d", "2"]}]]}], "+", 
            RowBox[{"8192", " ", 
             SuperscriptBox["d", "8"], " ", 
             SqrtBox[
              RowBox[{"1", "+", 
               SuperscriptBox["d", "2"]}]]}]}], ")"}]}], 
         RowBox[{"26244", " ", 
          SuperscriptBox["d", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["d", "2"]}], ")"}], 
           RowBox[{"9", "/", "2"}]]}]], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7282401101824403`*^9, 3.728240177180272*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"TVd", "[", 
    RowBox[{"p", ",", "1", ",", "3", ",", "0.05"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "0", ",", "7"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7282406854633446`*^9, 3.728240731155958*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1944.6263997315843`", ",", "4370.0655383842495`", ",", 
   "7310.789482694575`", ",", "10852.083169394627`", ",", 
   "14925.290211898926`", ",", "19502.117928255135`", ",", 
   "24564.509525406986`", ",", "30099.98602238098`"}], "}"}]], "Output",
 CellChangeTimes->{3.728240777919633*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"TVd", "[", 
    RowBox[{"p", ",", "2", ",", "3", ",", "0.05"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "0", ",", "7"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.728240814826744*^9, 3.728240814950751*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "104513.44915606956`", ",", "355751.9742601757`", ",", "786863.0202013227`",
    ",", "1.4365073460986684`*^6", ",", "2.337573742004182`*^6", ",", 
   "3.5216082002116605`*^6", ",", "5.019178142012688`*^6", ",", 
   "6.86015333120628`*^6"}], "}"}]], "Output",
 CellChangeTimes->{3.7282408357819424`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"TVd", "[", 
    RowBox[{"p", ",", "3", ",", "3", ",", "0.05"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "0", ",", "7"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.728240844397435*^9, 3.7282408445734453`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "8.37998883641516`*^6", ",", "3.7277457029135525`*^7", ",", 
   "1.0188089253453287`*^8", ",", "2.205159009946316`*^8", ",", 
   "4.142905823276382`*^8", ",", "7.069745969315581`*^8", ",", 
   "1.1249233783138857`*^9", ",", "1.6970191699438293`*^9"}], "}"}]], "Output",\

 CellChangeTimes->{3.728240864534587*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"TVd", "[", 
    RowBox[{"p", ",", "6", ",", "3", ",", "0.05"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "0", ",", "7"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.728241408626707*^9, 3.7282414088057175`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.603643622966832`*^13", ",", "1.2009198224414408`*^14", ",", 
   "5.104344548233299`*^14", ",", "1.618306037313814`*^15", ",", 
   "4.2565001769998345`*^15", ",", "9.815076703190698`*^15", ",", 
   "2.0509295872375044`*^16", ",", "3.968472426313405`*^16"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7282414292288857`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"TVd", "[", 
    RowBox[{"p", ",", "7", ",", "3", ",", "0.05"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "0", ",", "7"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7282429813606625`*^9, 3.7282429819536963`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.701231390801771`*^15", ",", "2.294608003245386`*^16", ",", 
   "1.0904376874081923`*^17", ",", "3.821267748731864`*^17", ",", 
   "1.1006122153510409`*^18", ",", "2.7577254148133284`*^18", ",", 
   "6.220894690955226`*^18", ",", "1.292265625877377`*^19"}], "}"}]], "Output",\

 CellChangeTimes->{3.7282430020828476`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"TVd", "[", 
    RowBox[{"p", ",", "8", ",", "3", ",", "0.05"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "0", ",", "7"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7282414594786158`*^9, 3.728241459622624*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "5.1179210004751174`*^17", ",", "4.861352003775483`*^18", ",", 
   "2.5538336395260445`*^19", ",", "9.801557464091438`*^19", ",", 
   "3.068031488566675`*^20", ",", "8.300098294156763`*^20", ",", 
   "2.010353180134613`*^21", ",", "4.462384231892508`*^21"}], "}"}]], "Output",\

 CellChangeTimes->{3.7282414803178077`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"TVd", "[", 
    RowBox[{"p", ",", "9", ",", "3", ",", "0.05"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "0", ",", "7"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7282429895091286`*^9, 3.7282429899141517`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.0763706018115063`*^20", ",", "1.1303464140870255`*^21", ",", 
   "6.504124392277346`*^21", ",", "2.713165960878168`*^22", ",", 
   "9.170547483134513`*^22", ",", "2.6641157522143993`*^23", ",", 
   "6.895794073788293`*^23", ",", "1.6288972294797895`*^24"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7282430916859727`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"TVd", "[", 
    RowBox[{"p", ",", "12", ",", "3", ",", "0.05"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "0", ",", "7"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7282417668351955`*^9, 3.7282417676232405`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.7032338687280248`*^27", ",", "2.3003588412301974`*^28", ",", 
   "1.668932542541356`*^29", ",", "8.63075873752476`*^29", ",", 
   "3.564097260488873`*^30", ",", "1.2489852252621562`*^31", ",", 
   "3.856290180043855`*^31", ",", "1.0758251745762488`*^32"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7282417900315228`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"TVErr", "[", 
   RowBox[{"V_", ",", "v_", ",", "n_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"32", "/", "15"}], ")"}], "*", 
   RowBox[{"(", 
    RowBox[{"V", "/", 
     RowBox[{"(", 
      RowBox[{"Pi", "*", "v", "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"n", "-", 
          RowBox[{"2", "v"}], "-", "1"}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "v"}], "+", "1"}], ")"}]}]}], ")"}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.7282411246444645`*^9, 3.72824122423116*^9}, 
   3.728241277268194*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TVErr", "[", 
  RowBox[{
   RowBox[{"Total", "[", 
    RowBox[{"Out", "[", "67", "]"}], "]"}], ",", "1", ",", "55"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.728241228148384*^9, 3.7282412728929434`*^9}}],

Cell[BoxData["0.5484795102650678`"], "Output",
 CellChangeTimes->{{3.7282412435532656`*^9, 3.7282412794283175`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TVErr", "[", 
  RowBox[{
   RowBox[{"Total", "[", 
    RowBox[{"Out", "[", "68", "]"}], "]"}], ",", "2", ",", "55"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7282412932081056`*^9, 3.7282412957422504`*^9}}],

Cell[BoxData["0.02218861905619634`"], "Output",
 CellChangeTimes->{3.7282412969603205`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TVErr", "[", 
  RowBox[{
   RowBox[{"Total", "[", 
    RowBox[{"Out", "[", "69", "]"}], "]"}], ",", "3", ",", "55"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.728241303001666*^9, 3.728241307058898*^9}}],

Cell[BoxData["0.001662276798110477`"], "Output",
 CellChangeTimes->{3.728241307476922*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TVErr", "[", 
  RowBox[{
   RowBox[{"Total", "[", 
    RowBox[{"Out", "[", "79", "]"}], "]"}], ",", "6", ",", "55"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.728241437805376*^9, 3.7282414481269665`*^9}}],

Cell[BoxData["6.844648942824757`*^-6"], "Output",
 CellChangeTimes->{3.728241448635996*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TVErr", "[", 
  RowBox[{
   RowBox[{"Total", "[", 
    RowBox[{"Out", "[", "81", "]"}], "]"}], ",", "8", ",", "55"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7282414906243973`*^9, 3.728241493806579*^9}}],

Cell[BoxData["9.144358378087051`*^-7"], "Output",
 CellChangeTimes->{3.728241494254605*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TVErr", "[", 
  RowBox[{
   RowBox[{"Total", "[", 
    RowBox[{"Out", "[", "85", "]"}], "]"}], ",", "12", ",", "55"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.728241792840683*^9, 3.728241799495064*^9}}],

Cell[BoxData["1.0903355756007722`*^-6"], "Output",
 CellChangeTimes->{3.728241800319111*^9}]
}, Open  ]]
},
WindowSize->{1904, 998},
WindowMargins->{{-2, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.2 for Microsoft Windows (64-bit) (July 7, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 365, 7, 31, "Input"],
Cell[CellGroupData[{
Cell[948, 31, 940, 20, 31, "Input"],
Cell[1891, 53, 213, 6, 47, "Output"]
}, Open  ]],
Cell[2119, 62, 273, 6, 31, "Input"],
Cell[CellGroupData[{
Cell[2417, 72, 986, 27, 31, "Input"],
Cell[3406, 101, 455, 9, 48, "Output"]
}, Open  ]],
Cell[3876, 113, 861, 17, 31, "Input"],
Cell[CellGroupData[{
Cell[4762, 134, 731, 18, 31, "Input"],
Cell[5496, 154, 890, 21, 56, "Output"]
}, Open  ]],
Cell[6401, 178, 285, 6, 31, "Input"],
Cell[CellGroupData[{
Cell[6711, 188, 790, 19, 31, "Input"],
Cell[7504, 209, 550, 12, 46, "Output"]
}, Open  ]],
Cell[8069, 224, 303, 7, 31, "Input"],
Cell[CellGroupData[{
Cell[8397, 235, 1290, 26, 31, "Input"],
Cell[9690, 263, 556, 11, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10283, 279, 421, 8, 31, "Input"],
Cell[10707, 289, 506, 10, 56, "Output"]
}, Open  ]],
Cell[11228, 302, 390, 9, 31, "Input"],
Cell[CellGroupData[{
Cell[11643, 315, 959, 27, 31, "Input"],
Cell[12605, 344, 670, 18, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13312, 367, 472, 14, 31, "Input"],
Cell[13787, 383, 367, 8, 31, "Output"]
}, Open  ]],
Cell[14169, 394, 294, 7, 31, "Input"],
Cell[CellGroupData[{
Cell[14488, 405, 513, 15, 31, "Input"],
Cell[15004, 422, 472, 16, 56, "Output"]
}, Open  ]],
Cell[15491, 441, 865, 23, 31, "Input"],
Cell[CellGroupData[{
Cell[16381, 468, 1062, 26, 31, "Input"],
Cell[17446, 496, 771, 21, 56, "Output"]
}, Open  ]],
Cell[18232, 520, 1227, 27, 52, "Input"],
Cell[19462, 549, 1394, 38, 73, "Input"],
Cell[20859, 589, 389, 9, 31, "Input"],
Cell[CellGroupData[{
Cell[21273, 602, 671, 14, 31, "Input"],
Cell[21947, 618, 1100, 27, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23084, 650, 799, 24, 31, "Input"],
Cell[23886, 676, 684, 18, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24607, 699, 1092, 33, 31, "Input"],
Cell[25702, 734, 588, 18, 56, "Output"]
}, Open  ]],
Cell[26305, 755, 630, 15, 31, "Input"],
Cell[CellGroupData[{
Cell[26960, 774, 714, 20, 31, "Input"],
Cell[27677, 796, 32247, 542, 224, "Output"]
}, Open  ]],
Cell[59939, 1341, 256, 6, 31, "Input"],
Cell[60198, 1349, 609, 17, 31, "Input"],
Cell[60810, 1368, 1681, 38, 72, "Input"],
Cell[62494, 1408, 1375, 44, 31, "Input"],
Cell[CellGroupData[{
Cell[63894, 1456, 594, 17, 39, "Input"],
Cell[64491, 1475, 297, 6, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64825, 1486, 539, 16, 31, "Input"],
Cell[65367, 1504, 190, 5, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65594, 1514, 1104, 24, 31, "Input"],
Cell[66701, 1540, 82790, 1493, 235, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149528, 3038, 798, 19, 31, "Input"],
Cell[150329, 3059, 66074, 1201, 222, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[216440, 4265, 431, 12, 31, "Input"],
Cell[216874, 4279, 814, 24, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[217725, 4308, 490, 13, 31, "Input"],
Cell[218218, 4323, 846, 25, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[219101, 4353, 595, 15, 31, "Input"],
Cell[219699, 4370, 917, 24, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[220653, 4399, 564, 16, 31, "Input"],
Cell[221220, 4417, 507, 14, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[221764, 4436, 487, 10, 31, "Input"],
Cell[222254, 4448, 411, 11, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222702, 4464, 555, 17, 31, "Input"],
Cell[223260, 4483, 172, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[223469, 4492, 657, 19, 31, "Input"],
Cell[224129, 4513, 468, 9, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224634, 4527, 608, 18, 31, "Input"],
Cell[225245, 4547, 753, 13, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[226035, 4565, 628, 14, 31, "Input"],
Cell[226666, 4581, 5346, 173, 107, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[232049, 4759, 203, 4, 31, "Input"],
Cell[232255, 4765, 507, 17, 56, "Output"]
}, Open  ]],
Cell[232777, 4785, 1346, 34, 31, "Input"],
Cell[CellGroupData[{
Cell[234148, 4823, 232, 4, 31, "Input"],
Cell[234383, 4829, 39239, 697, 432, "Output"]
}, Open  ]],
Cell[273637, 5529, 741, 21, 31, "Input"],
Cell[CellGroupData[{
Cell[274403, 5554, 211, 3, 31, "Input"],
Cell[274617, 5559, 36237, 606, 243, "Output"]
}, Open  ]],
Cell[310869, 6168, 1268, 32, 31, "Input"],
Cell[312140, 6202, 542, 15, 31, "Input"],
Cell[312685, 6219, 520, 14, 31, "Input"],
Cell[CellGroupData[{
Cell[313230, 6237, 156, 3, 31, "Input"],
Cell[313389, 6242, 3508, 103, 122, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[316934, 6350, 287, 7, 31, "Input"],
Cell[317224, 6359, 332, 7, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[317593, 6371, 285, 7, 31, "Input"],
Cell[317881, 6380, 345, 7, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[318263, 6392, 287, 7, 31, "Input"],
Cell[318553, 6401, 355, 8, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[318945, 6414, 287, 7, 31, "Input"],
Cell[319235, 6423, 366, 8, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[319638, 6436, 289, 7, 31, "Input"],
Cell[319930, 6445, 365, 8, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[320332, 6458, 287, 7, 31, "Input"],
Cell[320622, 6467, 364, 8, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[321023, 6480, 289, 7, 31, "Input"],
Cell[321315, 6489, 367, 8, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[321719, 6502, 290, 7, 31, "Input"],
Cell[322012, 6511, 366, 8, 33, "Output"]
}, Open  ]],
Cell[322393, 6522, 612, 20, 31, "Input"],
Cell[CellGroupData[{
Cell[323030, 6546, 229, 6, 31, "Input"],
Cell[323262, 6554, 116, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[323415, 6560, 231, 6, 31, "Input"],
Cell[323649, 6568, 91, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[323777, 6574, 227, 6, 31, "Input"],
Cell[324007, 6582, 90, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[324134, 6588, 229, 6, 31, "Input"],
Cell[324366, 6596, 91, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[324494, 6602, 229, 6, 31, "Input"],
Cell[324726, 6610, 91, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[324854, 6616, 228, 6, 31, "Input"],
Cell[325085, 6624, 92, 1, 31, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
