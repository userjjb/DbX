(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    319894,       6506]
NotebookOptionsPosition[    314467,       6317]
NotebookOutlinePosition[    314809,       6332]
CellTagsIndexPosition[    314766,       6329]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"inner2D", " ", "=", " ", 
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"k", ">", "0"}], ",", 
      RowBox[{"r", ">", "0"}]}], "}"}], ",", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "Pi", " ", "I", " ", "k", " ", "r", " ", 
        RowBox[{"Cos", " ", "[", "t", "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        RowBox[{"2", " ", "Pi"}]}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7207116069519997`*^9, 3.720711631847*^9}, {
  3.7207120611400003`*^9, 3.720712096799*^9}, {3.720712872352*^9, 
  3.720712913092*^9}, {3.721149030576*^9, 3.721149033969*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "\[Pi]", " ", 
  RowBox[{"BesselJ", "[", 
   RowBox[{"0", ",", 
    RowBox[{"2", " ", "k", " ", "\[Pi]", " ", "r"}]}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.720712097781*^9, {3.720712878966*^9, 3.720712915117*^9}, 
   3.721149035834*^9, 3.721589856625*^9, 3.721590077041*^9, 
   3.721716000382331*^9, 3.7217484513389997`*^9, 3.722191578366*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", " ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", ">", "0"}], ",", 
     RowBox[{"k", ">", "0"}]}], "}"}], ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"r", "^", "2"}], "+", 
         RowBox[{"a", "^", "2"}]}], "]"}], "]"}], " ", "inner2D", " ", "r"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.720712954492*^9, 3.7207130366549997`*^9}, {
   3.720713819593*^9, 3.720713851908*^9}, {3.72071402702*^9, 
   3.7207140272460003`*^9}, {3.721149042459*^9, 3.721149117809*^9}, 
   3.721149263359*^9, {3.72114934034*^9, 3.721149351491*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Integrate", "::", "idiv"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral of \[NoBreak]\\!\\(r\\\\ \\(\\(BesselJ[\\(\\(0, \
\\(\\(2\\\\ k\\\\ \[Pi]\\\\ r\\)\\)\\)\\)]\\)\\)\\\\ \\(\\(Log[\\(\\(a\\^2 + \
r\\^2\\)\\)]\\)\\)\\)\[NoBreak] does not converge on \[NoBreak]\\!\\({0, \
\[Infinity]}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Integrate/idiv\\\", ButtonNote -> \
\\\"Integrate::idiv\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7217160060846567`*^9, 3.721748456889*^9, 
  3.7221915841800003`*^9}],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
  RowBox[{
   RowBox[{"2", " ", "\[Pi]", " ", "r", " ", 
    RowBox[{"BesselJ", "[", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "k", " ", "\[Pi]", " ", "r"}]}], "]"}], " ", 
    RowBox[{"Log", "[", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["a", "2"], "+", 
       SuperscriptBox["r", "2"]}]], "]"}]}], 
   RowBox[{"\[DifferentialD]", "r"}]}]}]], "Output",
 CellChangeTimes->{
  3.720713042959*^9, {3.720713827217*^9, 3.7207138434449997`*^9}, {
   3.720714007734*^9, 3.7207140291070004`*^9}, 3.721149064149*^9, {
   3.721149106151*^9, 3.721149121624*^9}, 3.7211493538310003`*^9, 
   3.721589860657*^9, 3.721590083347*^9, 3.7217160060956573`*^9, 
   3.721748456891*^9, 3.722191584183*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Log", "[", "r", "]"}], " ", 
    RowBox[{"BesselJ", "[", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "Pi", " ", "r"}]}], "]"}], " ", "r"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.720713101991*^9, 3.720713207455*^9}, {3.720713245396*^9,
   3.720713263301*^9}, {3.720713750868*^9, 3.720713813584*^9}, {
  3.7207146689049997`*^9, 3.720714681078*^9}, {3.7207147551540003`*^9, 
  3.720714766204*^9}, {3.721149149797*^9, 3.721149154021*^9}, {
  3.721149235381*^9, 3.72114923999*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
7Mp9933N54mJaKFu24w4yjFp7sqnnSPDDlPT6UviSKPzg+HJvlniSiReP6eW
QPko7xiTixv62Mqz7zCHBLYdEOMKeTtN/ibsufNxuwSe5WLcv6I/RiyXLso8
VJbAgJ0LFHXlETJ5PKjCdJ8ESsPMoibdEGGfGOfn1JHAYIvUM7d9esmxPQkp
ty0lcJZtZiVrZwNp9mk4q28rgUISVAVFZ2qIbRPdyrZrEnjCoSwmt7OM+HhY
/tfuKYEdAk99431jScFP4X+arySQ5030z0GNGtiv58/NVSWBBzv/Ht8XOwLl
kT8yh+s3+Mb+3FHaOgZGU0NmRW0S6LInLMGcdhJuhegkuQxLYJPZp/DbQtNA
13/TwGBKAhlV2S8ICc1AkGrM/PYFCQypdJq+x0kBo7F1qQkaSRSnPVtQ2zsL
kvwCsyYMkuhFVyXbkz8HA+qKZWXMktj0xUCYKngePttoh+9hk8QvXyUUSs8v
wO1AU8doTkk8u7vperPAIqhn3dDg4JXEk7ouWW3li0Df/ZTXU0ASE05rJ3o4
LUElS/TAoLAkevRGzV/atAwhu7Kyz4pLov7i8wf6b5bB1LTav0BKElnz6O/O
iq7A5kcDFju3SCJ75K9Q3uAVGE5e2/V26wa/nau0N1ZWILWBj5FZQRI5Qxgz
W41WwX1doeXWTkn8dlD8qkTCKmhs1UruVpHE5CaBPN7hVWAyMLl3cq8kaobH
a70SX4Nqt+unc9QkMZ178P0z7TV4Ff1EdtshSXzHqhjcYrYG5r+iFkNREs+r
iqw52a+BLOV7JY2WJB5yGlrSsl2DcdGqyGtHJHFwbLDVwGgNMrT7r7cdk8S4
Hwoqr/evgZfjqvZRPUnMQKsqaY410ArjFcowkMT6hpqilfpVYM2XH5U+K4nh
5LH5geer0P3aoOyukST26X8NiTq4Ct9vuMS2mUhiAAebr2T7Cjw78e6emrkk
Fls+K+90WgEruULTl1aSqMdZ48e0sAyq1EP7Zi5JYsi/6eCK68vA2srOp28n
iVu+/JY1+bcE3wPO/2Z2ksQDKzmrjW8W4ZntvY+Xb0iit438vaP9C2B1OO5R
4W1J/LDcVRssuwCsc1OHvLwkkWHIcNuszxx0VwkIt9yTxPGzjiez4mfh+8dD
c3u9JTHmx80jX/IoYHXhyefJp5IYEfnqZ0H1NOxTTXl6ImCjn7I61Z8rp4CN
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
ixsdU5XBfwGPOEoD
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 20}, {-4.19695822608571, 4.107866379676592}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellFrame->{{0, 0}, {3, 0}},
 CellChangeTimes->{{3.7207147575480003`*^9, 3.7207147729040003`*^9}, {
   3.721149224057*^9, 3.72114924102*^9}, 3.721589860876*^9, 3.721590083443*^9,
    3.72171600630367*^9, 3.7217484570889997`*^9, 3.7221915844049997`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"inner3D", " ", ":=", " ", 
  RowBox[{"2", " ", "Pi", " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "Pi", " ", "I", " ", "k", " ", "r", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], "*", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.718088244149761*^9, 3.7180885039406204`*^9}, {
   3.718088609315647*^9, 3.718088659528519*^9}, {3.71963188646301*^9, 
   3.7196318932353973`*^9}, 3.719632102105344*^9, {3.7197194185755606`*^9, 
   3.719719474369752*^9}, {3.721148037795*^9, 3.721148086099*^9}, {
   3.7211484588050003`*^9, 3.7211485159440002`*^9}, {3.721148645424*^9, 
   3.7211486462980003`*^9}, {3.721149529876*^9, 3.721149531094*^9}, 
   3.7215817498456*^9}],

Cell[CellGroupData[{

Cell[BoxData["inner3D"], "Input",
 CellChangeTimes->{{3.7215820946846*^9, 3.7215820961446*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "k", " ", "\[Pi]", " ", "r"}], "]"}]}], 
  RowBox[{"k", " ", "r"}]]], "Output",
 CellChangeTimes->{3.7215820966166*^9, 3.721589860988*^9, 3.721590083575*^9, 
  3.721716006418676*^9, 3.721748457207*^9, 3.72219158452*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"G", "=", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"Assuming", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"b", ">", "0"}], ",", " ", 
        RowBox[{"k", ">", "0"}]}], "}"}], ",", 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "b"}], " ", "r"}], "]"}], "/", "r"}], " ", "inner3D",
          " ", 
         RowBox[{"r", "^", "2"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"r", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], "]"}], 
    ",", 
    RowBox[{"b", "\[Rule]", "0"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.720981647868*^9, 3.7209816544049997`*^9}, {
  3.7209817571940002`*^9, 3.7209818041219997`*^9}, {3.720981864355*^9, 
  3.7209818659119997`*^9}, {3.7211485063970003`*^9, 3.721148529979*^9}, {
  3.7211485832939997`*^9, 3.721148627988*^9}, {3.721589257999*^9, 
  3.721589258332*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{
   SuperscriptBox["k", "2"], " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{
  3.720981656791*^9, {3.7209817628199997`*^9, 3.7209818049630003`*^9}, 
   3.7209818670150003`*^9, {3.721148606686*^9, 3.721148652278*^9}, 
   3.721149539057*^9, 3.7215817664586*^9, 3.721589260461*^9, 3.72158986146*^9,
    3.721590084145*^9, 3.7217160069727077`*^9, 3.7217484577139997`*^9, 
   3.72219158504*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ibp", " ", "=", " ", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"r", "/", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"r", "^", "2"}], "+", 
         RowBox[{"a", "^", "2"}]}], "]"}]}], ",", "r"}], "]"}], "]"}], "*", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"r", " ", "inner3D"}], ",", "r"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.721149575461*^9, 3.721149601296*^9}, {3.72114978356*^9, 
   3.721149831781*^9}, {3.721150077575*^9, 3.721150081833*^9}, {
   3.721150430348*^9, 3.721150442705*^9}, {3.721150657901*^9, 
   3.721150667993*^9}, 3.7211514162650003`*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "k", " ", "\[Pi]", " ", "r"}], "]"}]}], 
   RowBox[{
    SuperscriptBox["k", "2"], " ", "\[Pi]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["a", "2"], "+", 
       SuperscriptBox["r", "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]]}]]}]], "Output",
 CellChangeTimes->{{3.72114959258*^9, 3.72114960175*^9}, {
   3.7211497851280003`*^9, 3.721149832178*^9}, 3.721150082398*^9, {
   3.72115043204*^9, 3.721150443257*^9}, {3.721150659344*^9, 
   3.7211506690480003`*^9}, 3.721151416884*^9, 3.7215817765506*^9, 
   3.721589861565*^9, 3.721590084273*^9, 3.721716006990709*^9, 
   3.721748457757*^9, 3.7221915850810003`*^9, 3.722192260875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ft3d1", " ", "=", " ", 
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", ">", "0"}], ",", " ", 
      RowBox[{"k", ">", "0"}]}], "}"}], ",", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"-", "ibp"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"r", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7196404911911726`*^9, 3.7196405894227905`*^9}, {
   3.719692517163888*^9, 3.719692525837384*^9}, {3.719729538887409*^9, 
   3.7197295511101084`*^9}, {3.719729640866242*^9, 3.7197296539239893`*^9}, {
   3.721150703519*^9, 3.721150729847*^9}, {3.721150779554*^9, 
   3.721150791356*^9}, {3.721150886156*^9, 3.721150890186*^9}, 
   3.72115107173*^9, 3.721151421809*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", "a", " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{"1", ",", 
     RowBox[{"2", " ", "a", " ", "k", " ", "\[Pi]"}]}], "]"}]}], 
  "k"]], "Output",
 CellChangeTimes->{
  3.7196405906458607`*^9, {3.719692518040938*^9, 3.719692526523423*^9}, {
   3.721150766658*^9, 3.721150792061*^9}, 3.7211510744849997`*^9, 
   3.721151422887*^9, 3.7215817813156*^9, 3.721589861999*^9, 
   3.721590084785*^9, 3.721716007428734*^9, 3.721748458176*^9, 
   3.722191585505*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", ">", "0"}], ",", " ", 
     RowBox[{"r", ">", "0"}]}], "}"}], ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"ft3d1", " ", "inner3D", " ", 
      RowBox[{"k", "^", "2"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.719713266837701*^9, 3.719713312847333*^9}, {
   3.719713358120922*^9, 3.7197133615331173`*^9}, {3.719713470028323*^9, 
   3.7197134888844013`*^9}, {3.719713584821889*^9, 3.7197136946421704`*^9}, {
   3.719713803842416*^9, 3.7197138048774753`*^9}, {3.719713900735958*^9, 
   3.719713928599552*^9}, {3.7197141092328835`*^9, 3.7197141302610865`*^9}, 
   3.7197141648120623`*^9, {3.7197142177610908`*^9, 3.7197142185241346`*^9}, {
   3.719714262904673*^9, 3.719714267689947*^9}, {3.7197144028876796`*^9, 
   3.719714476046864*^9}, {3.719714537819397*^9, 3.719714567869116*^9}, {
   3.7197145998219433`*^9, 3.7197146064423223`*^9}, {3.719714637027072*^9, 
   3.7197146613994656`*^9}, {3.7197147135824504`*^9, 
   3.7197147310814514`*^9}, {3.719717442978563*^9, 3.7197175203279867`*^9}, {
   3.721150913474*^9, 3.721150993725*^9}, {3.721151054924*^9, 
   3.721151058296*^9}}],

Cell[BoxData[
 FractionBox["1", 
  SqrtBox[
   RowBox[{
    SuperscriptBox["a", "2"], "+", 
    SuperscriptBox["r", "2"]}]]]], "Output",
 CellChangeTimes->{{3.7197145545543547`*^9, 3.7197145689861803`*^9}, {
   3.7197146212111673`*^9, 3.719714662312518*^9}, 3.719714731963502*^9, {
   3.7197174986247454`*^9, 3.7197175215190554`*^9}, 3.72115102874*^9, {
   3.721151059576*^9, 3.7211510782279997`*^9}, 3.7215817885556*^9, 
   3.7215898623269997`*^9, 3.721590085951*^9, 3.7217160085627985`*^9, 
   3.721748459314*^9, 3.722191586659*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{"ft3d1", ",", 
   RowBox[{"a", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7197170124929404`*^9, 3.7197172024358044`*^9}, {
  3.71971729239395*^9, 3.719717292537958*^9}, {3.71971736512811*^9, 
  3.719717365355123*^9}, {3.719717424285494*^9, 3.719717435276122*^9}, {
  3.719719515172086*^9, 3.7197195180032473`*^9}, {3.721151508675*^9, 
  3.721151509611*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{
   SuperscriptBox["k", "2"], " ", "\[Pi]"}]]], "Output",
 CellFrame->{{0, 0}, {0.5, 0}},
 CellChangeTimes->{{3.719717044328761*^9, 3.719717202935833*^9}, 
   3.7197172930189857`*^9, 3.719717365724144*^9, {3.7197174248645267`*^9, 
   3.7197174356141415`*^9}, 3.719719518556279*^9, 3.7211515102390003`*^9, 
   3.7215817919616003`*^9, 3.721589862395*^9, 3.7215900861*^9, 
   3.7217160086308026`*^9, 3.721748459396*^9, 3.722191586741*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"inner3Dexp", "=", 
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{"TrigToExp", "[", "inner3D", "]"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "b"}], " ", "r"}], "]"}]}], "]"}]}]], "Input",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.7215810190276003`*^9, 3.7215810675006*^9}, {
  3.7215811737296*^9, 3.7215811760326*^9}, {3.7215812161846*^9, 
  3.7215812745296*^9}, {3.7215813384966*^9, 3.7215814094576*^9}, {
  3.7215814540376*^9, 3.7215815171935997`*^9}, {3.7215816113286*^9, 
  3.7215816117356*^9}, {3.7215818050446*^9, 3.7215818066246*^9}, {
  3.7215821334736*^9, 3.7215821601406*^9}, {3.7215824585615997`*^9, 
  3.7215824636205997`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "b"}], " ", "r"}], "-", 
      RowBox[{
      "2", " ", "\[ImaginaryI]", " ", "k", " ", "\[Pi]", " ", "r"}]}]]}], 
   RowBox[{"k", " ", "r"}]], "-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "b"}], " ", "r"}], "+", 
      RowBox[{
      "2", " ", "\[ImaginaryI]", " ", "k", " ", "\[Pi]", " ", "r"}]}]]}], 
   RowBox[{"k", " ", "r"}]]}]], "Output",
 CellChangeTimes->{{3.7215810573226*^9, 3.7215810678786*^9}, 
   3.7215811763436003`*^9, {3.7215812212876*^9, 3.7215812448816*^9}, 
   3.7215812794306*^9, {3.7215813405366*^9, 3.7215814098686*^9}, {
   3.7215814610146*^9, 3.7215815177796*^9}, 3.7215816127956*^9, 
   3.7215818085836*^9, {3.7215821377256002`*^9, 3.7215821607066*^9}, 
   3.7215824667836*^9, 3.7215898625*^9, 3.7215900862320004`*^9, 
   3.721716008646804*^9, 3.7217484594309998`*^9, 3.722191586773*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ft3d2", " ", "=", " ", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"Assuming", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"k", ">", "0"}], ",", " ", 
        RowBox[{"a", ">", "0"}], ",", " ", 
        RowBox[{"b", ">", "0"}]}], "}"}], ",", 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "/", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"r", "^", "2"}], "+", 
             RowBox[{"a", "^", "2"}]}], "]"}]}], ")"}], "inner3Dexp", " ", 
         RowBox[{"r", "^", "2"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], "]"}], 
    ",", 
    RowBox[{"b", "\[Rule]", "0"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7215820004296*^9, 3.7215820006646*^9}, {
   3.7215821752356*^9, 3.7215821875316*^9}, {3.7215823935406*^9, 
   3.7215824057106*^9}, {3.7215824723766003`*^9, 3.7215824758066*^9}, 
   3.7215833895285997`*^9, {3.7215836018206*^9, 3.7215836137436*^9}, {
   3.7215836781446*^9, 3.7215836832836*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"4", "+", 
   RowBox[{"\[ImaginaryI]", " ", "a", " ", "k", " ", 
    SuperscriptBox["\[Pi]", "2"], " ", 
    RowBox[{"BesselY", "[", 
     RowBox[{"1", ",", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "a", " ", "k", " ", 
       "\[Pi]"}]}], "]"}]}], "-", 
   RowBox[{"\[ImaginaryI]", " ", "a", " ", "k", " ", 
    SuperscriptBox["\[Pi]", "2"], " ", 
    RowBox[{"BesselY", "[", 
     RowBox[{"1", ",", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", "k", " ", "\[Pi]"}]}],
      "]"}]}]}], 
  RowBox[{"2", " ", 
   SuperscriptBox["k", "2"], " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{3.7215822364416*^9, 3.7215824018136*^9, 3.7215824385546*^9,
   3.7215825177556*^9, 3.7215835849816*^9, 3.7215836598166*^9, 
  3.7215837250486*^9, 3.721589880824*^9, 3.7215901296289997`*^9, 
  3.7217160323541594`*^9, 3.721748482849*^9, 3.722191609965*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BesselY", "[", 
  RowBox[{"1", ",", 
   RowBox[{
    RowBox[{"-", "0.42"}], " ", "I"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.719722723041565*^9, 3.7197227634718776`*^9}, {
   3.7197227988859034`*^9, 3.719722803796184*^9}, {3.719724721476869*^9, 
   3.71972472708319*^9}, {3.7197247916738844`*^9, 3.719724793758003*^9}, 
   3.719725787672852*^9, {3.721151988057*^9, 3.721152005781*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.2146646595267906`"}], "-", 
  RowBox[{"1.3107995851014944`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.7197227332881513`*^9, 3.719722764724949*^9}, {
   3.719722799600944*^9, 3.719722804163205*^9}, 3.719724734127593*^9, 
   3.719724794784062*^9, 3.7197257944412394`*^9, {3.721151989881*^9, 
   3.721152006332*^9}, 3.721590129666*^9, 3.7217160324641657`*^9, 
   3.72174848298*^9, 3.7221916101400003`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"BesselY", "[", 
   RowBox[{"1", ",", 
    RowBox[{"0.42", "I"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.7197228284885964`*^9, 3.7197228585333147`*^9, {3.7197238604486213`*^9, 
   3.7197238723142996`*^9}, 3.7197247977942343`*^9, {3.7197254636933217`*^9, 
   3.7197254793112144`*^9}, {3.719725612964859*^9, 3.7197256142089305`*^9}, 
   3.719725789679967*^9, {3.7197261326155815`*^9, 3.7197261368258224`*^9}, {
   3.721152011598*^9, 3.72115201266*^9}}],

Cell[BoxData[
 RowBox[{"0.2146646595267906`", "\[VeryThinSpace]", "-", 
  RowBox[{"1.3107995851014944`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.7197228287886133`*^9, 3.719722859215354*^9, 3.7197238732703543`*^9, 
   3.7197247984502716`*^9, {3.719725464428364*^9, 3.719725479635233*^9}, 
   3.71972561455195*^9, 3.719725790559017*^9, {3.7197261334486294`*^9, 
   3.7197261376718707`*^9}, 3.72115201308*^9, 3.7215901296730003`*^9, 
   3.721716032466166*^9, 3.721748482984*^9, 3.722191610145*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"2", " ", "I", " ", "a", " ", "k", " ", 
    RowBox[{"Pi", "^", "2"}], " ", 
    RowBox[{"Im", "[", 
     RowBox[{"BesselY", "[", 
      RowBox[{"1", ",", 
       RowBox[{"I", " ", "2", " ", "Pi", " ", "k", " ", "a"}]}], "]"}], "]"}],
     "I"}], ",", 
   RowBox[{"a", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.71972563587817*^9, 3.7197256728322835`*^9}, 
   3.7215792325336*^9, {3.7215802694835997`*^9, 3.7215802997785997`*^9}, {
   3.7215837496686*^9, 3.7215837502506*^9}, {3.7215837817335997`*^9, 
   3.7215837878866*^9}, {3.7215838474796*^9, 3.7215838487136*^9}, {
   3.7215839112226*^9, 3.7215839304166*^9}, {3.721584952606*^9, 
   3.721584955578*^9}}],

Cell[BoxData[
 RowBox[{"-", "2"}]], "Output",
 CellChangeTimes->{
  3.7197256736893325`*^9, 3.7215792329966*^9, {3.7215802750626*^9, 
   3.7215803002595997`*^9}, 3.7215838055945997`*^9, 3.7215838493826*^9, {
   3.7215839126896*^9, 3.7215839309166*^9}, 3.72158504705*^9, 
   3.7215901300150003`*^9, 3.721716032742182*^9, 3.721748483296*^9, 
   3.722191610427*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"I", " ", "a", " ", "k", " ", 
     RowBox[{"Pi", "^", "2"}], " ", 
     RowBox[{"Im", "[", 
      RowBox[{"BesselY", "[", 
       RowBox[{"1", ",", 
        RowBox[{
         RowBox[{"-", "I"}], " ", "2", " ", "Pi", " ", "k", " ", "a"}]}], 
       "]"}], "]"}], "I"}], " ", "-", 
    RowBox[{"I", " ", "a", " ", "k", " ", 
     RowBox[{"Pi", "^", "2"}], " ", 
     RowBox[{"Im", "[", 
      RowBox[{"BesselY", "[", 
       RowBox[{"1", ",", 
        RowBox[{"I", " ", "2", " ", "Pi", " ", "k", " ", "a"}]}], "]"}], 
      "]"}], "I"}]}], ",", 
   RowBox[{"a", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7215840614596*^9, 3.7215842123515997`*^9}, {
  3.7215842534306*^9, 3.7215843278146*^9}, {3.7215849243050003`*^9, 
  3.721584937808*^9}, {3.7215849837320004`*^9, 3.721584998045*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{
  3.7215841617586*^9, {3.7215841948576*^9, 3.7215842133746*^9}, 
   3.7215842798396*^9, 3.7215843283286*^9, 3.721585036309*^9, 
   3.721590130315*^9, 3.721716032990196*^9, 3.72174848358*^9, 
   3.7221916106940002`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{"ft3d2", ",", 
   RowBox[{"a", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7215791967806*^9, 3.7215792069835997`*^9}, {
  3.7215822991745996`*^9, 3.7215822993816*^9}, {3.7215825748646*^9, 
  3.7215825750576*^9}}],

Cell[BoxData[
 FractionBox["3", 
  RowBox[{
   SuperscriptBox["k", "2"], " ", "\[Pi]"}]]], "Output",
 CellFrame->{{0, 0}, {0.5, 0}},
 CellChangeTimes->{3.7215792076046*^9, 3.7215823002116003`*^9, 
  3.7215825755236*^9, 3.7215836673146*^9, 3.7215837296865997`*^9, 
  3.721590130441*^9, 3.721716033087201*^9, 3.7217484837*^9, 3.722191610804*^9}
  ]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tt", " ", "=", 
  RowBox[{
   RowBox[{"Normal", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"r", "^", "2"}], "+", 
         RowBox[{"a", "^", "2"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "d", ",", "4"}], "}"}]}], "]"}], "]"}], "/.", 
   RowBox[{"a", "\[Rule]", "0"}]}]}]], "Input",
 CellChangeTimes->{{3.719753760664816*^9, 3.719753789434461*^9}, {
  3.7197538280096674`*^9, 3.7197538566153035`*^9}, {3.7197539027479424`*^9, 
  3.719753908528273*^9}, {3.7197539442813177`*^9, 3.719753944536332*^9}, {
  3.7197539756051097`*^9, 3.719754011125141*^9}, {3.7197546035580263`*^9, 
  3.719754630478566*^9}, {3.719754671946938*^9, 3.719754699046488*^9}, {
  3.7197547479472847`*^9, 3.7197547777479897`*^9}, {3.720980271486*^9, 
  3.720980271604*^9}, {3.720980592442*^9, 3.7209806244040003`*^9}, {
  3.7209807918529997`*^9, 3.7209808080620003`*^9}, {3.721585522736*^9, 
  3.72158555955*^9}, {3.721585641208*^9, 3.721585665085*^9}, {
  3.721586436922*^9, 3.721586450796*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["d", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       SuperscriptBox["d", "2"]}], "-", 
      SuperscriptBox["r", "2"]}], ")"}]}], 
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["d", "2"], "+", 
       SuperscriptBox["r", "2"]}], ")"}], 
     RowBox[{"5", "/", "2"}]]}]], "+", 
  FractionBox[
   SuperscriptBox["d", "2"], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["d", "2"], "+", 
      SuperscriptBox["r", "2"]}], ")"}], 
    RowBox[{"3", "/", "2"}]]], "+", 
  FractionBox["1", 
   SqrtBox[
    RowBox[{
     SuperscriptBox["d", "2"], "+", 
     SuperscriptBox["r", "2"]}]]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["d", "3"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SuperscriptBox["d", "3"]}], "+", 
      RowBox[{"3", " ", "d", " ", 
       SuperscriptBox["r", "2"]}]}], ")"}]}], 
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["d", "2"], "+", 
       SuperscriptBox["r", "2"]}], ")"}], 
     RowBox[{"7", "/", "2"}]]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["d", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"8", " ", 
       SuperscriptBox["d", "4"]}], "-", 
      RowBox[{"24", " ", 
       SuperscriptBox["d", "2"], " ", 
       SuperscriptBox["r", "2"]}], "+", 
      RowBox[{"3", " ", 
       SuperscriptBox["r", "4"]}]}], ")"}]}], 
   RowBox[{"8", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["d", "2"], "+", 
       SuperscriptBox["r", "2"]}], ")"}], 
     RowBox[{"9", "/", "2"}]]}]]}]], "Output",
 CellChangeTimes->{
  3.7197537900384955`*^9, {3.7197538320769005`*^9, 3.71975385707533*^9}, {
   3.7197539054450965`*^9, 3.719753908918295*^9}, 3.7197539450093594`*^9, {
   3.719753977462216*^9, 3.719754011485162*^9}, 3.719754630969594*^9, {
   3.7197546725089703`*^9, 3.7197546996515226`*^9}, {3.719754755120695*^9, 
   3.7197547783410234`*^9}, 3.720980272014*^9, {3.720980602502*^9, 
   3.72098062494*^9}, {3.720980792416*^9, 3.720980808756*^9}, {
   3.7215855233380003`*^9, 3.7215855602279997`*^9}, {3.7215856468719997`*^9, 
   3.721585665921*^9}, {3.721586437672*^9, 3.721586451318*^9}, 
   3.721590130466*^9, 3.7217160331032023`*^9, 3.721748483723*^9, 
   3.722191610825*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"s", "[", "n_", "]"}], ":=", 
  RowBox[{"Apart", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "d"}], ")"}], "^", "n"}], " ", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"r", "^", "2"}], "+", 
            RowBox[{"a", "^", "2"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "n"}], "}"}]}], "]"}], "/", 
       RowBox[{"n", "!"}]}]}], "/.", 
     RowBox[{"a", "\[Rule]", "d"}]}], ",", "r"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7215866448050003`*^9, 3.721586709632*^9}, {
  3.721586816469*^9, 3.721586827738*^9}, {3.72158694687*^9, 
  3.721586947079*^9}, {3.721587642244*^9, 3.72158764635*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.721586871913*^9, 3.721586872521*^9}, {
  3.7215869500439997`*^9, 3.721586950237*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["d", "2"], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["d", "2"], "+", 
     SuperscriptBox["r", "2"]}], ")"}], 
   RowBox[{"3", "/", "2"}]]]], "Output",
 CellChangeTimes->{3.721586873109*^9, 3.721586950491*^9, 3.721587649543*^9, 
  3.721590130479*^9, 3.721716033108203*^9, 3.721748483734*^9, 
  3.722191610834*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", 
      RowBox[{"r", "/", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"r", "^", "2"}], "+", 
          RowBox[{"1", "^", "2"}]}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"3", "/", "2"}], ")"}]}]}]}], ")"}], "*", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "Pi", " ", "1", "r"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7209800692209997`*^9, 3.7209801616619997`*^9}, {
   3.72098153996*^9, 3.720981546592*^9}, {3.721585202229*^9, 
   3.721585203343*^9}, 3.721585251856*^9, 3.721586879374*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwBUQKu/SFib1JlAgAAACQAAAACAAAAnX5iBjFkiz7OCZ26MWpSPZ5a7DpX
IGk/oQQdjvT8Dj/ZTYpyICB5Py7aEnCe+i4/MjfPowrYgj9TY1faLWtBP3dH
WQ4FIIk/xTlo0h/zTj+8V+N4/2ePPxsmL2CqKVg/AbS28fzXkj+lbzCA72Fh
PyS8+yb6+5U/TteC/dmiZz9GxEBc9x+ZP5JnMMge1m4/aMyFkfRDnD/wkTut
B31zP4vUysbxZ58/3LLjc2IGeD9X7gd+90WhP+JsH2QQBn0/aHKqGPbXoj8+
Yhs8cz2BP3n2TLP0aaQ/+rZRHc8xhD+Keu9N8/ulP4RfBwdrX4c/rYI0g/Af
qT8zXH7CXGOOP74G1x3vsao/CadhQAcckT/Qinm47UOsPyOWgj5cIZM/8pK+
7epnrz9mAkX5D3uXP4KLMMT0fLA/w8MF5GnOmT+KzYER9EWxP3jKQ4O2Opw/
nFEkrPLXsj+3lMo67q2gP6STdfnxoLM/C6jG4MAHoj+t1cZG8Wm0P5g8l/vY
bKM/vllp4e/7tT+nl0B5h1emP+FhrhbtH7k/W5KojRClrD/qo/9j7Oi5P2LG
xzxVT64/8uVQseuxuj+IiPqz/QCwPwRq80vqQ7w/a8/J1me/sT8mcjiB52e/
P/EgBV5zZbU/NkHh9fDXwj90+IbiBSW9PzriiZxwPMM/nKx4LVAjvj8+gzJD
8KDDPzRYHX05Ir8/R8WDkO9pxD/N+U99eZDAP1hJJivu+8U/s8KnXJ6Nwj9w
xILxMUnIP0eIr9p2X8U/otAfbQ==
     "]], 
    LineBox[{{0.9274309372305529, -0.1608666506126815}, {
     0.9346440771605611, -0.14549054602035327`}, {
     0.9610576015065643, -0.08726235220773736}, {1.0138846501985708`, 
     0.03058881028405801}, {1.0169660017821842`, 0.037294615805625375`}, {
     1.0200473533657974`, 0.04396472782184487}, {1.0262100565330243`, 
     0.057187600633381186`}, {1.038535462867478, 0.08309358383122598}, {
     1.0631862755363852`, 0.1322091879908467}, {1.0662676271199987`, 
     0.13805150724767307`}, {1.0693489787036121`, 0.14382063429741815`}, {
     1.0755116818708388`, 0.15513117464326978`}, {1.082253161303094, 
     0.16697583845149408`}}], LineBox[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAAnFsVsZZX9j9HiK/adl/FP0Qncl2X
XvY/jHMnTxANxT85crivA8z2P6ZhWUQoeL8/0P87XnHZ9j9gzWB5zB++P2aN
vwzf5vY/8/KgILjFvD+SqMZpugH3P3cZx8kHDbo/6t7UI3E39z99AGBG9I20
P5xL8Zfeovc/kQeSyxv4oj8y2XRGTLD3P+/73TbyNaA/yGb49Lm99z+mtpBN
neqaP/SB/1GV2Pc/Pm1taSbnjz9NuA0MTA74P9sKGbpQ8Ha//iQqgLl5+D83
UPRis9Gnv5SyrS4nh/g/fziDLUNZqr8qQDHdlJT4P157Lerf2qy/Vls4OnCv
+D9qxFp+oeWwv6+RRvQm5fg/9P0CC/6stb9GH8qilPL4PwnDWKWc1ba/3KxN
UQIA+T9RVcsUUvq3vwjIVK7dGvk/2f4TFJQ3ur9g/mJolFD5PxgwouyXfr6/
9ovmFgJe+T980hWWDIW/v4wZasVva/k/ibn0b2ZDwL+5NHEiS4b5PwMqRjzr
PcG/Emt/3AG8+T9kTZ503hTDv6j4Aotvyfk/IlzhrByEw78+hoY53db5P4f0
R1Wv8MO/xhk5iUXs+T/hArNFR5fEvxBk7Xo=
     "]], LineBox[CompressedData["
1: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
GBiekwrEPKGvV/x0yZCa0uH1wSwIxwn0O6TpkyExs/+ISEgwjkBxJydNyKCf
lrpX4FMIDkiQ3GF4gQxP/eX8aUi38PputoDLdmRYbXMKTS6+hX3avy9GOZCB
4UyLl7DsbezxoX30gSsZCtX4lUcU72D7g8aJ6n5k+E4rb5AoGY5nHx6it7lB
hqrVThO/rHBsZU26FhREhunzg6fXuCKwRfi8ecdtMljsdivMXY7Aes8DhQ4m
kMFor2lKYGoUfuBmH2WaTN1vWZ8usx6FNel0/11NIwOPStPqHstofFyW73VN
DhlWTlae/UuIwR143WAknwx/TW1Nup1isIrZ2+6vRWRof+id1NwVgxUDK/P3
VJKhaF1mYueFWFzDTeE+WU1dX377O/puLJYp9Q51qCMDC0GggvN3LJZ8AhcL
W8hg2OsuohcchwvspZ71tJHhTE652hqOw+S1HdpvO8mQG2PRWLkZh4kS09Kk
fjL4bYlGsnnE45TmzvQjg2RYDkxNri2Oxzx6hayWD8ngWT9iqDMVj+PfhPv7
DlPrNegqcqKjYHYvt68pT8hwFPyqdhEpOJLZ1KrpKRm+GEtNmspRMFO2ysjT
Z2RwDh19+uc4BYcqkI8vz5BhjIEmjNOIgrcH6Gu5XpHhXMKbH6kXKDjA8rPY
/rdk8FGUVaO4UfDa0ihF/z0Z3MN1W9avU7B3aBOt60fqPCWqTzy9TcE/BTI9
IxfIEPu9S04kjoKv3A3+UPaVDD2ZTKFPUyh4ETmYDX6jYvm1e2tZFOw8qXd/
bpkMd2v+zMTmU/AnJ4VD9L/JsHH/PV9iEQV/5y476bBGhj9qfM95Sqj67aKW
D/6RgZdN5mdnMQXTXEx22btNhjlnHqWEQgpm5dgREE0nBv057LmUXArmabkZ
u8QoBh9dfdw70ylY+MJa7mlWMTgrnMwpQL3v7GK5UlfPLgZOSyakvHAKlqv/
2MtLEINbSkxOlgEUfPCc1YQ3rxiIvSOvaF+h4OP0E3PTAmKw9vL1irMNBZ+s
0l1VFRYD69c0YwOnKdjIvIc5W1QMvgi5kM4do2DLrUNCW+JiEFHSVyC3l4Lt
yqplbCTFQKtM8CzipWCv9UwDSVkxiM+bMrw4EI8DCrkvhO0XgxuZV44pxcXj
26ciPBYUxaCzwpEx2ywep+Z4J1WpiIF61FK63XQcztNeLOZUE4OvOcH0Y0lx
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
jDu6LrBfGTePKP6emaHB0VAI/SPMmv8Pmgc4kg==
     "]], LineBox[CompressedData["
1:eJwBQQG+/iFib1JlAgAAABMAAAACAAAAk+y+SKyJ2j9HiK/adl/FP2gVFywo
lNo/M5b9CWo/xT/GMZKO4/naP7Ect0ja/MM/hGqIU1rF2z92YoXKqkvBPwDc
dN1HXN0/Tt2lmdyYtj8warKOJY/dP3pmUA1T/7Q/X/jvPwPC3T9ffptlvmCz
P74Ua6K+J94/CVM7FU0VsD97TWFnNfPeP32co7bJlqI/e9+meBFF4D/tYkXz
sIaTv5KmRVGAXuA/a4+xim/Emr+qbeQp73fgP835tXTaA6G/2vsh28yq4D9y
uvzJek2ovzgYnT2IEOE/aAZ5OUh2s7/2UJMC/9vhPzQjp0Rb+8C/Dhgy2231
4T9cUvbpmd/Bvybf0LPcDuI/n0mMOJzCwr9VbQ5lukHiPxOSb5l0hMS/CFxX
ludD4j/hArNFR5fEv1fDn+8=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 10}, {-0.1608666506126815, 0.16697583845149408`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.720980111666*^9, 3.7209801622609997`*^9}, {
   3.720981540693*^9, 3.7209815470030003`*^9}, 3.7215852042469997`*^9, 
   3.7215852526219997`*^9, 3.721586880308*^9, 3.721590130528*^9, 
   3.721716033130204*^9, 3.721748483774*^9, 3.72219161088*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"F", "[", "x_", "]"}], ":=", 
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"d", ">", "0"}], ",", " ", 
      RowBox[{"k", ">", "0"}]}], "}"}], ",", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"x", " ", "inner3D", " ", 
       RowBox[{"r", "^", "2"}]}], " ", ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7215871620690002`*^9, 3.7215871837209997`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Fs", "[", "n_", "]"}], ":=", 
  RowBox[{"Total", "[", 
   RowBox[{
    RowBox[{"F", "[", 
     RowBox[{"Coefficient", "[", 
      RowBox[{
       RowBox[{"s", "[", "n", "]"}], ",", "d", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"2", "n"}], "]"}]}], "]"}], "]"}], "*", 
    RowBox[{"d", "^", 
     RowBox[{"Range", "[", 
      RowBox[{"2", "n"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.721588633201*^9, 3.72158867424*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fs0", " ", "=", " ", 
  RowBox[{"ft3d1", "/.", 
   RowBox[{"a", "\[Rule]", "d"}]}]}]], "Input"],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", "d", " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{"1", ",", 
     RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], 
  "k"]], "Output",
 CellChangeTimes->{3.721716060278757*^9, 3.721716863243684*^9, 
  3.7217484837860003`*^9, 3.722191610894*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fs1", "=", 
  RowBox[{"Fs", "[", "1", "]"}]}]], "Input",
 CellChangeTimes->{{3.7217159157364893`*^9, 3.721715920045736*^9}}],

Cell[BoxData[
 RowBox[{"4", " ", 
  SuperscriptBox["d", "2"], " ", "\[Pi]", " ", 
  RowBox[{"BesselK", "[", 
   RowBox[{"0", ",", 
    RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.7217159205277634`*^9, 3.7217159362566633`*^9}, 
   3.721716033740239*^9, 3.7217168689200087`*^9, 3.721748484446*^9, 
   3.722191611576*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fs2", "=", 
  RowBox[{"Fs", "[", "2", "]"}]}]], "Input",
 CellChangeTimes->{{3.72158867708*^9, 3.721588681874*^9}, {3.721588878873*^9, 
  3.721588879059*^9}, {3.721588912252*^9, 3.721588916153*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "2"}], " ", 
   SuperscriptBox["d", "2"], " ", "\[Pi]", " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{"0", ",", 
     RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "+", 
  RowBox[{"4", " ", 
   SuperscriptBox["d", "3"], " ", "k", " ", 
   SuperscriptBox["\[Pi]", "2"], " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{"1", ",", 
     RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.721588683824*^9, 3.721588880289*^9, 3.721588917163*^9, 
  3.721590143699*^9, 3.7217160344572797`*^9, 3.721748485267*^9, 
  3.722191612422*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fs3", "=", 
  RowBox[{"Fs", "[", "3", "]"}]}]], "Input",
 CellChangeTimes->{{3.7215889545629997`*^9, 3.721588959441*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "4"}], " ", 
   SuperscriptBox["d", "3"], " ", "k", " ", 
   SuperscriptBox["\[Pi]", "2"], " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{"1", ",", 
     RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "+", 
  RowBox[{
   FractionBox["8", "3"], " ", 
   SuperscriptBox["d", "4"], " ", 
   SuperscriptBox["k", "2"], " ", 
   SuperscriptBox["\[Pi]", "3"], " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{"2", ",", 
     RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.721588960634*^9, 3.721590144551*^9, 
  3.7217160351423187`*^9, 3.721748486021*^9, 3.722191613148*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fs4", "=", 
  RowBox[{"Fs", "[", "4", "]"}]}]], "Input",
 CellChangeTimes->{{3.721588962192*^9, 3.721588966924*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["d", "3"], " ", "k", " ", 
   SuperscriptBox["\[Pi]", "2"], " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{"1", ",", 
     RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "-", 
  RowBox[{"4", " ", 
   SuperscriptBox["d", "4"], " ", 
   SuperscriptBox["k", "2"], " ", 
   SuperscriptBox["\[Pi]", "3"], " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{"2", ",", 
     RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "+", 
  RowBox[{
   FractionBox["4", "3"], " ", 
   SuperscriptBox["d", "5"], " ", 
   SuperscriptBox["k", "3"], " ", 
   SuperscriptBox["\[Pi]", "4"], " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{"3", ",", 
     RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.721588968602*^9, 3.721590145666*^9, 3.721716036127375*^9,
   3.721748487097*^9, 3.72219161421*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fs5", "=", 
  RowBox[{"Fs", "[", "5", "]"}]}]], "Input",
 CellChangeTimes->{{3.721588974531*^9, 3.721588981828*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", 
   SuperscriptBox["d", "4"], " ", 
   SuperscriptBox["k", "2"], " ", 
   SuperscriptBox["\[Pi]", "3"], " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{"2", ",", 
     RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "-", 
  RowBox[{
   FractionBox["8", "3"], " ", 
   SuperscriptBox["d", "5"], " ", 
   SuperscriptBox["k", "3"], " ", 
   SuperscriptBox["\[Pi]", "4"], " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{"3", ",", 
     RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "+", 
  RowBox[{
   FractionBox["8", "15"], " ", 
   SuperscriptBox["d", "6"], " ", 
   SuperscriptBox["k", "4"], " ", 
   SuperscriptBox["\[Pi]", "5"], " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{"4", ",", 
     RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.721588983326*^9, 3.721590146921*^9, 
  3.7217160371274323`*^9, 3.72174848821*^9, 3.722191615318*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"terms", "=", 
  RowBox[{"{", 
   RowBox[{
   "fs0", ",", "fs1", ",", "fs2", ",", "fs3", ",", "fs4", ",", "fs5"}], 
   "}"}]}]], "Input",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.72159147831*^9, 3.7215914819969997`*^9}, {
  3.721591559409*^9, 3.721591580131*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", "d", " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"1", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "k"], ",", 
   RowBox[{"4", " ", 
    SuperscriptBox["d", "2"], " ", "\[Pi]", " ", 
    RowBox[{"BesselK", "[", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     SuperscriptBox["d", "2"], " ", "\[Pi]", " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"0", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["d", "3"], " ", "k", " ", 
     SuperscriptBox["\[Pi]", "2"], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"1", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "4"}], " ", 
     SuperscriptBox["d", "3"], " ", "k", " ", 
     SuperscriptBox["\[Pi]", "2"], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"1", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "+", 
    RowBox[{
     FractionBox["8", "3"], " ", 
     SuperscriptBox["d", "4"], " ", 
     SuperscriptBox["k", "2"], " ", 
     SuperscriptBox["\[Pi]", "3"], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"2", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["d", "3"], " ", "k", " ", 
     SuperscriptBox["\[Pi]", "2"], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"1", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "-", 
    RowBox[{"4", " ", 
     SuperscriptBox["d", "4"], " ", 
     SuperscriptBox["k", "2"], " ", 
     SuperscriptBox["\[Pi]", "3"], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"2", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "+", 
    RowBox[{
     FractionBox["4", "3"], " ", 
     SuperscriptBox["d", "5"], " ", 
     SuperscriptBox["k", "3"], " ", 
     SuperscriptBox["\[Pi]", "4"], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"3", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox["d", "4"], " ", 
     SuperscriptBox["k", "2"], " ", 
     SuperscriptBox["\[Pi]", "3"], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"2", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "-", 
    RowBox[{
     FractionBox["8", "3"], " ", 
     SuperscriptBox["d", "5"], " ", 
     SuperscriptBox["k", "3"], " ", 
     SuperscriptBox["\[Pi]", "4"], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"3", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "+", 
    RowBox[{
     FractionBox["8", "15"], " ", 
     SuperscriptBox["d", "6"], " ", 
     SuperscriptBox["k", "4"], " ", 
     SuperscriptBox["\[Pi]", "5"], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"4", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7215914828929996`*^9, {3.721591574642*^9, 3.721591580453*^9}, 
   3.7217160374584513`*^9, 3.721748488252*^9, 3.72219161537*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"T", "=", 
  RowBox[{"Accumulate", "[", "terms", "]"}]}]], "Input",
 CellChangeTimes->{{3.721591484329*^9, 3.721591530677*^9}, {3.721591583582*^9,
   3.721591603266*^9}, {3.721716456668429*^9, 3.721716481902872*^9}, {
  3.7217166884766874`*^9, 3.721716689204729*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", "d", " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"1", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "k"], ",", 
   RowBox[{
    RowBox[{"4", " ", 
     SuperscriptBox["d", "2"], " ", "\[Pi]", " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"0", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "+", 
    FractionBox[
     RowBox[{"2", " ", "d", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"1", ",", 
        RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "k"]}], 
   ",", 
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox["d", "2"], " ", "\[Pi]", " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"0", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "+", 
    FractionBox[
     RowBox[{"2", " ", "d", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"1", ",", 
        RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "k"], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["d", "3"], " ", "k", " ", 
     SuperscriptBox["\[Pi]", "2"], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"1", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox["d", "2"], " ", "\[Pi]", " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"0", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "+", 
    FractionBox[
     RowBox[{"2", " ", "d", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"1", ",", 
        RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "k"], "+", 
    RowBox[{
     FractionBox["8", "3"], " ", 
     SuperscriptBox["d", "4"], " ", 
     SuperscriptBox["k", "2"], " ", 
     SuperscriptBox["\[Pi]", "3"], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"2", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox["d", "2"], " ", "\[Pi]", " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"0", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "+", 
    FractionBox[
     RowBox[{"2", " ", "d", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"1", ",", 
        RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "k"], "+", 
    RowBox[{
     SuperscriptBox["d", "3"], " ", "k", " ", 
     SuperscriptBox["\[Pi]", "2"], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"1", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "-", 
    RowBox[{
     FractionBox["4", "3"], " ", 
     SuperscriptBox["d", "4"], " ", 
     SuperscriptBox["k", "2"], " ", 
     SuperscriptBox["\[Pi]", "3"], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"2", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "+", 
    RowBox[{
     FractionBox["4", "3"], " ", 
     SuperscriptBox["d", "5"], " ", 
     SuperscriptBox["k", "3"], " ", 
     SuperscriptBox["\[Pi]", "4"], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"3", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox["d", "2"], " ", "\[Pi]", " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"0", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "+", 
    FractionBox[
     RowBox[{"2", " ", "d", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"1", ",", 
        RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "k"], "+", 
    RowBox[{
     SuperscriptBox["d", "3"], " ", "k", " ", 
     SuperscriptBox["\[Pi]", "2"], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"1", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "+", 
    RowBox[{
     FractionBox["2", "3"], " ", 
     SuperscriptBox["d", "4"], " ", 
     SuperscriptBox["k", "2"], " ", 
     SuperscriptBox["\[Pi]", "3"], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"2", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "-", 
    RowBox[{
     FractionBox["4", "3"], " ", 
     SuperscriptBox["d", "5"], " ", 
     SuperscriptBox["k", "3"], " ", 
     SuperscriptBox["\[Pi]", "4"], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"3", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "+", 
    RowBox[{
     FractionBox["8", "15"], " ", 
     SuperscriptBox["d", "6"], " ", 
     SuperscriptBox["k", "4"], " ", 
     SuperscriptBox["\[Pi]", "5"], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"4", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7215914878859997`*^9, 3.7215914922200003`*^9}, {
   3.7215915252320004`*^9, 3.7215915309960003`*^9}, {3.721591585486*^9, 
   3.721591603576*^9}, 3.721716037467452*^9, {3.7217164607336617`*^9, 
   3.7217164827289195`*^9}, 3.7217166903717957`*^9, 3.721748488263*^9, 
   3.7221916153789997`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"G", ",", "T"}], "}"}], "/.", 
      RowBox[{"d", "\[Rule]", "0.1"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "20"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<G\>\"", ",", "\"\<T0\>\"", ",", "\"\<T1\>\"", ",", "\"\<T2\>\"", 
      ",", "\"\<T3\>\"", ",", "\"\<T4\>\"", ",", "\"\<T5\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.721591595961*^9, 3.7215916242679996`*^9}, {
   3.721591681087*^9, 3.721591681821*^9}, {3.721591870623*^9, 
   3.721591922323*^9}, 3.721716414621024*^9, {3.721716485479077*^9, 
   3.7217164933445263`*^9}, {3.721716553266954*^9, 3.7217165573621883`*^9}, {
   3.721716625591091*^9, 3.7217166368317337`*^9}, {3.721716693277962*^9, 
   3.721716694426028*^9}, {3.721718664836729*^9, 3.7217186771554337`*^9}, {
   3.7217490973859997`*^9, 3.721749136005*^9}, {3.7217501761099997`*^9, 
   3.72175017625*^9}, {3.721750220472*^9, 3.721750291709*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
pm6AIA3+B/2FxZk=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVlnc0F94bx4mQvcne62N8Borq3qdkZM9CyI7IyqokJAqRbCEpkoRESFkR
FVKKiJK+ZojMzF+/f+497/N6n3ue8zznvO8j7uxr7raLiorq0L/j//fNh5/1
HMI38OghIaODp8ux89uc4KS0Ddw3n2moIlKOlSv7mh+828DHG9xCBEPKcEek
vvWXfZt4R1n1xDO1x3hTjHxVg30L58c8+GQ9WoJHud+XaBO2MKyfOs6dU4Lf
MHj3mOlsYY4vXsIVx0tw+nyh4JmwLex+9O/Ihe6HmNi0tzJ7cgtXxn4/R91R
jF1OUX/faNrG3znaMqRGirC+RR4tw9A2ZjphoOFVVISJugcUuFe3cUY+l57z
2SK8qRwUpKi0g6edg8NObBXi9O1JJvusHTw71nJyr3QhHjP2EPq+nwqE89gU
V5LvYe7X3lLh2lRwBhcftXS7h48c8lcUNqeCu48G6hQ17uF8woWDJ72ooL+Q
zUtntADbMSTY9edSwYyE2t4/GgX4Y3N5zvtd1HB8qQ1NbOVjao2q+z5s1FD8
vI1f80s+JlbUlrIIUcNZ26by+cp8fCOv+YWBGjUoay1KRnvmY72LvUPtp6lB
PGpIRvvZHdyguirU1EkN+kU1NeF5uXj20YbUqQFqUPhwlDrGIRcLSVIpbY9R
w2bNjCJJNBef59hz6OAONXRlBNl4FeRg1TkB+1rSLhhtOT6gUXEblzxAuRXp
u+AqO4w+msjCGQIxwncdaUA45Rtz9PN0vPKz+4GxDw0oZMiTe2LTseVjPvLm
RRpw2znwLd8qHXPCQ50TGTTA+VLa482fNJzg1unL0k0DwxaFvUyUNBxRwdly
/gAtGDFMX2B+m4K/nT9pKHuMFsQEPi/P5KXgQ1r3+z4dp4U6UeUfmoEpeP2z
2i+VAFogM/Ev7BVLwYEb1tzjxbTwnUpWuyXsFvbQueNuzrsbSomIrkovGb9m
m5zfkdwNn/DP2K+SyVh6gHjxMWk3/OU12rLfuYlHvVqSGIx2Q0S8fYlvzU1s
lzxW23BlN7j62IqUEG5i0yECE2FhN9ynf+xkpJuINQJqy2k66eCXClI8kxGH
e3YOOPgP0EGo3G6GBac47H6jkfn7OB382XnLu6gYh28Vv/Z8Tk0PjCYij1xa
r+Ppb58k/ffRQxPXWk7v2jWcY7CQ8a2AHiw+mFweDY7F5IFAHcMKeli1YQ6M
04vFHe5rS3Uv6YEwj19nC8Tipcgds7Qv9LAknqI73xiDjWpZmA1ZGUBS4223
GVsM3pZSiKg7zwBmGmdPczRF49TKx8qysQwQ6p5763VGNFYA0nBqKgPMk8Ti
PvlG4+Mn92v6lTOAfHb9yVWxaFyerLMkM/bPf+FELMRewY7bzh6ppnvA/oXd
spxLFH7Vf9vUV5YRRFrLtRgsInCqs9XSMoURlD/OlTqoR2D3WdbMMGAE4yP6
dbN7IzAjTdT36zaMQAV7Lp5+dRmbKnv43I9nhGTpubR7E+H4W7RqwsBvRtDq
jrgwoHUJV7DNqThuMsKBM7W2chyXcFT2g95xBiYoMv9YNvAtDEtXCAguiTOB
jlmtsePFMOz9laqE1ZIJjF+1yY3XXsTrpK52rVom+Fz7fFhM+wLufBHj9baV
CapObSSq8V/AebrAZvaBCRg1P7Pn/zqPD9s/Pe4wzQTrN2vyz6Wcx9euZY2F
CjHDrtvnWKgnQjHvdzeasghmsCWu5grmhmBSwjbiP8YCD34lz/ZDECZ7bro+
Ps4C5xXfNrsIBGFVnfW4I64sMGjU2HlwKRCrU630eV9mgfw08+7e4kB8MHDW
p7maBSqyD3yO4gnEenZDeWckWOGy1jSP1WYA1tcYbN1RYYXCvEiy+2AANuD9
Mp16iBW853hcn9cGYOOeXvVGa1a4sNenSj44AFsefdfNlcQK0dtGItxL/thR
8fn2iw1WeERwM8rd8MPOe2qlzPewwcuqfpbcYT/sMl6tP8HLBkk3vxzsb/TD
7vlP0jnIbOAVlTO9Fu2HvbkfKrt7sMEns1tjPzn8cMhmhgPbZzZAIQqu37x8
sO645nfiCXYg6yg8Sdf1wu69n2Zi7dlB9odjY5KgF45u8ln/5sIO+99blvX9
PoObswt4bvixwyCTyTuDrDP4gAmj4dR1dqgRfZXa8tsTq9QO1N59wQ5bV13k
XEo8MF9c6C1OCQ44c+ePRLW5O1YP4cz3lOMAv76JSBsVd2zpWvq4SZkDjLN+
Lmgyu+NkNNLhc4ADnHXiKU9fu2GmRd2dt5YckEzpqPNGbnjnJJ/3lVgOYDjO
2Fqw3xVPKD3TXprhAFe1W0/AyhlLXDrrRljkAO/lMYKOhjO265S66vyXA5Dl
vq3zws6450xKa89uTvCi67PwGnfCzx/4aT0W4YR4T4VGrwtOOEGccNjdlBMm
RJcFc0scMYkn/+CXp5xg0GJYb2fhgL1dT9ixPeeEDr7egm5pB1z0lDVMp4kT
HATvX4pbs8cC5pfqqzo5IWIwgupbnj2mTbLVTB7jhIWrjwXG5+xwHwPPfn0+
Lrj7TfM9c85JfHHzOuXFBS6oNqGmBMva4O5Al9QLkVzw7yt4w7ljjcVmDy7v
v8YFVumxhOU+a9w6/PtZdRoX2A75616PtcbMjVaa5RX/eEpEw8ivEzgvUvxw
wTgXRF3a4fnedBw309UZXzPnBomV6HffMy0x9+Vb5To23NBtdjxJP9QSu696
se925AbJfe9SZ05YYsZJkY+RZ7khqeV59yc+S2z+Jtrq4jVuaB2c5SBkW+D/
4k3tfBq44eONirWsYnNMzzHpaanAA8uG+/qppk3xSqyd9h0iDxh5t3M7fjDF
49s9YtPqPGBmyZM/VmuKX8/U9V/W4gHT/37kOV8zxTEd8dqP7Hhgd3mRibC8
KaaLUBHflcQDU7+C2RtHjTHd7+Av5Ys80EOQ3dpQN8Qrbr+erv/lgZWpdns3
VkM8PnQqSZuKF3rEvk4xjxvg12/1dL4y80KF6dI0d7oBjikSqKKT4YVraWKx
W2v6mM6hIcnemhcOKtmIf31zDO/u2q3L9JIX3FeyYjTTdDHz2RyX4Ve8YHng
seoPP13MzUKJKH/LCxL7A+1eGepiKSPHOosvvNDGvz90/25dfLTrOSFnkRf0
kvwLB0N1cFSXL7uSAh9McNWfe3BGG1N1DwwYZ/DBxrr2ka4gLczg47cilscH
phI/98haa2F2Vnquxft88MEz/G6FphYWM1Y1zKjkA972iFUzKi2MuxMbvnfx
QfaV5lOtN47g8G6te360/HC5bYVd8slhvNH92PuWPz9kWZ0NfcEHWOSD0+2j
ofyQ7TniMLCD8ZFenrcr4fxQPRmpFN2DcVz/JdmTCfxw/6zq9rMAjPlHjEYl
H/ADfeRr/ujnCKsvzJ6oHuKHxAPKJpYnDmE/LmWtL7p7gcPAvrqmRROn8oz6
xxnvBep5lgPRtzVxDV96/kGrvUB4b6l+I1ATbwtub+U77wXajAVqC1lNfEOq
u9bz0l4IbrU4fC9JA5eo+ShvVO6F5XZrBRqv/XjsRNleEREB6AgtYdTTV8dF
1lstdlICMDonfkhIUR172Bh631YQgLdN9FaCrOp42na6gX+fAEDNX3LWRzU8
by/jymUqAKFk/vIEezW86ZJXxhAlAJ4ZMSShi6qYyy9Ra3FMAN5p06Qe6iXj
T37DM6QZAVCOYq5fqyPjdH/FdL8/ArB4cdG3P5+M+c+9nZzdFgCnFJGKbR8y
FgmmS5zkEwS9osjPc8xkrBAW/mX4mCBsxzEJy5uQ8OFrPmc7HgvCxwXWKad+
FSxQ+f1EYpUgTJ93IJx+qIKXvpoesawXBPrM4p9PLqrgIhUK30iHIOy0yG/y
iKtg5v7VptWfgpAZnPid2VcZ90lHcssKCIGmG81Jaz4l7PUqpf5qjBCoHSXB
3XQFfHSWtsjghhCkt4wZJfgpYBG+4Jscqf/8Sc3GFfoK//LN2i33rhAUZNO2
3t2Rx+qcwmzVL4TgavLHXjFveUzlVOT83x8hsGoyEzlqIofTtmv3aJ0ShszR
8dsjB2Qws2ybT5qbMHyakC9zFJHB0SYfeie8hMGNSyN+D7UMDsifyk0IFYZO
efm6T6+lsfERAXJfsjDw6/JF6FtKY7qYi7aercJw/SqlPjJYCoeyoEdJ8iKQ
VbV5Or9PAv9W02cfVREBh8eVhV0vJbC7w/EgVXURuDvmOSNUKIEty33wwBER
4Dsf/UEsUAKTzO70StiJgP8T2ae1XBJ4OpVqszpRBDpjdGN3rMXxSaFXhkOL
IvA2Nz7XdlkUT59d+FO9LgI5rercDB2iOLRRNCuJWhQE/LLM1rJFcbpz2NgR
NlEwWr549c5hUfyxWC38oYIotJA7areSRbC+WnF5sJMovE5wuV2AhLGm8Q1O
jveiENb54PlaqwB+c6e+dvqzKNj0spZp3RHA1gtTDq1DosAmN1zXdl4AB6Xq
PAqZFgVhic23Z1X+8dkd8d+7xCBB8mHL0dy9OJVS99xKRAxkyyxI7VH8mLmJ
MCNhJQbcsvYE6nO8eDTLrOOytRgc86vllrPkxTXnQu4PnRSDW4t/xy6o8WJn
2Vd26c5iEPib4eC9NR5ck2jbtcdPDDgFLcpXI3iws/31svk4MdBWPtsQmsWN
a9fH/RqaxCC/OMRi3yQnTvzEbCTYKgZyLPm2rt2c2KWMLB/aLgad4+3D1VWc
mNU5/AepWwyaWQYi2yL/8Tc85oVfxcCMyjAkWfgfzzxKSVgRg78fmj+UneTA
bmoFyzaK4uCOt6eO/WDDcYk8bJdUxMHssVn7f7VsuGzimlw+WRxSI/dfrbrJ
hleyfE+O7xcHGt3QKwvAhq9tH2wO0BYH4ghd28A9VlzS3p8Q7yAOP7cEwmXO
seA5GxaplzfF4Uf+r9RhNSbM+TTi0EiKOHRcX8+8ycWE1ZmXjtNkiMPTIO0D
fguM+HLD4PVjueKg1r7tWfWYEbNLFv/+/FAcfD9HzB2TY8TkmSP1cy3ikFia
mxEsvQeHhIeaiy2Lw1ji61ljRI/lZsKYY9fE4ZqAmneVCD3+YhP5enZDHGya
Xqjp7NDh/WpxmvW7JCA+QfrhbBMdXvt1W+I4uwScPTUrqq1Dhy/YNP6JJ0iA
zM8Df79b78bhqnQpq07/OMQHSefQYOUCRiMHNwlw6xVpyoukwd/Y2OjbPCTg
l/DLzYOnaTD+xXfxlq8E+HW7hUyQaTBVgbyL0iUJ6FYerJx7twtHsRlRXDIl
wH3YWTuLdhe+Op3S290tAYrxs2Z0SVQ4un/s7cYHCdCxlNqtfuGfbt3XIvdZ
AuxEte5GuFHhqLyvFVFfJYBF7xat+0EqHG4umag+KQFMWzfkv/btoODnlXp5
1JJgeU2usyBnG3nEfXh5VvWf3u15i8ZoE50OkazO3icJc9Glglnym8jdNai0
XVMS7F4B0Y5uE7mivbfFD0uCSWLnnjNNG8jpj2PoZyNJiHj4cDlXfQPZ2s6T
D52WBHsxsyAKYR0ZKrAVM2dLgnfOmG08ZQ3ZdPgWy+dKwqEzBN91njXk7t5T
rJMvCdG1xlmJa6sooiD5YUSRJGhvX/WVblhFVQLcj5YqJWHpq+gSvcEqEmLa
Wzb0ThJEu3LLQ7xW0MwviarSLUmQEhpc6mhbQn+vX6l6QyUFX8UUL0eVLiE6
uf+qxmmkYNHkQPrJlCUk5lpYLcYoBVRbIR1eTkvIcki2JpVXCja4wgZ3thfR
i07F52EqUhBRlqT/CS+iG4/VmwydpOAwu3i0dP8CknGUc3rsKgVdfxYvP2lc
QA2cArtYPaSA9DWa1754Ac2HbGm995GCKmh15bywgCyPtLabhf3z377zZl5k
AQn1m70/niEF4/P2uSd85lEp1dlvjl1SoKLoV+qkPYe0nzpcbu6RgpsTT1Ib
hefQNzdTMYlPUmDw8kuB+cosYn9Hcf45KAU9o5zMfMWzKDBtfcxtUgpiu7Jl
OVhn0QGFa7NnaKRhkdYnLOHnL/TW4t5moIY0DLxiTX1VOYUqr44O3j4oDS5M
6zcvpkyh7BrxuhYsDXtEKDG2gVPojGB+ELuONOQHGt5KUJ9Ce37mzD0yl4YC
vYLO+heTSC8gfWTUSxr4/c+eF+qZQG03r7ea5knDkwWrtXyOcVTa0lEQclca
dOyDZIdWxlDqEn1k3n1peOXVH79/aAy5WsccmimRBpn3/gaWD8YQrdiVZ7E1
0uBJf56LC4+hI+VhxQ090lAS+Pq/64H/oaYu3wRFGhlAUT1H9FZGkSo3MGXQ
yUCz6fAj/+FRVGzLHkfNKAMLAWVWL1pHUdJERWwfuwzQJalXV6WMIgfqP1ER
IjKwbshfrUgZRZuqgec/acjAT7Yv7FyhP5BGTqh7mJ8MFBwtPX+TfwSVjuqN
jZ+T+bePKFASaUaQmPxeV7MQGQi5PDtkMvwdMTyrc5IJl4FjDzXv2cd9R1/e
r9v1xMtA6ak2E+aJbyiY5pKF1AMZEO0n2geVDKPKM5HQOSwDsS0f66NPfEWq
zo4dMj9kYJ/L+nKW6lf0zAabRv4nA+QfZU+HOL6iOr2tU+q/ZGBDm7l9qnMQ
Ncmcv5y/JgMr3kMvBLUHUdeoX0MglyyUTew78+jQAJq0dTwofEwW+D+zC80Z
9aMz5rg1xFAWFNlLxY8S+9HMMRHDjyaywBp2+1ETZz/6vX/oZOxxWTj3cHeE
4pc+tMJrfXHBRRZeZInde+Pah2h6TZ63hcuCRbHyubnoz0jEAO/3qZIFiReu
Hanfe9Fcs9dWYo0sfKszT2Lt6EWN+zNbyp/LgmpdTd39il7kKLNguNAkCzOl
86XSUb2ogPqeU2CXLEzuYtYKlulFsrV08RfGZWGveZ+XauBHRJTuHo7hlwN6
i/uAJT8gqpz1ggeCcvD6QPJHWrYP6AOnrEeHiBywZefXjq73oACqiD97pOVA
72j5nomPPaj6K4n+BkkOfhwNu8Ia3YM0b6URU/TlICb+/VD45/dIa8fuyp0w
OdBkMAt5m9yF8uMEpmgi5MAuAipYvLvQJs8XY48rcuAZ0r0cqdOFnilaCJDi
5GCPXknB5kYnkrM99qQlQw5UosfOUzw7EXO12vexSjk4K5M552v4Dn06w3pA
cUoOXGWu5VxUfYOIK+/yb87IAWlN+6kH9xt0I/I63fJvOfj1I8fq8lIH0smk
/fhyRQ4WIx46yVV3oNq2dQ8TWnlYsA184LK/A+WITaQHiMrDL7bdtqY67ci1
r/FPrZU86BVs6OSEtyH2H2/TflrLw9iRA1LSbm2o/tfn/ax28tC0Zf6006AN
cVLPhLs4ywO92RHTkL1tqJHAz8TqKw/7NDd81Z+1IoFIP0mXa/Lw3klD/eDy
K/SBIG7JUi8PuZ5/032utaAwdcXVfQ3ycLfwMt21gBYkd3hftnOzPJycLmqv
t2tB4ceNRmra5eFOOU2DP6kFKUae93b+JA85rr+3uIaa0bW+D9E1s/Kwn1Pe
lVe9GaHIqGonMQUICxGYCl9rRKsHc5zCJBXAZkmzMqG3EVWsVbNkyChAlOTq
j7ayRiTpN+XWqagAE+JPCuvcGhHDKVPefRoKsGRDL3r3cwPqPSgSwmyuADHq
Z0q1Xr5EHmt1+2uuKEA4NZtKVEk9Eq/q/e9DjAK4C59oz4mrR4O+szdnrisA
cy3dy6Ez9choQmxK/KYCmCRcYu0k1CNyX2xWQo4CLF5rC3Ypf462nlqtO1Ur
gC7vsXMmL+vQLd+FeuYJBZAd0vZY/VOD+nEOg9e0AhyyPJTL/bkGCbHrWr2Z
VYAIBrenJ2pq0IOKnLmrSwqwr5i6yTisBr1Y0BXfoSbA7bksjg36GjR+Li9m
QYgAxT8OiEjKPEOaoQZmfeYEWC3yyfUPq0KX9VZyVY8ToDSuZXneuQq18t+d
vmVDgFODKddvHqtCJnUrV0wcCVAYxN2gwleFXNfvPus4S4DDeYTvU0+fosSw
NcH6awTgbdz3WX6xEo1GFI7faSAAE63LyzexT1BwT65fazMBFLr6i0LPPUGM
Yunrk60E2H3pdRA+9QSRG2NYye8I8JD1qxn3vifoytZp9dZ+AgTXrk/3T1Qg
qQsKMZPzBOjn2DIrM6pA7ufKpUmSipBC03Cj1qIMrbc8KLeSUYR3pU4cRcQy
lMiZr3FBXhGuW8nXv2ApQ8+e3DR6paIIlAnGl64djxH9vH+Q1UFFuCfhqJCN
H6Nib9W281aKMLweMOunVop+udW5tsQqgmQ575v4QyWI+e2RJIV4RWge1jSs
EypBisqddbcSFSGDxjWAffMh8l75xuqSpggtj45/0Kx/iGZiaOto7v17z4+V
+cKBf/qBCYt2gyJM37k1FahVjOamxqrblxThvO3hnC3fIsRq7DuisqYIuhee
3tu0KELKlWuMmRuKsEohC4juL0I+F5gcPXYpQXiFS14XVRGaYyQx7mFXAsam
P7ydKYXoNyHMQZ+gBMUByxJyTffR/FlO+i4nJUjICmKmkO6hU2ZTPhuuSmAz
PWo/InAPdas29cl7KMEWqWXnAe09VLpxtijGRwnsFnaeXf1SgDyuv9GGi0pg
4LQYFxJZgEbuR0Q/TVWCTvvZnb1f7qL3X+eos9uV4P4JMYv4jHyEGts8O94q
Qd1FkQt60fmotCDnw0qXEtA4R+gJ+eejOE/9uxaflCDNwtmX3iAf6awWAssP
JXjj8XH+w86df/uM/eWIdSV46PB97srXPFR27N2mu5Iy9DQaiatW5iDCt4qz
V4nKkGo+9io7OQcVB6R/u0dRhsX5zkkZ/xxUcNupaURDGaRV0xjLiTkobXb1
iq2OMjQlZM2ff3IbhSVLMRmfUga1l/K7PtdlI/2BS3vVkpXhI8cwjvgvE7Wf
dYmzSFWG7tv7xHU6MtHRXcc2/DOUQdzpoZdiaSZCBO7hslxl8CijLrQJzESk
SyX5ciXK0HD8egqZLhPxi/fLCr1SBt+Xn3CDSgYa9yCq0ywrQ+Oh04lHs9LQ
b44Hum5ryvD6jfZIU3gaWnsubNO+oQzOgwzSDq5paA8LU1j8LhUIEDn1Y10l
DSk+GWvmYlcB1pr3D2o7UtG5v9lGUgQVSLVKU5CgSkVUcbvdtJ1UoEXbyCr3
6i20hxIW/MBVBbK2Cs798rmFOIf+xO7xUIEc1n3PrKxvIUnlkZIuHxWwOfRW
IJxwC+l8fD5vFaYCe+5CokBvMroh4BfmnqEChOQ0blfZZCTwaDAltksFaoSO
ke+/TkIBvXmj5T0q8MEphdW+IAm92XAmfelVgYrrfB9xeBIKNfzVLTeoAgOe
X/Sj1JNQ/+zGnrfjKmDIolG1XJyI9DNZgY6KCKjm00PvtBuI4avKM729RNCU
+ZxjHR+PVH8nDw8JEGExaj5n0SseOdIs0foLEUGgJbG70jAe1RJqLbJEiVDW
7i+cyxqPTofBwpQ0EeJ84/uEUuPQa2EzxXgyEThaaV/eL7yOrjgGFHQZEOH2
5/yTTT9i0dK2UPYVIyL8Z6xcatwai9xz25M1TIjgwHCskvpBLNIfFIosNCcC
g9qG9GfvWMRp2X7qkg0RQhQ5ihXXY1C+rpCw0mkiTAY8qg8WjEEvlV9nJEQR
QWn74UfdkGik3OWXdCSaCH5Wp+z4HKJRvpdg7NpVInQX9B6i045G0cV+wa7X
iVDkd+DMYa5oZCghaHXwJhGEij5Kyj+5ggZ5/Dhncomwpyn8Vs6fKLS6ufeG
QR0R2KN9FtjjI9H8osH1v8+JoPdWcHU8KBJNTl+6+uAFEdLamN71OUaiwS8/
LtE0EWH2UYgDzb5I1FD10Kf+NREMj8U0J/wXgaK9NUwJn4jwhL/VQ/toBGIf
suZi+k2EkoFX1BsK4WhPbxxb3TwRIs2m6ArpwtGuty+YTv8hwlG5E9oXRy+h
xRox2lfLRNCeDUp9lH0J9aVMLl3YJEJ2vH8GD8sllGMQ2je9hwTrrq6TI38v
Irn6jKy3UiTYzRVU9XvhPOrw96s6KUMC5smN3N5P55GH3LH3M7IkiOCyj/lS
cx49TFunZSOQgP1Q9Iuj4eeRgp+9nwWJBN6ZPYUFzOcRQVpSd+gQCVaWFdUs
VUKRclLZ0uxxElT3qEinxQejbu1YtsvWJDAuVPhkHhCMfDZPKbDbkuBXfCm/
kk0wKvfkcCTbk4BqNOm7umwwIh4NfBfsQoKUJZHB261BiPxXo2DHlwQ7Qk1F
SbRBSM2lzYTjOgmMTL0IupnnkND9cc3WOBK0Vf23GBVxDu0ao5cJSSDBQfn0
L189zqFud/3NoSQSqDBluf+ncQ65n3lfXJxOgndXXpQZDgegTP8BarhPgp6G
SqOT8gFo/fLsU59GEjySuBIT/dkPjTSx3hFvJkFZhOcx8WY/9JqaGPephQTT
u7TW+0r9UMqVAEfN1yTY+/RpSUK0H1KMXWWm6yLBOTblBWE1P2SfSO2eO0gC
hpHd7y6q+aKmHB7+zmUSSGz1zZjPeSPj3GFx51US1EyKZT3o8kZfcwsJa2sk
SEhJjxJ/7I1W8tSw1CYJuEdynaK9vZHSXSv3sF1keHhK6RH1rBfKLkyrUmQj
Q/XX7rHqpTMosIzH7IYcGV4K8yVMC3uiXeXDtpIKZHDWZ/bMoPZESeWFrnUE
MmwfXY1yHfNAJRVqoWPKZGCWvjHg8NgD/ai0unNIjQw878isPcgDGdekzc4e
JkP6DVbaq6dPI7kmnjjjk2Q4ouhPp/3eDR3c65Y5ZEcGae5jKsQaN2QWUFV0
xoEMjN7ziup33NAFKYtXMU5kSMa7lG/5uqHOazc3G06T4Y0c9a5YDjfkb8bk
qxL4r17uTHV9W1f0fJTKkv0GGaLFLJ75bjuj7gOmznmJZJhOi71wacoZ/Uy9
46d4kwyE630JBZ+cEbMuuqGX8q/+ElEK+ZEzOvXo4uuILDLE29tVuNo4I9rA
lf0LhWSojD0sTPXcCRntnhH+2ECGGGEZTtd4R1Q8eWUzsokMM6/in9wJcUS7
OgW/klrIwB83JLno4ohqbxlkJreR4ejYaZYfBx2RhNgjTrNOMsTGMxY8+n4K
rWieoe8ZIIOcPO8kd5UDyvObnO9aIsMv87D+V5fs0JpFxPtLK2TgquosbT1p
hyz28ZcprZEh4iiN95yGHWLY1vW6sUEGDpvYH/UrJ1FA/IMxw10USMlf0tUI
OIl0i9wH37FR/uXH34YUP1s0//W/V28UKBB8V18i8ro1+hMu2WynSIHbxoNf
1H2s0ZK4c8NvJQrMDA0oMFlYo7XT32t5SBTwrKnmZRO2RlRLA4+d9lHAQ9XB
KKLyBGJnfp/xV4sCHQK0ldOjxxHxYJ2XvD0Fnp2WWF23tkLk76seLxwo8HvS
ZUTrsBVSjVJ3N3GkQLN2lc0DeSu0v+OpY5ALBeInYqNfrlsisCyzavakwDXe
Oxck8yyRqfc9bBNMgTuNgpYvpiyQb84NrutJFBjtW+g+mWKOOqmlfusnU4BT
mGbYNswcKZx+/pY5hQJt4SMFwW7m6D/SROTNdAocTA9to9lvjqzbYT4jlwIa
EBDm980MHfmz2Fn0iAJ6StxrgUQzxKtnG9PaTgHBwqn8Cz0m6NzjeaeYNxQ4
HHRGQ/yhCerhjD2k944C64ML39ciTVD88NOld90UiGrPdNRUNUFU51hcej9T
4Ej20pWdbGM0nduER39SgNVEcMbe3wjp0pwQvD/2bx7n6CT+Ghqh+x6zK24T
FOATqyprljNCpygCZVPTFMhqr5ocGDFEnzrOCS0sUCCzOrNazMIQkZQZ1yoX
KdCLxoPEiIYoMSW/N3D5X79fLncasBiiYw5dcWtrFHC1ynCV6jBARa9c3J+v
U4AgGLT/Q6EBopVfPxy2SYGE8Edviq8YIKfEm8JomwL2fAmjJU4GqGFR5u/O
DgWyb5Ua9WMD9D85Avvw
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
t/7+JUN4o9OXSeMY9D9cUQo3
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
gji928NhZ9oxSYnHXGbdJNA7xEL1kr4d29D0pH8/sn+fxw2KVe82LNdvdqVn
nQT+Mp3QqN+KbZ4K6wvdIIGU5/VSugOt2KkDAuXKm/v+hR2Cs0wrxrCn55W4
TYKGbj9Dc6pWLOBW0fRJKjKcbcSV071swfQK3UbfsZNhRXX8Qp16C7by+Xv7
W0Uy5HBHasWfb8J+XZdqtVEiQ5ks+nDRsAlbxzk1LSuTQVDSBR+q3IRtnv9S
x0skQ7qlatPE2kuMYn3kieMBMpD51WLmw19iHCx9WX91yGA7FUPN9l8jRtCq
91KwJYOqZV/Y4GYDRvryx73RjgzMpkdE6L80YGoRGm4mDmRgUL52zvxVA3aw
s8rhojMZ+lQSzpPSGjA4XW7R6kGG1OFZBT7lBsz0wn/IKng//8k3zPJ8Peab
k8gdl7zPT/MbKS7VYt2U0suGqWQwVtE8fX+gFlM839DFkk4GF17CHXxDLfad
+CM8JZMMRsJvnLJjajHLN7CSdZ8MmqXVE8+larGjv9a6Cx+TQbbbvmbS4TnG
p28d3fGGDJZ86gyEn9VY4JMVx+i3ZBD4M/Bq8GM19p4r5oj+OzLUfRCyTm2t
xm6NV62/6yXDGQ300Ox2NUYRyOo8MESGg9UC8wtHqrH5+y1o6hsZXhs9avJP
r8L0qM8KF0yTISnGXiv2ehVW4L604fpjfx4WdfoajyrMnixUPje/75c+K2MG
VdhgZ6DI6ioZtvi3VlJ+VmJEFabNyjUyKID9sbOjlVhSet5A0G8yFE5VKZBf
V2IGdj3xm5v7733SyxifW4kVtju7NWyRwf+DooNefCVGo7ClHbJDhgnB9OLL
wZWYY1KKKLZHhuwVNs5mp0qsaU32779/ZPiHw0UKmVRi/wNDPBdl
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
tYOomVf8vbFBxy2P5/iXJDuI/wGfiEgu
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.363898, 0.618501, 0.782349], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
tYVlRILaKe355WUCLfVKsvt0SPA/Kj0nDQ==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 20}, {0., 0.061334499752884644`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"G\"", "\"T0\"", "\"T1\"", "\"T2\"", "\"T3\"", "\"T4\"", "\"T5\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7217186782804976`*^9, 3.721748488469*^9, {3.7217490991140003`*^9, 
   3.721749136602*^9}, 3.721750176748*^9, {3.721750232414*^9, 
   3.721750292296*^9}, 3.722191615663*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"G", ",", 
     RowBox[{
      RowBox[{"T", "[", 
       RowBox[{"[", "6", "]"}], "]"}], "/.", 
      RowBox[{"d", "\[Rule]", "0.1"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "15"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<G\>\"", ",", "\"\<T5\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.721590889207*^9, 3.721590997111*^9}, {3.721591051177*^9,
    3.721591116358*^9}, {3.721591161237*^9, 3.721591209816*^9}, 
   3.721591635472*^9, 3.721591753801*^9, 3.7215918109700003`*^9, {
   3.7217169178468065`*^9, 3.721716941122138*^9}, {3.7217190180379305`*^9, 
   3.7217190181889396`*^9}, {3.721749139299*^9, 3.721749164192*^9}, {
   3.721750190762*^9, 3.7217501957139997`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVkmk41I0ah5ksY5nslDb7CP9kjcTzqJQtIc6gyJIoFUlIpZAlW2iIQvYt
eS1DIkKlskdJpJRySK99KRNzOh9+1/3pvu4vP2lXb2t3EhsbW+Xf/Z/xWbXE
lNMK+DMTpFRIjbCt21dZqmoFgst66sz2NcBYyKVH61tXYEdGocivjQ1Qqnl9
3+rACvTIF9YxZ56Azt24o4NrK1BdFSrNmfUELN2LYuimTJiUIyy5SE8glDk8
Sf7KhMZrm9z/vK2D71ST0lnBVYi4KCeztaIW5mxrmBflV0ElQHOHR3wtsN2Q
NVvRXYXTjS57fnvVwuaR1QmS2yoMpqmrLVJrwSa1kipavQoQV/5WO/cRtJA3
52rbr8EJZ4rJnoIa6NG+OVd3dg2yPqvcrI+sgU8nlgwhdA1MKkIMAk/VwO+m
npGDD9bAm74vsJCogZ2Xwrfar65BEvuPkvbaasicmEq7nM0C058DDfkfGFAq
cWyCVc2CH4qP06oaGVBn9FrnRhsLMvI0ExZzGfAuO/d97DwLqFxlNSLeDOAi
Snm7Zdjw21GJkhJuBhh8dzYe8WPD3RPBDv2GVVBq2/aMtJEdz9JnWDzvK+Aj
q5RLTJYdI4Xyt25oqQBKyS0TKsGOFsvWvGYPK+Dcmk23mSE7PqGEz265UQFq
hZ8H6afYMfHs875zGhVQ82thVqGOHbO15un+qeXQdG+blNlREjr06rruXCiD
GSOSm6M7CSPOJgna9paB9My3fG9vEp5f6FKpKC+D0P0lyvQwEhbqHuyknCsD
o381dw0/IOH7Kdprs8mH0GZgauH9h4TFmn1hAdOl0PfF78rtjHUoGT71/J9N
D2CGBwN+FazDQ0Xhsu3sD2C9Op+vY/k67NKsusk3XgLGodke1Gfr8FxtwpEV
Rgk0ynRZ14+vw4S9zy2jLEugyI26fVSDA7mF6lOV44vhyvcP79TbOLDirab+
kHQRpFHye+70caB6pP5jSf4iqNHyaf/zkQNZXgsJAUuFMBvO1dw6zYG5m6au
R7UXwkkFjVIHMU6cDVKrZw8oBEuP2NBQZ04M3aXfKd9XAPITBqq9S5zobizb
PZmZD2MWDXwkdi5MHU6MnozOhyKG3rgaHxc6btVc4QrIB6XrOtmJ27hQUACU
Eg7nww4JdRErYy7UEeGzGWPPB20j+eXuNC5Mrv1yIcArD4yz+Z527uHGwX0i
udOWucDDHX1v9QA3jjrRVPkwF9rOkAMJK26c+/FgcI9qLpjrcKrFuXOjhX3G
whdKLlh1r+WYx3Nj65qXsGpHDjiszka0f+bGfzxejTLMc8DLfsDidSgZG9mr
O64ey4YN+jBqFkvGA6y4Jv7D2dAqVRDQlUzGN5vSTB8YZoPM+IWsviIy5pA1
m8Wp2TDoLzA33EVGlvL6nLy5LDCmH0iek+RBXfJxoajYLJDrZgxtquLBxTf8
t0uS70Nv5SafzCc8mOu64EQLvg/XU0I5pFt50EB/eHmLx30YcrQkFD7woOv8
yq9lnfuQ9HMyeCeLB/FyuPTQcCaw8crKGJnx4qfoMTUDlUz4uD/R89woL/4e
IGeED6YDQ09uQ/NPXgwgv2mOa02HGPVHL0WWeLEraCatpDIddksNKzwm86E0
VXJOOiYdUpmK39ft4MPOVt4dHPrpYFPZ5JIWyId87+R6gvPuQce2GYfnFH68
U3x1LDnkLuSJh/FKSPDjTLZBJpvPXbhMEa87JcWPp8Ko3Vec7oISU2+jgAY/
iopJYrHeXYjqj3xvb8ePXAlnRrqX0mB/3Dab6Zy/vr53LvqkQf2KxSFJHQo6
iW1hbPJOBW3V5E+79lLwqmJ4qK5TKlS6DXnbmlOwuLapzfNQKhR1eCQlOFNw
ISzMk6mcCimZ199z3aSgvP4UTk3cAZ+9lS7zHyjIygxTWPK8A3LRYv4dl9fj
ef3CrAXfFIjf+DEz+KkADnFajJpX0mGpnXd86pUA1hfHc3IU0MEpWFfteK8A
Gn9IEm1NowMxmvIMvgtgp8WuF6dD6HCyX9HvOqcgVvZb82lZ0YErazTVUFkQ
1aNHd7fM3YYDGvZfn/kLYobGvsNe+reh1X7/xVcUIRSa07C/NZUIHVbVvGPC
Qlga3Lm9dzQRek0UstZtEMIaAcWMrR8S4ZMuud1ARghn62UM3j5LhMWNHVLV
2kK4tLKiVJGWCHKDRzqyjwsh0/DoIvVgIoQ6uMlerhBCtwzDhsaiBICjoW8I
W2H03D3M+EC+BYPHbvppOAhjs2392OflePBzSpDQPS6McqzrpIWxeChxyXTc
f0oYk6TF641exIOYZ92Ew1VhzG0iYuNC42HSb449Kl8YlxQ9u7JZcXAn3lX9
66Iwfvo3sPvSujiYbt57OyVFBHvLGhJ4VWPgOskgyeieCPZbDboKyMSA8D7d
xIX7ImheKXdti1gMaD5XvWVdLIJL/SO+tsxoCGzdHLP+iQhKrNGtNF5FA1v7
UmjEFxEcby5xve8WDcJvS3z9VUSROUKmr2XdBM0xYev/tIiiZItWk7xmFNx5
8d/m0y9F0YujvdBKMQpW8p6oXesQRYYZWTdicxQ0uZ0UKuoXRf3AR9o8nFFg
/uVxz+8fojgS0Mm42B8JJz46H84QEcP04NWYL0GRQO8tM/92QgzVs7TkO19H
wHyj6UFfbnG8cmCIYRscDsa2SbrftSWw50rc/AuHMJDIMnRlXNuAQtpRuz86
h8AWywszES0bseP5i0dj3tegtoFxuXxaEt92pjCMm65A52dHfW3tzZhYm3uj
QysIAp6K/xH22ILlQTrlxtKBYMdhLTWfuBV/Cc3NB1j7Q9XqQpBq/zasXZT7
0U/3A+vBI6dcQqXQQ/eGnKvMBSALuuy0V5BGLa3Jzbb158E+ULXE+qU0DjD5
mePXfODi0/CcAEcZrL5LHfr48xx0jQjUmLLJosuE/enHo2dgbkTa2CRVFpsd
bPNslLygQmQx1oSQw6v3/9iMZZ6Ch1J/fi53yeForaVeh7gn+PHHtL9xl8eQ
enObvpcnIbD30At7HgUMLooezwxyh4MBqfqUHAUMsJaSTj92Aios8jxbdlFx
ZqfzLlt7N7Bj+1YmP0jFLMGnF5xtXaEt4cEFxnlF5DMYHHrt5wKXmAVHZsW2
4/HuUU3Z287wLNVtTPXRdtyTulJbEHMcBkSLltMOKSHVh4v6XcEJlLyk5Cpn
lPDH/gttMo3H4GCWVPdilDKW6EyvlYUdBRb3VxW9rSrIV9yVTHd1gAWT9/k7
mlQwTtwxKG2PPTBO22QcohF40uKAJerZQROp5uSMPYHTT2fsxrTtoP2uxM7b
xwi8tJYQF6duB1/bBlsGXAjc5ctx6fN2OxBSdhl3O0OgYukf88QNdnBu8qxG
UAiBSjuZMSpLNNh+JvJ1wQMC7V8rRBhU0kCTYyLJpIzABt945CmjAaabHvtZ
TqBhSO/Gd8U0sOugTKvVEFj/2I7qk02DCBW6aEMTgW7jRrlVCTT49jPreN87
AlPvBbZ6e9Ng5gZpu/8Agfwih8HciwbMzSfmNgwRWPr359s9aCB8iBruNEKg
ZWyT3rgTDQwfPiyZ+EHgq/cvqb4WNDA3EvCL/ZdAvpSLDjTTv/1hH33VGQKX
5fNy9A/QwIei2eO3SOA/xOp5igENruQnp0n8InBf24lfS7o0iNRfdq1bIfBz
yMukL1o0SHpnp+K4SuBbq+fYqUaDzLN1iywWgbyuK+x1BA3+BzP9FI0=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
gXO8fnZlhUASDdj2usbwP9mydtA=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 15}, {0., 0.11722064776493632`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"G\"", "\"T5\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.721590914179*^9, 3.7215909976070004`*^9}, 
   3.721591083277*^9, {3.721591116885*^9, 3.721591230601*^9}, {
   3.721591324325*^9, 3.721591345955*^9}, {3.721591779742*^9, 
   3.721591811337*^9}, 3.721716037749468*^9, {3.7217169259162683`*^9, 
   3.721716941454157*^9}, 3.7217190187429714`*^9, 3.721748488576*^9, {
   3.721749140001*^9, 3.721749164778*^9}, {3.7217501919639997`*^9, 
   3.721750196106*^9}, 3.72219161576*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"d", ">", "0"}], ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"G", "-", 
        RowBox[{"T", "[", 
         RowBox[{"[", "4", "]"}], "]"}]}], ")"}], "^", "2"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.721718892902774*^9, 3.721718893062783*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", 
   SuperscriptBox["d", "3"], " ", 
   SuperscriptBox["\[Pi]", "3"]}], "256"]], "Output",
 CellChangeTimes->{3.721718899456148*^9, 3.721748513468*^9, 3.722191640413*^9}
  ]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"G", "-", 
     RowBox[{"T", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], ")"}], "^", "2"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{
    SuperscriptBox["k", "4"], " ", 
    SuperscriptBox["\[Pi]", "2"]}]], "-", 
  FractionBox[
   RowBox[{"4", " ", 
    SuperscriptBox["d", "2"], " ", 
    RowBox[{"BesselK", "[", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], 
   SuperscriptBox["k", "2"]], "+", 
  RowBox[{"4", " ", 
   SuperscriptBox["d", "4"], " ", 
   SuperscriptBox["\[Pi]", "2"], " ", 
   SuperscriptBox[
    RowBox[{"BesselK", "[", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}], "2"]}], "-", 
  FractionBox[
   RowBox[{"4", " ", "d", " ", 
    RowBox[{"BesselK", "[", 
     RowBox[{"1", ",", 
      RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], 
   RowBox[{
    SuperscriptBox["k", "3"], " ", "\[Pi]"}]], "+", 
  FractionBox[
   RowBox[{"8", " ", 
    SuperscriptBox["d", "3"], " ", "\[Pi]", " ", 
    RowBox[{"BesselK", "[", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}], " ", 
    RowBox[{"BesselK", "[", 
     RowBox[{"1", ",", 
      RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "k"], "+", 
  FractionBox[
   RowBox[{"4", " ", 
    SuperscriptBox["d", "2"], " ", 
    SuperscriptBox[
     RowBox[{"BesselK", "[", 
      RowBox[{"1", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}], "2"]}], 
   SuperscriptBox["k", "2"]], "-", 
  RowBox[{
   FractionBox["16", "3"], " ", 
   SuperscriptBox["d", "4"], " ", 
   SuperscriptBox["\[Pi]", "2"], " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{"2", ",", 
     RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "+", 
  RowBox[{
   FractionBox["32", "3"], " ", 
   SuperscriptBox["d", "6"], " ", 
   SuperscriptBox["k", "2"], " ", 
   SuperscriptBox["\[Pi]", "4"], " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{"0", ",", 
     RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}], " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{"2", ",", 
     RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "+", 
  RowBox[{
   FractionBox["32", "3"], " ", 
   SuperscriptBox["d", "5"], " ", "k", " ", 
   SuperscriptBox["\[Pi]", "3"], " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{"1", ",", 
     RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}], " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{"2", ",", 
     RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "+", 
  RowBox[{
   FractionBox["64", "9"], " ", 
   SuperscriptBox["d", "8"], " ", 
   SuperscriptBox["k", "4"], " ", 
   SuperscriptBox["\[Pi]", "6"], " ", 
   SuperscriptBox[
    RowBox[{"BesselK", "[", 
     RowBox[{"2", ",", 
      RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}], 
    "2"]}]}]], "Output",
 CellChangeTimes->{3.7217207673999887`*^9, 3.721748513625*^9, 
  3.722191640608*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"d", ">", "0"}], ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{
       RowBox[{"Coefficient", "[", 
        RowBox[{
         RowBox[{"Expand", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"G", "-", 
             RowBox[{"T", "[", 
              RowBox[{"[", "4", "]"}], "]"}]}], ")"}], "^", "2"}], "]"}], ",",
          "k", ",", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "4"}], ",", "1"}], "]"}]}], "]"}], "*", 
       RowBox[{"k", "^", 
        RowBox[{"Range", "[", 
         RowBox[{
          RowBox[{"-", "4"}], ",", "1"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.72171959829712*^9, 3.72171960774866*^9}, 
   3.7217196407265463`*^9, {3.7217196766716022`*^9, 3.7217197361450043`*^9}, {
   3.721719769437908*^9, 3.7217197949113655`*^9}, {3.7217198848545103`*^9, 
   3.721719889642784*^9}, {3.721719934550352*^9, 3.721719939153616*^9}, {
   3.7217205531707354`*^9, 3.721720556502926*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "2"]}], " ", 
  SuperscriptBox["d", "3"], " ", 
  SuperscriptBox["\[Pi]", "3"]}]], "Output",
 CellChangeTimes->{
  3.7217196411575713`*^9, {3.7217196850140796`*^9, 3.721719736716037*^9}, 
   3.7217198039358816`*^9, 3.7217199428178253`*^9, 3.7217205647073956`*^9, 
   3.721748515124*^9, 3.72219164208*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"d", ">", "0"}], ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Coefficient", "[", 
       RowBox[{
        RowBox[{"Expand", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"G", "-", 
            RowBox[{"T", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}], ")"}], "^", "2"}], "]"}], ",", 
        "k", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "]"}], "*", 
      RowBox[{"k", "^", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "4"}], "}"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7217198720507774`*^9, 3.7217198748239365`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox["d", "3"], " ", 
     SuperscriptBox["\[Pi]", "3"]}], "8"], ",", "0", ",", 
   FractionBox[
    RowBox[{"35", " ", 
     SuperscriptBox["d", "3"], " ", 
     SuperscriptBox["\[Pi]", "3"]}], "256"]}], "}"}]], "Output",
 CellChangeTimes->{3.721719877377082*^9, 3.7217485168970003`*^9, 
  3.722191643855*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"d", ">", "0"}], ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Coefficient", "[", 
       RowBox[{
        RowBox[{"Expand", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"G", "-", 
            RowBox[{"T", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}], ")"}], "^", "2"}], "]"}], ",", 
        "k", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "]"}], "*", 
      RowBox[{"k", "^", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "4"}], "}"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.721751644167*^9, 3.721751685637*^9}, {3.722191695757*^9,
   3.722191706318*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox["d", "3"], " ", 
     SuperscriptBox["\[Pi]", "3"]}], "8"], ",", "0", ",", 
   FractionBox[
    RowBox[{"35", " ", 
     SuperscriptBox["d", "3"], " ", 
     SuperscriptBox["\[Pi]", "3"]}], "256"]}], "}"}]], "Output",
 CellChangeTimes->{{3.721751647927*^9, 3.7217516879709997`*^9}, 
   3.722191560974*^9, 3.722191645799*^9, {3.722191700258*^9, 
   3.7221917093900003`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{"Expand", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"G", "-", 
        RowBox[{"T", "[", 
         RowBox[{"[", "4", "]"}], "]"}]}], ")"}], "^", "2"}], "]"}], ",", "k",
     ",", "4"}], "]"}], 
  RowBox[{"k", "^", "4"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  FractionBox["64", "9"], " ", 
  SuperscriptBox["d", "8"], " ", 
  SuperscriptBox["k", "4"], " ", 
  SuperscriptBox["\[Pi]", "6"], " ", 
  SuperscriptBox[
   RowBox[{"BesselK", "[", 
    RowBox[{"2", ",", 
     RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}], 
   "2"]}]], "Output",
 CellChangeTimes->{3.722191973696*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"d", ">", "0"}], ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"64", "/", "9"}], " ", 
      RowBox[{"d", "^", "8"}], " ", 
      RowBox[{"k", "^", "4"}], " ", 
      RowBox[{"\[Pi]", "^", "6"}], " ", 
      RowBox[{
       RowBox[{"BesselK", "[", 
        RowBox[{"2", ",", 
         RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}], "^", 
       "2"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7221919827650003`*^9, 3.7221920023190002`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"35", " ", 
   SuperscriptBox["d", "3"], " ", 
   SuperscriptBox["\[Pi]", "3"]}], "256"]], "Output",
 CellChangeTimes->{{3.7221919677799997`*^9, 3.722192003777*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"d", ">", "0"}], ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Coefficient", "[", 
       RowBox[{
        RowBox[{"Expand", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"G", "-", 
            RowBox[{"T", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}], ")"}], "^", "2"}], "]"}], ",", 
        "k", ",", "4"}], "]"}], 
      RowBox[{"k", "^", "4"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.722191785023*^9, 3.722191861432*^9}, {3.722191935962*^9,
   3.722191951005*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"35", " ", 
   SuperscriptBox["d", "3"], " ", 
   SuperscriptBox["\[Pi]", "3"]}], "256"]], "Output",
 CellChangeTimes->{{3.7221917858900003`*^9, 3.7221918618310003`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"d", ">", "0"}], ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"G", "-", 
        RowBox[{"T", "[", 
         RowBox[{"[", "5", "]"}], "]"}]}], ")"}], "^", "2"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.721602324498*^9, 3.721602365598*^9}, {
  3.7216024028529997`*^9, 3.721602404995*^9}, {3.721602455204*^9, 
  3.7216024737349997`*^9}, {3.721718575633627*^9, 3.7217185776247406`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"175", " ", 
   SuperscriptBox["d", "3"], " ", 
   SuperscriptBox["\[Pi]", "3"]}], "32768"]], "Output",
 CellChangeTimes->{{3.7216023444440002`*^9, 3.721602366275*^9}, 
   3.7216024250439997`*^9, 3.721602490039*^9, 3.7217160384025054`*^9, 
   3.7217161969565744`*^9, 3.721718593957675*^9, 3.7217485284960003`*^9, 
   3.722191656843*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"d", ">", "0"}], ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"G", "-", 
        RowBox[{"T", "[", 
         RowBox[{"[", "6", "]"}], "]"}]}], ")"}], "^", "2"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7217188859473753`*^9, 3.7217188868214254`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"3059", " ", 
   SuperscriptBox["d", "3"], " ", 
   SuperscriptBox["\[Pi]", "3"]}], "1048576"]], "Output",
 CellChangeTimes->{3.721718897530038*^9, 3.721748539198*^9, 3.722191667335*^9}
  ]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"G", "-", "T"}], "/.", 
      RowBox[{"d", "\[Rule]", "0.1"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "15"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<G-T0\>\"", ",", "\"\<G-T1\>\"", ",", "\"\<G-T2\>\"", ",", 
      "\"\<G-T3\>\"", ",", "\"\<G-T4\>\"", ",", "\"\<G-T5\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.721591250315*^9, 3.721591272101*^9}, {3.721591383284*^9,
    3.721591396076*^9}, {3.721717192975543*^9, 3.7217172571222124`*^9}, 
   3.7217173530366983`*^9, 3.721718992932495*^9, {3.721749214499*^9, 
   3.721749243398*^9}, {3.7217501659630003`*^9, 3.72175016979*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwBoQNe/CFib1JlAgAAADkAAAACAAAA3ormYw4aEUByQSy7OwyOPz9bgtEt
VRJA5EyqIA3jij/vwUKTlpYTQP0k+bq9Hog/NOYSUlbCFEDT2eWAMuGFP/O+
SkdyBxZAe+SzOtDCgz9IVZI55TYXQEIYePDrB4I/F6BBYrR/GEDD3FrWgWKA
Px1Qc/CGwhlArXFspFvufT+4vbR7sO8aQLVWg2yKlXs/zd9dPTY2HED5vyiB
b1J5P3e/FvwSZx1A5a2vHo1wdz9YBFIg85EeQA4M63cNyHU/s/30ei/WH0A7
aN7AXyp0P1LaU2lhgiBAQJ/zFNrOcj8IEGEwWSYhQH1Qrsf2enE/WXgvqlLH
IUDqY6Z39k1wP3W/haJ3XSJAUxdgAd+dbj/O4A+2SgAjQJz0x/Rfpmw/8uAh
SEmYI0Abdmbvy/lqP7ET9YxJLSRAs5j+f0V4aT+tIPzs984kQNyy8IiZ+Gc/
dAyLy9FlJUCrnxcgy69mP3jSTcVZCSZAweNIcdVnZT9Hd5g9DaImQCqP9Omp
TWQ/sU6kaMI3J0D2NqZHYE1jP1gA5K4l2idARgBa2fpLYj/KkKtztHEoQD5T
lLdGbWE/efumU/EVKUDxzre1PI1gP8OYY+YvtylAT04xElWCXz/YFKj3mU0q
QCRpC3lpH14/KmsgJLLwKkB0jdhYO7hcP0egIM/1iCtAl8Zdm/J+Wz//B+Is
Ox4sQB9ioijDXlo/9EnXpS7ALEByHusskzlZP7RqVJ1NVy1Ap+gq3dA4WD/A
ArZm8FktQNcPBz95NFg/y5oXMJNcLUB1co3KIjBYP+LK2sLYYS1A4ZPzXHkn
WD8RK2HoY2wtQIj2qWM0Flg/buttM3qBLUBzT3qd4fNXPylsh8mmqy1AODi+
8RWwVz80BOmSSa4tQLPoI8Diq1c/QJxKXOywLUBrCF+rsKdXP1jMDe8xti1A
S4fG1k+fVz+GLJQUvcAtQH+Jenabjlc/5OygX9PVLUCQLgODZ21XP/CEAil2
2C1AR9dU8EVpVz/7HGTyGNstQMcRU3QlZVc/Ek0nhV7gLUArzNC+51xXP0Gt
rarp6i1AgGY7U3lMVz9MRQ90jO0tQKyHWmtgSFc/WN1wPS/wLUCOlCGXSERX
P3ANNNB09S1AvzAoKBw8Vz98pZWZF/gtQHCGqIwHOFc/hz33Yrr6LUBxVFID
9DNXP5LVWCxd/S1AU2TGi+EvVz+ebbr1//8tQHCopSXQK1c/lUOY3A==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
+n/1EwsLbPQ421VwWY4D/wfGgmbu
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwd1nk81M//APBNjhKShOTYSwg5k6JeU+TKfUWuXUc6kCOFVBt2V5eKDoQ2
UaJ8VVIJb+mkkiNHopA79xlRv/n89p99PB+vec+8ZuY9r3lTfA47+PORSKT8
JSTSf/8z36te089d2U76/x+bmDPWDtzREgYkEoseH8Ym/Ev6nGVaYrHtvs1h
19QXT680OY+dtCY3nE3cmK6sXtqShP0kknuETdSezkv7d+H6f8//TIpgE/xi
SQf/GKdj3/F5e5RNyH0yyvgTwwMSK55QiGQT+sla7LnmLOxRk9QoNmHnRg+a
1ckBEtqarnucTRxUlHGevnAXSBUfi3/FsImb+f/o48b3gcQYFClgsYmS0EmR
0cwC3H6V4pNYNjF4Izx6JqYQ95ef3BCPx/cJ8JlqfoQ9dMv+DJtYtYvpEi5Q
hG04UXCOTSiouFtO6DwBUm2ziGIimzAYsdEZu/AU9//nk24ymwiK1ucbMi4F
0rKAy9KZbOJQFV/deHMlkMZWp6gUs4mJkn+WD4NfASklp935OZuIvL/wOkTg
NZD8HBbOlrIJzsWZZ6M6b4C0kNsn/IpN8JwHecMX3gGp6IeJcy2b+NJZFzJg
/BGPvxhb9gvnc8IuYay5Ho/fveIBjUOQfvY73FVtANJ1R9dQZQ7RZX5a3us4
trCau64ah8iRfPTog8IXIM0vv/A/HQ6hfn91+x3/RiCJjuvH7uAQW781aXtO
NgOp9OMQ04tDyO04vLB6VwuQ/M/c62NyiL93hN5VX8M+cqMzwJ9DvAwz8DDY
+hVYrdUKewI5hLlwGmf16VZgfZOOHYriEC5bPL9VibUDS78nuSGZQxjcnM5h
MbCd8nij1ziErEBiyOZH7UBSH1tcmsYh2mvLBXKcvwPJ2dBwDY9D+O0na7HS
fwDpzL0fTfkc4vmH0J3r1nQCq3Si/eVLDpH3t+zuzDbsoETbPa85RJq2sGj9
vk4gtZTd/PmWQ8Rcz2pOeNYJ6AI5ueMDh0C+DYEz7l1Akg3rPtDIId7N612v
y/oJpASze/d7OcRBJVrb7PufwFKhkbn9HELMbhVFYRQ7MLjedRDPJ2c476Bh
N1Q0XXndOcwhum3vlC/90g2s0YjhhCkOkRB9ZemGeewFGSu5GQ6hlhNrbkfu
AdbBV7fvzHKIsHmv+vRA7PphCm8e71eOdO8mgV4gtYXdUiJxiezPAmoear1Q
QfMRC1nCJczmJw/H2mO7iOx8yMclEm1r52oyegE9qeyXFuASOtHl26df4eej
x+23CXKJxuz7cesGcfs0hWA3IS4hN58gul+/DyqiBQoilnOJCvoxh0QP7KAz
VRHCXMLX1v96UWwfsE5ncgNXcIm87B2UJZ9x/IBB+zZRLmHzWXOf8nQfkPok
g2XEuMT4nHy+9bp+YFhpXRnANrCd10sL6Afe9q9XDotzibao/qiKC/1AOqd7
kL6KS5zKbirvfdwP5Aa/6s/Y1M+vl4q29gPLYefjUAku8XbukbkuaQAY3h+p
wqu5xEH6rQtu6weA9VJDOhVb1PZi/SmrASAJvUhUkOQSTtmHPD6mDADvdOQS
0TVc4neN262Jctx+Wm4+AvvGnFmvTM8AdFz8EtKIvZ2urwYrBoFl+sJPTYpL
dNnQQ/y1BwGRVzcew+ZESTw5t2cQSGnGL0uwN2ST5h+eGIQKya8qU9g1NSPb
W24PQodJ/Aq6NJcInWuL+1uF41lrD1hiS9I/vKePDQK57dKOAOxnNs9Fd0v9
AmTNfzUa2yPqrkOo0S8gRxT6xmOTsq9ev+7zCzoOTz74z9k1cW1lCdjhVkeO
Y5vNhVK6C34Bz9r96X7sQRpjn3Ajfr7rxzEr7EQbm3ytP7+A8eB58XpsnSij
MRfKEDAs+o7M4nwbb2/YdMJsCNAY+3E5dmSNTPTtIGyhuvAYbLk5QaIqeQgq
silPtbAraNNLx55jy42c/IbXy9fmp7lUxxDwEqs+xmALRtVdMBIcBlaIb5Yk
dt5tot5HfRh4NO6S23g/pmS94qvsh4FUHBG0ARuSFjZpHRuGCtmXr3Px/n1h
bUldfInbr4nadhbvt8LvZku/vmEg71L2Hcbvw4HDRxeqRUagorwoxgz7r+dj
75Q9I4Amxq90rOQS5o32q/7FjACDnZ6iiJ1sNVbpnzUCZJ91ac74/VMx1Fiv
OzwCLPaJW3dEuIS9zN2hT7GjwDv+VqJ9GZdIv7grUy93FBith5y/4PPQK9ht
e+PTKJC/f35Qic9LWfQlNz2RMagQNH4Qz88lHA58Kl2yZwxYbybNM/9xiNns
9DVPDuD4M9oNm78cIr3jUPD+mDFgZHxUnFngEH17hMmfb41BR5lu7QZ8nmNM
zeLSh8ZgbHfKdjVcDyixUm22/7BdXK9eneAQb8t69JZKjENt4BmYHeMQqzbF
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
R50hM6hk+t8/DRRnELmzdMgZ/g8yrlE1
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV13k4lF0bAPBBligkW5LEbIQoSUXnVipb1pmxVkgRLcKYsSQppTdKqEQJ
EUm9EhLpEZKdyPIKqRAtyL77zvfXXL/rzHnO/Zzlvs+zyfWs9XFeEonUwUMi
/f93qqe6gnw9bo/lszAbK0U/Ynaf1imDDh/kPYVU7X3YxPGiH0zZjjAEJQNH
T2A3NBdMihlGolLC1TUYO3GyrIavIwaN+t/dkojddDErYTnqLqJ3/60ow14h
GuM5v+8+IsXrbxzHlq/XezAfnIw0c+p2qfmyCZ1YzfDZ9lRU2haw9gy2pT35
9PTWdGQp+CKtENtzoyxzMioDJU+dGhLxYxOX+0X0xwefoNAesy537IdPl8l/
92Uj7xVRnDrsonPjq0aSniPub/H8nWw28TPRN3AqOAdFi7jd+Bd7hau760R7
LtK8LTGb588m1ux3Yfny56HewukgQw6bUKA7moxtzUehTz6c78LWHTbfOhr1
ChmJ0nsoAWxi/0cj6tniQkRatVatHds6b6/c8OBrRBdMa48OZBOnA3V4f+97
gzJnKpU3BLOJwMOaU57nSlDTp5YXI9gRoPpzKOktEioM4dacZxNWfGJD48Gl
iGvrEBF/gU14VfN+/NtehkrZ+nG3L7GJsaJlkxdnypGmY0VN5mU2wc1eqPDm
r0DxXmED5eFs4srNqcKRre9R8obK5DURbCKZ+TP5T9QHJHt/b8/KKDZBPfhD
7hm5CuVMsBcdbrCJZ7p9caeKqxAp8kray5t4vtb3RPwarEaKdTT7oBg28enr
R++hfXUoJz1xyTWeTTi0NPzM7KxDg9lly8P32MTXilo3j3P1SFOgXTkskU0M
Z7y3+5HUgJqiApNLkvD8vnJKHgtuQvEJwzNX0/F8nreMGG1vRt5D9dZH8tgE
6fugdYZKC0p+39gfWsAmvhld3HAkCDvqV2dWIZtIl8zNrVX4hDSVLj2SLGET
atlrux8fb0U5pICX+pVsYtfnNq3D4+2IzrBsav2PTbB2Hv5cLdqNxBf7Xe7z
+xO6DyfTQ527Ua/U94dXhfwJOf4b3jtycTthMcoR8Se6m97ypzN7UMTrgfPu
a/wJNw9FzdD7X9DgwY69oRv8ide15/aul/qKeqMzdkbo+BMf5rTvfkz9jiJo
/mfPefkTnhTlrumq78hZgM805Yw/IWq5ZpPCyHdUlXvtTss5f4KV/ifLc3cf
8kihGSKuP9Fn8fgt36c+VHpex1Mr3J8gpcsMbOcfQM7b5K/6PcTxWsxpJ7gP
ol6H2hNSrf5E1iOi2VXtDwLp41p9BhxiQu7I5WqrP6gUHNW27+cQKGZhuybn
DypcJtzCjTjEp9Cd9xbf/UGkrsvHlC04xNLhl0fjbYdRcmyWL8OJQ1jJZvyu
DxtBdkm7vlz05xDBBw5euv97FIXe90+reMIhNoVJd1ksj6Jo/rKqoWwOUVnS
r80n8RfJmpv9XZXDIdZsvzxwcsdfpLnsv/lQAYd4rPzOeEfYXyTuf/lQXhmH
aCLtFm+WGUOhehaE1GcOoVys8UBw3zhStDKr+bWSS4j7uL22tB1HpG3Z4Uur
uMQCPaH1ntc4ypEXf71anEu03eEXVYsbR7qsLtdN0lziH5+uEMv+cTTKr1cu
r8QlRlX+cb53dQLJyu+adtzJJd7G9ytvrptEHn2C1e/cuMRTi/Xg1zuJzLJD
vlu7c4l4ASunkolJ5Jd24OyXk1zCx+9NnMWGKTQ45PP25xkuQbGM5fc7M4Uy
VS9wq7lcIlLQ4Mcb8WmUnJgRlHKdS9j7388yZ86gzBTPtdHPuISiyiMdfY8Z
lPPROc/lXy4x8PlJ2eagGaR7aThX4wV+vsGrTqGUGZSXtbuwKA/Hv6pZuPz3
DBosEvFJKOYSb1IFvXZcnkWjd8R3s6u4RBhTdJpydxZ1RFz9PFfNJYyEpC5J
Zs2iqqij94NquUTraaXEv42zaLDZ49yZBi4xrKtf+3T9HMp+8Up43ScusbHR
Z7PiyzkkJCSudqEHx3Mx4JVo5RyyzJQzzf/CJbK1Q/ctdsyh3pqtdgO9XEI3
Icqxc2kOVTi6ae38ziUsj2dejzOZR5Z947EpP7iEtOy/MpcOz6PSt8btzwe5
RFdN/qNz3vMokv/EeMEQlzipWV5sfmceyRavyn71C8c/3/1L6Ns8cpqa+hw4
guN/3seZnphHVZEKqUdGuYSoyy++AcEFNOpuoKH/l0skVs6sL1dfQH75tTd/
jnGJvFtrzc4HLKAIspm+wBSXCDSU6/CKXECD74/NENgwrejm8HABdcxInPSb
5hJ1ThrBO94voFMhhcfqZ7hEP804+6/4IiqUyLiO5rnEGLNgnk1ZRJpIOLQT
m3RZ2XRu5yLyuC6mfnaBS8j3Lg7xHltEE93DmeGLXEJV1GvnVc4iyqzv8RVc
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
2yMHnizaoP8Bopu96w==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
8zLD79HUwgILzDKGru8j/h+LR4YK
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 15}, {-0.01449003782244387, 0.014671770715296548`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"G-T0\"", "\"G-T1\"", "\"G-T2\"", "\"G-T3\"", "\"G-T4\"", "\"G-T5\""},
       "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.721591265591*^9, 3.721591272953*^9}, {3.721591325567*^9,
    3.721591346925*^9}, 3.7215914086289997`*^9, 3.72171603865652*^9, {
   3.7217172339968896`*^9, 3.721717257631241*^9}, 3.7217173536187315`*^9, 
   3.7217189938445473`*^9, 3.721748539349*^9, {3.721749215211*^9, 
   3.721749244645*^9}, {3.7217501667279997`*^9, 3.721750170374*^9}, 
   3.72219166752*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"fs2", "/", "d"}], "/.", 
    RowBox[{"k", "\[Rule]", "3"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "0", ",", "0.000001"}], "}"}]}], "]"}]], "Input",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.721592660474*^9, 3.721592714035*^9}, {3.721592746554*^9,
    3.721592816309*^9}, {3.721592846323*^9, 3.721593014245*^9}, {
   3.721593048398*^9, 3.721593138927*^9}, {3.72159317558*^9, 
   3.721593201811*^9}, {3.721593270474*^9, 3.7215933644849997`*^9}, {
   3.7217171225755167`*^9, 3.7217171677981033`*^9}, 3.7217173326425314`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVzX881HccwPHz84TyncOqrQeae8w69MMakXdWnVSS/Ezp/Fgo+RGXkhCz
K7/msomc8yPnx5lzfeRHGn0+o2xCpSO1MqQlVByLa5ey9sfr8fzzZRoU5R6s
SqPR9nzsf1MPXhc7Ko0cFnum9J8C/0ZtCF08wJhzuPZw598qTUHYzvBcvZih
Ae5obA/7QzROCWdfz2EYwnXjwawipxRstpy5+RyDCRVqEbLF7At4/nVuYjJj
I9xu4cnuSEvw8COX4kQGG/pORpSUbpFij7tiqwSGF1TXT5XF9rbiqq6jPSHz
wXB5+Ly2b3QPXows7SpxOw4LJ1JmKpL6cXY9P3JbZiwMa203bjj9GE/GOd/w
szkD3BPKafOjI3iFzoz2jm+TgZ7t7Vu/7xk2E5RlCYxTIbI2XugTPoZLNY2k
6XIexDRB0KuICaw/fLpfPScNvOZcVmdZv8IvT23ttQvLBGX5n0coy2nckvCu
d0E/G/jqClnxvBwnrW2xtfS5AFPLOJJxl1kso9VwN7XlwOybOY7PjX+wqRaj
TofxM/w2v2jL15/DoihLX/uUXFDW+HcOpMzjoQ7z+83jFyHe3Ktt7oUCG7gL
dy/Y5MPakengF9b/4kRoX1ckugQmUd2yBwVKPBoQsFxdUQDmw5rWemPvcPwz
FNYZUgicoVU2pi7vcbfnaNbje0KoLngdPVD9AX+6kFl31aQYRlhOJHVqEeep
jTuO/1gCSVfsg7mVNJJuwpmIji6FX9eH2u/aqUJETbaCvOWXIY27f5Q9rkIe
JoTTJu9cBg+0tXFJrirR4gyGmpwqg5W0bndkrUY8oip+4FmJgJmR1KQ7okaU
Ck56zqgIJJ9NawvT1ElJoSc/OaMcnJ/yZduYGoQTJdpV7FgBa5gHHbLvapCV
HCt6yWQFePDdxTrhmsT6VnWNU04ltD4P9ZvRoJPgA0kaq5yqYFjvAYRK6OSi
Dj9gYKoKnEZHWHY7tMjQq7fHcYUYBh95/ZU1pUWYE8Xfp7tVQ7n8vJ97xhLS
6bcx4Z2iGooMmbuFq7UJj8ZkCWt/AbmO/znPP7SJI3F7YuxTA7aTRQNlATrE
QPrAUbZMAmcadjm5aeoStsHubNZNCUQ2WPTwxLqEe3FhMPRYLRg5rzSI2bKU
tDjRn8pMpQD5lzoko0uJCsN1zKRHCoWtQiKNX0ZE3rw+Q+4VWNMcOOurp0fW
Ptdu+dwAwZf2Gl3bkB7JspjRLT2C4DSjEbS+oIgb+6tjK8IQvF5/ytXbjCIM
TuDtn44hyMt9fqCcSREB/z6PF4mAvb/zqKM5Rapm6z6EnUDQvEHqH2dJkfbm
GPnGZAT9fQ6SFzYUebv9TV93PoKhhaSumy4UaT1ksYFdgIBF/I5/4kqRsycP
X8ACBOZ2cn3/vRTRFPe71BUhcOBtclXu+/jXaezIEyFwExwqWudDEav7sdcC
ryDYMG5RLAykyMxEreEThCCXma43GUSRBtUxrudVBE/aShJtDlPE/mvvdTsa
EQzD+72yEIo4539TbdGCwJSTcoceThFdFEmvbEVwtrLZzCuCIvc6K4ONMQJ5
oSSuLJIi3kqj1fptCOwbuo0coimygrE3ObMdgWqYIiAjhiKDrPND6rcQtM+O
VD3kUqR0O9mc1IGgNz/tpVksRb47pBAofkcQVzbFijlJkf8AdvxjEw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 1.*^-6}, {-0.00006280013893323634, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7215926716140003`*^9, 3.721592714538*^9}, {
   3.721592759618*^9, 3.721592803927*^9}, {3.721592856639*^9, 
   3.721592984775*^9}, 3.721593014862*^9, {3.7215930490889997`*^9, 
   3.721593139297*^9}, {3.721593176374*^9, 3.7215932022530003`*^9}, {
   3.721593271153*^9, 3.7215933648710003`*^9}, 3.721716037203437*^9, 
   3.7217171691331797`*^9, 3.721717335450692*^9, 3.721748539384*^9, 
   3.722191667557*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"G", "-", 
       RowBox[{"T", "[", 
        RowBox[{"[", "6", "]"}], "]"}]}], ")"}], "/", "d"}], "/.", 
    RowBox[{"k", "\[Rule]", "5"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "0", ",", "0.1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7217213771008615`*^9, 3.7217214867291317`*^9}, {
  3.7217215300006065`*^9, 3.721721545052468*^9}, {3.7217216130023546`*^9, 
  3.721721621343831*^9}, {3.721721684067419*^9, 3.721721719714458*^9}, {
  3.721749483176*^9, 3.721749487073*^9}, {3.721750887535*^9, 
  3.721750888532*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
bypY2J3l7xPS0ij4QVe9Hof9f8FMC3g=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{651., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 0.1}, {-0.032196226071521075`, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.72172138214715*^9, 3.721721487466174*^9}, {
   3.7217215306896467`*^9, 3.7217215454684916`*^9}, {3.72172161363039*^9, 
   3.7217216217578554`*^9}, {3.7217216885226736`*^9, 3.7217217200394764`*^9}, 
   3.721748539416*^9, {3.7217494837139997`*^9, 3.721749487499*^9}, 
   3.721750889624*^9, 3.722191667616*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"k", ">=", "0"}], "}"}], ",", 
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"T", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "0", ",", "5"}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.721751199083*^9, 3.721751233826*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox["1", 
    RowBox[{
     SuperscriptBox["k", "2"], " ", "\[Pi]"}]], "+", 
   FractionBox[
    RowBox[{"\[Pi]", " ", 
     SuperscriptBox["d", "2"]}], "10"], "+", 
   RowBox[{
    FractionBox["1", "20"], " ", 
    SuperscriptBox["k", "2"], " ", 
    SuperscriptBox["\[Pi]", "3"], " ", 
    SuperscriptBox["d", "4"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "d", "]"}], "6"],
    SeriesData[$CellContext`d, 0, {}, 0, 6, 1],
    Editable->False]}],
  SeriesData[$CellContext`d, 
   0, {$CellContext`k^(-2)/Pi, 0, Rational[1, 10] Pi, 0, 
    Rational[1, 20] $CellContext`k^2 Pi^3}, 0, 6, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.721751200486*^9, 3.721751234525*^9}, 3.722191667979*^9}]
}, Open  ]]
},
WindowSize->{1920, 998},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"10.2 for Microsoft Windows (64-bit) (July 7, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 752, 19, 31, "Input"],
Cell[1335, 43, 383, 8, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1755, 56, 791, 22, 31, "Input"],
Cell[2549, 80, 673, 13, 30, "Message"],
Cell[3225, 95, 783, 19, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4045, 119, 632, 14, 31, "Input"],
Cell[4680, 135, 47070, 783, 244, "Output"]
}, Open  ]],
Cell[51765, 921, 920, 19, 31, "Input"],
Cell[CellGroupData[{
Cell[52710, 944, 95, 1, 31, "Input"],
Cell[52808, 947, 314, 7, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53159, 959, 986, 27, 31, "Input"],
Cell[54148, 988, 433, 9, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54618, 1002, 677, 17, 31, "Input"],
Cell[55298, 1021, 812, 20, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56147, 1046, 790, 19, 31, "Input"],
Cell[56940, 1067, 504, 12, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57481, 1084, 1290, 26, 31, "Input"],
Cell[58774, 1112, 534, 11, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59345, 1128, 421, 8, 31, "Input"],
Cell[59769, 1138, 478, 9, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60284, 1152, 703, 15, 39, "Input"],
Cell[60990, 1169, 1072, 26, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62099, 1200, 1115, 29, 31, "Input"],
Cell[63217, 1231, 916, 21, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64170, 1257, 413, 8, 31, "Input"],
Cell[64586, 1267, 462, 8, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65085, 1280, 495, 10, 31, "Input"],
Cell[65583, 1292, 515, 8, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66135, 1305, 734, 16, 31, "Input"],
Cell[66872, 1323, 362, 7, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67271, 1335, 874, 22, 31, "Input"],
Cell[68148, 1359, 267, 5, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68452, 1369, 275, 6, 31, "Input"],
Cell[68730, 1377, 346, 8, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69113, 1390, 1106, 23, 31, "Input"],
Cell[70222, 1415, 2452, 76, 62, "Output"]
}, Open  ]],
Cell[72689, 1494, 827, 24, 31, "Input"],
Cell[CellGroupData[{
Cell[73541, 1522, 162, 3, 31, "Input"],
Cell[73706, 1527, 385, 11, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74128, 1543, 714, 20, 31, "Input"],
Cell[74845, 1565, 32221, 541, 224, "Output"]
}, Open  ]],
Cell[107081, 2109, 534, 16, 31, "Input"],
Cell[107618, 2127, 479, 14, 31, "Input"],
Cell[CellGroupData[{
Cell[108122, 2145, 119, 3, 31, "Input"],
Cell[108244, 2150, 304, 8, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108585, 2163, 148, 3, 31, "Input"],
Cell[108736, 2168, 367, 8, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109140, 2181, 222, 4, 31, "Input"],
Cell[109365, 2187, 632, 16, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110034, 2208, 145, 3, 31, "Input"],
Cell[110182, 2213, 673, 18, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110892, 2236, 140, 3, 31, "Input"],
Cell[111035, 2241, 893, 24, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111965, 2270, 140, 3, 31, "Input"],
Cell[112108, 2275, 953, 26, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113098, 2306, 299, 8, 39, "Input"],
Cell[113400, 2316, 3288, 91, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116725, 2412, 290, 5, 31, "Input"],
Cell[117018, 2419, 5016, 135, 118, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122071, 2559, 1104, 24, 31, "Input"],
Cell[123178, 2585, 82629, 1486, 235, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[205844, 4076, 834, 19, 31, "Input"],
Cell[206681, 4097, 18071, 346, 235, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224789, 4448, 486, 15, 39, "Input"],
Cell[225278, 4465, 220, 6, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[225535, 4476, 189, 6, 31, "Input"],
Cell[225727, 4484, 2844, 83, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228608, 4572, 1170, 31, 31, "Input"],
Cell[229781, 4605, 364, 9, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230182, 4619, 795, 24, 31, "Input"],
Cell[230980, 4645, 404, 12, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[231421, 4662, 828, 25, 31, "Input"],
Cell[232252, 4689, 472, 13, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[232761, 4707, 324, 11, 31, "Input"],
Cell[233088, 4720, 355, 11, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[233480, 4736, 639, 19, 31, "Input"],
Cell[234122, 4757, 203, 5, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234362, 4767, 687, 21, 31, "Input"],
Cell[235052, 4790, 208, 5, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[235297, 4800, 592, 16, 31, "Input"],
Cell[235892, 4818, 374, 8, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236303, 4831, 458, 14, 31, "Input"],
Cell[236764, 4847, 227, 6, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[237028, 4858, 798, 19, 31, "Input"],
Cell[237829, 4879, 65936, 1195, 222, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[303802, 6079, 613, 13, 41, "Input"],
Cell[304418, 6094, 3055, 61, 203, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[307510, 6160, 641, 16, 31, "Input"],
Cell[308154, 6178, 5095, 95, 403, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[313286, 6278, 374, 11, 31, "Input"],
Cell[313663, 6291, 788, 23, 51, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
